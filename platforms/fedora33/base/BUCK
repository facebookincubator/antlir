load("//antlir/bzl:image.bzl", "image")
load("//antlir/bzl:oss_shim.bzl", "kernel_get")
load("//antlir/bzl:systemd.bzl", "systemd")
load("//antlir/linux/vm/console:defs.bzl", "console")
load("//antlir/linux/vm/generator:defs.bzl", "generator")
load("//antlir/linux/vm/network:defs.bzl", "network")
load("//antlir/linux/vm/notify:defs.bzl", "notify")
load("//antlir/linux/vm/ssh:defs.bzl", "ssh")

snapshot_fedora_override = image.opts(
    # This is the default, but I am making it explicit since the target is
    # named fedora
    rpm_repo_snapshot = "//snapshot:fedora33",
)

image.layer(
    name = "fedora33",
    features = [
        image.rpms_install([
            "basesystem",
            "coreutils",
        ]),
    ],
    # flavor_config_override = snapshot_fedora_override,
    visibility = ["PUBLIC"],
)

image.layer(
    name = "fedora33.vm",
    parent_layer = ":fedora33",
    features = [
        image.rpms_install([
            "btrfs-progs",
            "iproute",
            "openssh-server",
            "sudo",
        ]),
        console.autologin(),
        network.host(),
        generator.mounts(),
        notify.install(),
        ssh.test_only_login(),
        # Set a default hostname
        # NOTE: this will ultimately become dynamic, this is temporary
        # to unblock work.
        image.install("hostname", "/etc/hostname"),
        # We want to allow logins before the system is finished booting
        # up.
        image.remove("/usr/lib/tmpfiles.d/systemd-nologin.conf"),
        # systemd-networkd isn't enabled by default in fedora.
        systemd.enable_unit("systemd-networkd.service"),
    ],
    # flavor = "fedora33",
    # flavor_config_override = snapshot_fedora_override,
    runtime = ["systemd"],
)

image.package(
    name = "fedora33.vm.btrfs",
    format = "btrfs",
    layer = ":fedora33.vm",
    loopback_opts = image.opts(
        seed_device = True,
        writable_subvolume = True,
    ),
    visibility = ["PUBLIC"],
)
