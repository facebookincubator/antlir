# @noautodeps

load("//antlir/bzl:image.bzl", "image")
load("//antlir/bzl:oss_shim.bzl", "rust_binary", "third_party")
load("//antlir/bzl:systemd.bzl", "systemd")
load("//antlir/bzl/image/feature:defs.bzl", "feature")

rust_binary(
    name = "bin",
    srcs = ["broken_generator.rs"],
    allocator = "malloc",
    crate_root = "broken_generator.rs",
    link_style = "static",
    nodefaultlibs = True,
    unittests = False,
)

image.layer(
    name = "layer",
    parent_layer = "//metalos/initrd:initrd",
    features = [
        feature.remove("/usr/lib/systemd/system-generators/metalos-network-generator"),
        feature.install(
            ":bin",
            "/usr/lib/systemd/system-generators/metalos-network-generator",
            mode = "a+rx",
        ),
        image.ensure_subdirs_exist("/etc", "systemd/system"),
        systemd.install_unit(
            "emergency-sentinel.service",
        ),
        systemd.enable_unit(
            "emergency-sentinel.service",
            target = "emergency.target",
            dep_type = "requires",
        ),
        # @oss-disable: "//tupperware/image/features:fb_infra_support", 
    ],
)

image.rust_unittest(
    name = "broken-generator",
    srcs = ["test_broken_generator.rs"],
    crate_root = "test_broken_generator.rs",
    layer = ":layer",
    boot = True,
    deps = ["//metalos/lib/systemd:systemd"] + third_party.libraries(
        [
            "anyhow",
            "slog",
            "slog_glog_fmt",
            "tokio",
        ],
        platform = "rust",
    ),
    container_opts = image.opts(boot_await_dbus = False),
)
