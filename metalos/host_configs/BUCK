load("//antlir/bzl:oss_shim.bzl", "thrift_library")

# @oss-disable: facebook = True 
# @oss-enable facebook = False

thrift_library(
    # @autodeps-skip
    name = "api",
    go_thrift_namespaces = {
        "api.thrift": "metalos.host_configs.api",
        "boot_config.thrift": "metalos.host_configs.boot_config",
        "host.thrift": "metalos.host_configs.host",
        "packages.thrift": "metalos.host_configs.packages",
        "provisioning_config.thrift": "metalos.host_configs.provisioning_config",
        "runtime_config.thrift": "metalos.host_configs.runtime_config",
    # @oss-disable: }, 
    go_thrift_src_inter_deps = {
        "api": [
            "boot_config",
            "packages",
            "runtime_config",
        ],
        "boot_config": ["packages"],
        "host": [
            "boot_config",
            "runtime_config",
            "provisioning_config",
        ],
        "provisioning_config": ["packages"],
        "runtime_config": ["packages"],
    # @oss-disable: }, 
    languages = ["rust"] + [
        "cpp2",
        "py3",
        "go",
    ] if facebook else [],
    # @oss-disable: py3_namespace = "metalos.host_configs", 
    rust_crate_name = "metalos_thrift_host_configs",
    rust_gen_metadata = True,
    thrift_srcs = {
        "api.thrift": ["Metalctl"],
        "boot_config.thrift": [],
        "host.thrift": [],
        "packages.thrift": [],
        "provisioning_config.thrift": [],
        "runtime_config.thrift": [],
    },
    # very few targets should be able to have visibility into the raw thrift
    # interfaces, since it is much easier to use it incorrectly than this safer
    # native rust wrapper
    visibility = [
        # safe rust wrapper and its tests
        "//metalos/host_configs/rust:metalos_host_configs",
        "//metalos/host_configs/rust:metalos_host_configs-unittest",
        # easier to use thrift defaults in this contained lib
        "//metalos/host_configs/tests:example_host_for_tests",
        "//metalos/host_configs/tests:example_host_for_tests-unittest",
        # the proxy needs raw thrift for a variety of reasons, among them the
        # fact that certain internal parts of the proxy don't respect some of
        # the type guarantees we normally do (eg uuid is an actual uuid)
        "//metalos/host_configs/facebook/proxy/...",
        "//metalos/host_configs/facebook/iaas_config_provider/...",
        # metald requires raw thrift access to instantiate the thrift server
        "//metalos/host_configs/facebook/metald/...",
        "//metalos/metald:metald",
        "//metalos/metald:metald-unittest",
        # this is a config provider for corp
        # @oss-disable: "//ee_provisioning/corp_config_provider/...", 
        # @oss-disable: "//netos/...", 
        # facebootd is a config provider
        # @oss-disable: "//syseng/provisioning_v2/faceboot/server/...", 
        # @oss-disable: "//metalos/metald/facebook/...", 
    ],
    deps = [
        "//common/fb303/if:fb303",
        "//metalos/host_configs/facebook:host-facebook",
        "//metalos/host_configs/facebook/proxy/if:deployment_specific",
    ] if facebook else [],
)
