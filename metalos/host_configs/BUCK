# @noautodeps

load("@bazel_skylib//lib:paths.bzl", "paths")
load("//antlir/bzl:image.bzl", "image")
load("//antlir/bzl:oss_shim.bzl", "buck_filegroup", "rust_library", "thrift_library")
load("//antlir/bzl/image/feature:defs.bzl", "feature")

# @oss-disable: facebook = True 
# @oss-enable facebook = False

rust_library(
    name = "example_host_for_tests",
    srcs = ["example_host_for_tests.rs"],
    deps = [":api-rust"],
)

thrift_library(
    name = "api",
    languages = ["rust"] + [
        "cpp2",
        "py3",
    ] if facebook else [],
    # @oss-disable: py3_namespace = "metalos.host_configs", 
    rust_crate_name = "metalos_host_configs",
    thrift_srcs = {
        "api.thrift": ["Metalctl"],
        "boot_config.thrift": [],
        "host.thrift": [],
        "packages.thrift": [],
        "provisioning_config.thrift": [],
        "runtime_config.thrift": [],
    },
    visibility = [
        "PUBLIC",
    ],
    deps = [
        "//metalos/host_configs/facebook:host-facebook",
        "//metalos/host_configs/facebook/proxy/if:deployment_specific",
    ] if facebook else [],
)

buck_filegroup(
    name = "all_starklark_files",
    srcs = glob(["**/*.star"]),
)

feature.new(
    name = "generators",
    features = [
        image.ensure_subdirs_exist("/usr/lib/metalos", "generators"),
    ] + [
        feature.install(
            src,
            "/usr/lib/metalos/generators/{}".format(paths.basename(src)),
        )
        for src in glob(["generators/*.star"])
    ],
    visibility = ["//metalos/..."],
)
