load("//metalos:defs.bzl", "rust_library")

rust_library(
    name = "find_root_disk",
    srcs = ["find_root_disk.rs"],
    crate_root = "find_root_disk.rs",
    test_deps = [
        "tempfile",
    ],
    unittests = [
        "vm",
    ],
    deps = [
        "anyhow",
        "udev",
    ],
)

rust_library(
    name = "expand_partition",
    srcs = ["expand_partition.rs"],
    crate_root = "expand_partition.rs",
    unittests = [
        "vm",
    ],
    deps = [
        "anyhow",
        "gpt",
        "nix",
    ],
)

rust_library(
    name = "generator_lib",
    srcs = ["generator_lib.rs"],
    crate_root = "generator_lib.rs",
    test_deps = [
        "maplit",
        "slog_glog_fmt",
    ],
    deps = [
        "anyhow",
        "serde",
        "serde_json",
        "slog",
        "//metalos/lib/systemd:systemd",
    ],
)

rust_library(
    name = "shadow",
    srcs = ["shadow.rs"],
    crate_root = "shadow.rs",
    deps = [
        "anyhow",
    ],
)

rust_library(
    name = "send_events",
    srcs = ["send_events.rs"],
    crate_root = "send_events.rs",
    test_deps = [
        "http",
        "maplit",
        ":http_test",
    ],
    unittests = [
        "container",
        "plain",
    ],
    deps = [
        "anyhow",
        "async-trait",
        "reqwest",
        "serde_json",
        "slog",
        "structopt",
        "tokio",
        "url",
    ],
)

rust_library(
    name = "http_test",
    srcs = ["http_test.rs"],
    crate_root = "http_test.rs",
    test_deps = [
        "anyhow",
        "maplit",
        "reqwest",
    ],
    unittests = [
        "container",
    ],
    deps = [
        "http",
        "hyper",
        "tokio",
        "url",
    ],
)
