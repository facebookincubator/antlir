load("//antlir/bzl:shape.bzl", "shape")
load("//metalos:defs.bzl", "rust_binary")
load("//metalos/bzl/service:service.bzl", "native_service")
load("//metalos/bzl/service:service.shape.bzl", "cmd_t", "exec_t", "runas_t", "service_t")

rust_binary(
    name = "demo-service",
    srcs = glob(["src/**/*.rs"]),
    unittests = False,
    deps = [
        "anyhow",
        "nix",
        "structopt",
        # @oss-disable: "//metalos/lib/service/tests/demo_service/facebook:facebook_checks", 
    ],
)

native_service(
    service = shape.new(
        service_t,
        name = "metalos.service.demo",
        config_generator = "//metalos/lib/service/tests/demo_service/generator:generator",
        exec_info = exec_t(
            environment = {
                "FB_SERVICE_ID": "wdb/demo-service",
            },
            pre = [cmd_t(
                args = [
                    "--run=${RUNTIME_DIRECTORY}",
                    "--state=${STATE_DIRECTORY}",
                    "--cache=${CACHE_DIRECTORY}",
                    "--logs=${LOGS_DIRECTORY}",
                ],
                binary = "//metalos/lib/service/tests/demo_service:demo-service",
            )],
            # simulate a real service that would needs to be restarted on
            # version updates
            run = [cmd_t(
                args = [
                    "-c",
                    "sleep 12h",
                ],
                binary = "/bin/bash",
            )],
            runas = runas_t(
                group = "demoservice",
                user = "demoservice",
            ),
        ),
    ),
)
