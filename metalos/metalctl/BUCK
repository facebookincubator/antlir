load("//antlir/bzl:shape.bzl", "shape")
load("//metalos:defs.bzl", "rust_binary")
load("//metalos:metalos_tests.shape.bzl", "container_unittest_opts_t", "unittest_opts_t")

rust_binary(
    name = "metalctl",
    srcs = glob([
        "src/*.rs",
        "src/update/*.rs",
    ]),
    crate_root = "src/metalctl.rs",
    rustc_flags = ["--cfg=blkid"],
    test_deps = [
        "fbthrift",
        "http",
        "maplit",
        "tempfile",
        "//metalos/host_configs/tests:example_host_for_tests",
        "//metalos/lib/http_test:http_test",
        "//metalos/lib/systemd:systemd",
    ],
    test_srcs = glob(["tests/**/*.rs"]),
    unittest_opts = shape.new(
        unittest_opts_t,
        container = shape.new(
            container_unittest_opts_t,
            boot = True,
        ),
    ),
    unittests = [
        "plain",
        "container",
    ],
    deps = [
        "//metalos/host_configs/evalctx:evalctx",
        "//metalos/host_configs/lifecycle:lifecycle",
        "//metalos/lib/get_host_config:get_host_config",
        "//metalos/lib/kernel_cmdline:kernel_cmdline",
        "//metalos/lib/net_utils:net_utils",
        "//metalos/lib/package_download:package_download",
        "//metalos/lib/send_events:send_events",
        "anyhow",  # ~9.5k, very helpful for error handling
        "structopt",  # ~300k, but makes iterating development much easier
        # all the slog crates together add about 50k
        "slog",
        "slog_glog_fmt",
        "toml",  # load config files
        "serde",  # load config files
        "serde_json",
        "strum",
        "strum_macros",  # I <3 zero cost abstractions!
        # Needed for HTTPS requests to download images
        "url",
        "futures",
        "reqwest",
        "tokio",  # async runtime for http client
    ],
)
