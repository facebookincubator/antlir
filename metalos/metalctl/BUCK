load("//antlir/bzl:shape.bzl", "shape")
load("//metalos:defs.bzl", "rust_binary")
load("//metalos:metalos_tests.shape.bzl", "container_unittest_opts_t", "unittest_opts_t")

rust_binary(
    name = "metalctl",
    srcs = glob([
        "src/**/*.rs",
    ]),
    crate_root = "src/metalctl.rs",
    rustc_flags = ["--cfg=blkid"],
    test_deps = [
        "fbthrift",
        "http",
        "maplit",
        "tempfile",
        "//metalos/host_configs/tests:example_host_for_tests",
        "//metalos/lib/http_test:http_test",
        "//metalos/lib/systemd:systemd",
    ],
    test_srcs = glob(["tests/**/*.rs"]),
    unittest_opts = shape.new(
        unittest_opts_t,
        container = shape.new(
            container_unittest_opts_t,
            boot = True,
        ),
    ),
    unittests = [
        "plain",
        "container",
    ],
    deps = [
        "anyhow",
        "fbthrift",
        "futures",
        "serde_json",
        "slog",
        "slog_glog_fmt",
        "structopt",
        "tokio",
        "url",
        "//metalos/host_configs/evalctx:evalctx",
        "//metalos/host_configs/lifecycle:lifecycle",
        "//metalos/host_configs/rust:metalos_host_configs",
        "//metalos/lib/get_host_config:get_host_config",
        "//metalos/lib/kexec:metalos_kexec",
        "//metalos/lib/net_utils:net_utils",
        "//metalos/lib/package_download:package_download",
        "//metalos/lib/send_events:send_events",
        "//metalos/lib/service:service",
        "//metalos/lib/state:state",
        "//metalos/lib/systemd:systemd",
    ],
)
