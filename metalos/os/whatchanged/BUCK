load("//antlir/bzl:image.bzl", "image")
load("//antlir/bzl:shape.bzl", "shape")
load("//antlir/compiler:defs.bzl", "TEST_IMAGE_PREFIX")
load("//metalos:defs.bzl", "rust_binary")
load("//metalos:metalos_tests.shape.bzl", "container_unittest_opts_t", "unittest_opts_t")

image.layer(
    name = "test-layer-parent",
    # Use the test build appliance so that we have a good set of test rpms
    parent_layer = TEST_IMAGE_PREFIX + "build_appliance_testing",
    features = [
        image.rpms_install([
            # this will be removed
            "rpm-test-veggie",
            # this will be upgraded
            "//antlir/compiler/test_images:rpm-test-cheese-1-1.rpm",
        ]),
    ],
    flavor = "antlir_test",
)

# Run the tests here so that we can mount the parent layer at /mnt/parent for
# the rpm unit tests. Do some RPM actions at build time that we can pretend were
# executed on a running system to verify that `whatchanged` is able to discover
# rpm installation/removal/upgrades
image.layer(
    name = "test-layer",
    parent_layer = ":test-layer-parent",
    features = [
        image.rpms_install([
            "//antlir/compiler/test_images:rpm-test-cheese-2-1.rpm",
            "rpm-test-mice",
        ]),
        image.rpms_remove_if_exists(["rpm-test-veggie"]),
        image.layer_mount(
            ":test-layer-parent",
            "/mnt/parent",
        ),
    ],
    flavor = "antlir_test",
)

rust_binary(
    name = "whatchanged",
    srcs = glob(["src/**/*.rs"]),
    test_deps = [
        "maplit",
    ],
    unittest_opts = shape.new(
        unittest_opts_t,
        container = shape.new(
            container_unittest_opts_t,
            layer = ":test-layer",
        ),
    ),
    unittests = ["container"],
    deps = [
        "anyhow",
        "once_cell",
        "rayon",
        "regex",
        "structopt",
        "xattr",
        "//metalos/lib/btrfs:btrfs",
    ],
)
