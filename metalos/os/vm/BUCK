load("//antlir/bzl:image.bzl", "image")
load("//antlir/bzl/image/package:defs.bzl", "package")
load("//antlir/linux/vm/console:defs.bzl", "console")
load("//antlir/linux/vm/generator:defs.bzl", "generator")
load("//antlir/linux/vm/network:defs.bzl", "network")
load("//antlir/linux/vm/notify:defs.bzl", "notify")
load("//antlir/linux/vm/ssh:defs.bzl", "ssh")

image.layer(
    name = "base",
    parent_layer = "//metalos/os:metalos",
    features = [
        console.autologin(),
        generator.mounts(),
        network.host(),
        notify.install(),
        ssh.test_only_login(),
        ssh.hostkey_setup(),
    ],
    # Any vm unittest or run target can have a custom layer
    # built on top of this.
    visibility = ["PUBLIC"],
)

package.new(
    name = "base.btrfs",
    layer = ":base",
    format = "btrfs",
    loopback_opts = image.opts(
        seed_device = True,
        writable_subvolume = True,
    ),
    # Any vm run target can use this
    visibility = ["PUBLIC"],
)
