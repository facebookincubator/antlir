load("//antlir/bzl:oss_shim.bzl", "buck_genrule", "cpp_library", "export_file", "rust_library")
load(":defs.bzl", "archive", "third_party_rust_binary", "third_party_rust_library")

archive(
    name = "addr2line-0.13.0--archive",
    sha256 = "1b6a2d3371669ab3ca9797670853d61402b03d0b4b9ebf33d677dfa720203072",
    url = "https://static.crates.io/crates/addr2line/addr2line-0.13.0.crate",
)

archive(
    name = "adler-0.2.3--archive",
    sha256 = "ee2a4ec343196209d6594e19543ae87a39f96d5534d7174822a3ad825dd6ed7e",
    url = "https://static.crates.io/crates/adler/adler-0.2.3.crate",
)

archive(
    name = "ahash-0.7.4--archive",
    sha256 = "43bb833f0bf979d8475d38fbf09ed3b8a55e1885fe93ad3f93239fc6a4f17b98",
    url = "https://static.crates.io/crates/ahash/ahash-0.7.4.crate",
)

archive(
    name = "aho-corasick-0.7.13--archive",
    sha256 = "043164d8ba5c4c3035fec9bbee8647c0261d788f3474306f93bb65901cae0e86",
    url = "https://static.crates.io/crates/aho-corasick/aho-corasick-0.7.13.crate",
)

archive(
    name = "annotate-snippets-0.9.0--archive",
    sha256 = "5c96c3d1062ea7101741480185a6a1275eab01cbe8b20e378d1311bc056d2e08",
    url = "https://static.crates.io/crates/annotate-snippets/annotate-snippets-0.9.0.crate",
)

archive(
    name = "ansi_term-0.11.0--archive",
    sha256 = "ee49baf6cb617b853aa8d93bf420db2383fab46d314482ca2803b40d5fde979b",
    url = "https://static.crates.io/crates/ansi_term/ansi_term-0.11.0.crate",
)

archive(
    name = "anyhow-1.0.34--archive",
    sha256 = "bf8dcb5b4bbaa28653b647d8c77bd4ed40183b48882e130c1f1ffb73de069fd7",
    url = "https://static.crates.io/crates/anyhow/anyhow-1.0.34.crate",
)

archive(
    name = "ascii-canvas-2.0.0--archive",
    sha256 = "ff8eb72df928aafb99fe5d37b383f2fe25bd2a765e3e5f7c365916b6f2463a29",
    url = "https://static.crates.io/crates/ascii-canvas/ascii-canvas-2.0.0.crate",
)

archive(
    name = "async-trait-0.1.51--archive",
    sha256 = "44318e776df68115a881de9a8fd1b9e53368d7a4a5ce4cc48517da3393233a5e",
    url = "https://static.crates.io/crates/async-trait/async-trait-0.1.51.crate",
)

archive(
    name = "atty-0.2.14--archive",
    sha256 = "d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8",
    url = "https://static.crates.io/crates/atty/atty-0.2.14.crate",
)

archive(
    name = "autocfg-0.1.7--archive",
    sha256 = "1d49d90015b3c36167a20fe2810c5cd875ad504b39cff3d4eae7977e6b7c1cb2",
    url = "https://static.crates.io/crates/autocfg/autocfg-0.1.7.crate",
)

archive(
    name = "autocfg-1.0.1--archive",
    sha256 = "cdb031dd78e28731d87d56cc8ffef4a8f36ca26c38fe2de700543e627f8a464a",
    url = "https://static.crates.io/crates/autocfg/autocfg-1.0.1.crate",
)

archive(
    name = "backtrace-0.3.51--archive",
    sha256 = "ec1931848a574faa8f7c71a12ea00453ff5effbb5f51afe7f77d7a48cace6ac1",
    url = "https://static.crates.io/crates/backtrace/backtrace-0.3.51.crate",
)

archive(
    name = "base64-0.12.3--archive",
    sha256 = "3441f0f7b02788e948e47f457ca01f1d7e6d92c693bc132c22b087d3141c03ff",
    url = "https://static.crates.io/crates/base64/base64-0.12.3.crate",
)

archive(
    name = "base64-0.13.0--archive",
    sha256 = "904dfeac50f3cdaba28fc6f57fdcddb75f49ed61346676a78c4ffe55877802fd",
    url = "https://static.crates.io/crates/base64/base64-0.13.0.crate",
)

archive(
    name = "beef-0.4.4--archive",
    sha256 = "474a626a67200bd107d44179bb3d4fc61891172d11696609264589be6a0e6a43",
    url = "https://static.crates.io/crates/beef/beef-0.4.4.crate",
)

archive(
    name = "bit-set-0.5.2--archive",
    sha256 = "6e11e16035ea35e4e5997b393eacbf6f63983188f7a2ad25bfb13465f5ad59de",
    url = "https://static.crates.io/crates/bit-set/bit-set-0.5.2.crate",
)

archive(
    name = "bit-vec-0.6.2--archive",
    sha256 = "5f0dc55f2d8a1a85650ac47858bb001b4c0dd73d79e3c455a842925e68d29cd3",
    url = "https://static.crates.io/crates/bit-vec/bit-vec-0.6.2.crate",
)

archive(
    name = "bitflags-1.2.1--archive",
    sha256 = "cf1de2fe8c75bc145a2f577add951f8134889b4795d47466a54a5c846d691693",
    url = "https://static.crates.io/crates/bitflags/bitflags-1.2.1.crate",
)

archive(
    name = "block-buffer-0.7.3--archive",
    sha256 = "c0940dc441f31689269e10ac70eb1002a3a1d3ad1390e030043662eb7fe4688b",
    url = "https://static.crates.io/crates/block-buffer/block-buffer-0.7.3.crate",
)

archive(
    name = "block-buffer-0.9.0--archive",
    sha256 = "4152116fd6e9dadb291ae18fc1ec3575ed6d84c29642d97890f4b4a3417297e4",
    url = "https://static.crates.io/crates/block-buffer/block-buffer-0.9.0.crate",
)

archive(
    name = "block-padding-0.1.5--archive",
    sha256 = "fa79dedbb091f449f1f39e53edf88d5dbe95f895dae6135a8d7b881fb5af73f5",
    url = "https://static.crates.io/crates/block-padding/block-padding-0.1.5.crate",
)

archive(
    name = "buf_redux-0.8.4--archive",
    sha256 = "b953a6887648bb07a535631f2bc00fbdb2a2216f135552cb3f534ed136b9c07f",
    url = "https://static.crates.io/crates/buf_redux/buf_redux-0.8.4.crate",
)

archive(
    name = "bumpalo-3.4.0--archive",
    sha256 = "2e8c087f005730276d1096a652e92a8bacee2e2472bcc9715a74d2bec38b5820",
    url = "https://static.crates.io/crates/bumpalo/bumpalo-3.4.0.crate",
)

archive(
    name = "byte-tools-0.3.1--archive",
    sha256 = "e3b5ca7a04898ad4bcd41c90c5285445ff5b791899bb1b0abdd2a2aa791211d7",
    url = "https://static.crates.io/crates/byte-tools/byte-tools-0.3.1.crate",
)

archive(
    name = "byteorder-1.3.4--archive",
    sha256 = "08c48aae112d48ed9f069b33538ea9e3e90aa263cfa3d1c24309612b1f7472de",
    url = "https://static.crates.io/crates/byteorder/byteorder-1.3.4.crate",
)

archive(
    name = "bytes-0.5.6--archive",
    sha256 = "0e4cec68f03f32e44924783795810fa50a7035d8c8ebe78580ad7e6c703fba38",
    url = "https://static.crates.io/crates/bytes/bytes-0.5.6.crate",
)

archive(
    name = "bytes-1.0.0--archive",
    sha256 = "ad1f8e949d755f9d79112b5bb46938e0ef9d3804a0b16dfab13aafcaa5f0fa72",
    url = "https://static.crates.io/crates/bytes/bytes-1.0.0.crate",
)

archive(
    name = "cfg-if-0.1.10--archive",
    sha256 = "4785bdd1c96b2a846b2bd7cc02e86b6b3dbf14e7e53446c4f54c92a361040822",
    url = "https://static.crates.io/crates/cfg-if/cfg-if-0.1.10.crate",
)

archive(
    name = "cfg-if-1.0.0--archive",
    sha256 = "baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd",
    url = "https://static.crates.io/crates/cfg-if/cfg-if-1.0.0.crate",
)

archive(
    name = "chrono-0.4.19--archive",
    sha256 = "670ad68c9088c2a963aaa298cb369688cf3f9465ce5e2d4ca10e6e0098a1ce73",
    url = "https://static.crates.io/crates/chrono/chrono-0.4.19.crate",
)

archive(
    name = "clap-2.33.3--archive",
    sha256 = "37e58ac78573c40708d45522f0d80fa2f01cc4f9b4e2bf749807255454312002",
    url = "https://static.crates.io/crates/clap/clap-2.33.3.crate",
)

archive(
    name = "const_fn-0.4.2--archive",
    sha256 = "ce90df4c658c62f12d78f7508cf92f9173e5184a539c10bfe54a3107b3ffd0f2",
    url = "https://static.crates.io/crates/const_fn/const_fn-0.4.2.crate",
)

archive(
    name = "cpuid-bool-0.1.2--archive",
    sha256 = "8aebca1129a03dc6dc2b127edd729435bbc4a37e1d5f4d7513165089ceb02634",
    url = "https://static.crates.io/crates/cpuid-bool/cpuid-bool-0.1.2.crate",
)

archive(
    name = "crossbeam-channel-0.4.4--archive",
    sha256 = "b153fe7cbef478c567df0f972e02e6d736db11affe43dfc9c56a9374d1adfb87",
    url = "https://static.crates.io/crates/crossbeam-channel/crossbeam-channel-0.4.4.crate",
)

archive(
    name = "crossbeam-channel-0.5.0--archive",
    sha256 = "dca26ee1f8d361640700bde38b2c37d8c22b3ce2d360e1fc1c74ea4b0aa7d775",
    url = "https://static.crates.io/crates/crossbeam-channel/crossbeam-channel-0.5.0.crate",
)

archive(
    name = "crossbeam-deque-0.8.0--archive",
    sha256 = "94af6efb46fef72616855b036a624cf27ba656ffc9be1b9a3c931cfc7749a9a9",
    url = "https://static.crates.io/crates/crossbeam-deque/crossbeam-deque-0.8.0.crate",
)

archive(
    name = "crossbeam-epoch-0.9.1--archive",
    sha256 = "a1aaa739f95311c2c7887a76863f500026092fb1dce0161dab577e559ef3569d",
    url = "https://static.crates.io/crates/crossbeam-epoch/crossbeam-epoch-0.9.1.crate",
)

archive(
    name = "crossbeam-utils-0.7.2--archive",
    sha256 = "c3c7c73a2d1e9fc0886a08b93e98eb643461230d5f1925e4036204d5f2e261a8",
    url = "https://static.crates.io/crates/crossbeam-utils/crossbeam-utils-0.7.2.crate",
)

archive(
    name = "crossbeam-utils-0.8.0--archive",
    sha256 = "ec91540d98355f690a86367e566ecad2e9e579f230230eb7c21398372be73ea5",
    url = "https://static.crates.io/crates/crossbeam-utils/crossbeam-utils-0.8.0.crate",
)

archive(
    name = "ct-logs-0.8.0--archive",
    sha256 = "c1a816186fa68d9e426e3cb4ae4dff1fcd8e4a2c34b781bf7a822574a0d0aac8",
    url = "https://static.crates.io/crates/ct-logs/ct-logs-0.8.0.crate",
)

archive(
    name = "darling-0.10.2--archive",
    sha256 = "0d706e75d87e35569db781a9b5e2416cff1236a47ed380831f959382ccd5f858",
    url = "https://static.crates.io/crates/darling/darling-0.10.2.crate",
)

archive(
    name = "darling_core-0.10.2--archive",
    sha256 = "f0c960ae2da4de88a91b2d920c2a7233b400bc33cb28453a2987822d8392519b",
    url = "https://static.crates.io/crates/darling_core/darling_core-0.10.2.crate",
)

archive(
    name = "darling_macro-0.10.2--archive",
    sha256 = "d9b5a2f4ac4969822c62224815d069952656cadc7084fdca9751e6d959189b72",
    url = "https://static.crates.io/crates/darling_macro/darling_macro-0.10.2.crate",
)

archive(
    name = "data-encoding-2.3.0--archive",
    sha256 = "d4d0e2d24e5ee3b23a01de38eefdcd978907890701f08ffffd4cb457ca4ee8d6",
    url = "https://static.crates.io/crates/data-encoding/data-encoding-2.3.0.crate",
)

archive(
    name = "derivative-2.1.1--archive",
    sha256 = "cb582b60359da160a9477ee80f15c8d784c477e69c217ef2cdd4169c24ea380f",
    url = "https://static.crates.io/crates/derivative/derivative-2.1.1.crate",
)

archive(
    name = "derive_builder-0.9.0--archive",
    sha256 = "a2658621297f2cf68762a6f7dc0bb7e1ff2cfd6583daef8ee0fed6f7ec468ec0",
    url = "https://static.crates.io/crates/derive_builder/derive_builder-0.9.0.crate",
)

archive(
    name = "derive_builder_core-0.9.0--archive",
    sha256 = "2791ea3e372c8495c0bc2033991d76b512cd799d07491fbd6890124db9458bef",
    url = "https://static.crates.io/crates/derive_builder_core/derive_builder_core-0.9.0.crate",
)

archive(
    name = "diff-0.1.12--archive",
    sha256 = "0e25ea47919b1560c4e3b7fe0aaab9becf5b84a10325ddf7db0f0ba5e1026499",
    url = "https://static.crates.io/crates/diff/diff-0.1.12.crate",
)

archive(
    name = "digest-0.8.1--archive",
    sha256 = "f3d0c8c8752312f9713efd397ff63acb9f85585afbf179282e720e7704954dd5",
    url = "https://static.crates.io/crates/digest/digest-0.8.1.crate",
)

archive(
    name = "digest-0.9.0--archive",
    sha256 = "d3dd60d1080a57a05ab032377049e0591415d2b31afd7028356dbf3cc6dcb066",
    url = "https://static.crates.io/crates/digest/digest-0.9.0.crate",
)

archive(
    name = "dirs-1.0.5--archive",
    sha256 = "3fd78930633bd1c6e35c4b42b1df7b0cbc6bc191146e512bb3bedf243fcc3901",
    url = "https://static.crates.io/crates/dirs/dirs-1.0.5.crate",
)

archive(
    name = "dirs-2.0.2--archive",
    sha256 = "13aea89a5c93364a98e9b37b2fa237effbb694d5cfe01c5b70941f7eb087d5e3",
    url = "https://static.crates.io/crates/dirs/dirs-2.0.2.crate",
)

archive(
    name = "dirs-next-2.0.0--archive",
    sha256 = "b98cf8ebf19c3d1b223e151f99a4f9f0690dca41414773390fc824184ac833e1",
    url = "https://static.crates.io/crates/dirs-next/dirs-next-2.0.0.crate",
)

archive(
    name = "dirs-sys-0.3.5--archive",
    sha256 = "8e93d7f5705de3e49895a2b5e0b8855a1c27f080192ae9c32a6432d50741a57a",
    url = "https://static.crates.io/crates/dirs-sys/dirs-sys-0.3.5.crate",
)

archive(
    name = "dirs-sys-next-0.1.2--archive",
    sha256 = "4ebda144c4fe02d1f7ea1a7d9641b6fc6b580adcfa024ae48797ecdeb6825b4d",
    url = "https://static.crates.io/crates/dirs-sys-next/dirs-sys-next-0.1.2.crate",
)

archive(
    name = "docopt-1.1.0--archive",
    sha256 = "7f525a586d310c87df72ebcd98009e57f1cc030c8c268305287a476beb653969",
    url = "https://static.crates.io/crates/docopt/docopt-1.1.0.crate",
)

archive(
    name = "either-1.6.1--archive",
    sha256 = "e78d4f1cc4ae33bbfc157ed5d5a5ef3bc29227303d595861deb238fcec4e9457",
    url = "https://static.crates.io/crates/either/either-1.6.1.crate",
)

archive(
    name = "ena-0.14.0--archive",
    sha256 = "d7402b94a93c24e742487327a7cd839dc9d36fec9de9fb25b09f2dae459f36c3",
    url = "https://static.crates.io/crates/ena/ena-0.14.0.crate",
)

archive(
    name = "enum-as-inner-0.3.3--archive",
    sha256 = "7c5f0096a91d210159eceb2ff5e1c4da18388a170e1e3ce948aac9c8fdbbf595",
    url = "https://static.crates.io/crates/enum-as-inner/enum-as-inner-0.3.3.crate",
)

archive(
    name = "erased-serde-0.3.12--archive",
    sha256 = "6ca8b296792113e1500fd935ae487be6e00ce318952a6880555554824d6ebf38",
    url = "https://static.crates.io/crates/erased-serde/erased-serde-0.3.12.crate",
)

archive(
    name = "failure-0.1.8--archive",
    sha256 = "d32e9bd16cc02eae7db7ef620b392808b89f6a5e16bb3497d159c6b92a0f4f86",
    url = "https://static.crates.io/crates/failure/failure-0.1.8.crate",
)

archive(
    name = "failure_derive-0.1.8--archive",
    sha256 = "aa4da3c766cd7a0db8242e326e9e4e081edd567072893ed320008189715366a4",
    url = "https://static.crates.io/crates/failure_derive/failure_derive-0.1.8.crate",
)

archive(
    name = "fake-simd-0.1.2--archive",
    sha256 = "e88a8acf291dafb59c2d96e8f59828f3838bb1a70398823ade51a84de6a6deed",
    url = "https://static.crates.io/crates/fake-simd/fake-simd-0.1.2.crate",
)

archive(
    name = "fallible-iterator-0.2.0--archive",
    sha256 = "4443176a9f2c162692bd3d352d745ef9413eec5782a80d8fd6f8a1ac692a07f7",
    url = "https://static.crates.io/crates/fallible-iterator/fallible-iterator-0.2.0.crate",
)

archive(
    name = "fixedbitset-0.2.0--archive",
    sha256 = "37ab347416e802de484e4d03c7316c48f1ecb56574dfd4a46a80f173ce1de04d",
    url = "https://static.crates.io/crates/fixedbitset/fixedbitset-0.2.0.crate",
)

archive(
    name = "fnv-1.0.7--archive",
    sha256 = "3f9eec918d3f24069decb9af1554cad7c880e2da24a9afd88aca000531ab82c1",
    url = "https://static.crates.io/crates/fnv/fnv-1.0.7.crate",
)

archive(
    name = "form_urlencoded-1.0.0--archive",
    sha256 = "ece68d15c92e84fa4f19d3780f1294e5ca82a78a6d515f1efaabcc144688be00",
    url = "https://static.crates.io/crates/form_urlencoded/form_urlencoded-1.0.0.crate",
)

archive(
    name = "fs2-0.4.3--archive",
    sha256 = "9564fc758e15025b46aa6643b1b77d047d1a56a1aea6e01002ac0c7026876213",
    url = "https://static.crates.io/crates/fs2/fs2-0.4.3.crate",
)

archive(
    name = "futures-0.1.31--archive",
    sha256 = "3a471a38ef8ed83cd6e40aa59c1ffe17db6855c18e3604d9c4ed8c08ebc28678",
    url = "https://static.crates.io/crates/futures/futures-0.1.31.crate",
)

archive(
    name = "futures-0.3.13--archive",
    sha256 = "7f55667319111d593ba876406af7c409c0ebb44dc4be6132a783ccf163ea14c1",
    url = "https://static.crates.io/crates/futures/futures-0.3.13.crate",
)

archive(
    name = "futures-channel-0.3.13--archive",
    sha256 = "8c2dd2df839b57db9ab69c2c9d8f3e8c81984781937fe2807dc6dcf3b2ad2939",
    url = "https://static.crates.io/crates/futures-channel/futures-channel-0.3.13.crate",
)

archive(
    name = "futures-core-0.3.13--archive",
    sha256 = "15496a72fabf0e62bdc3df11a59a3787429221dd0710ba8ef163d6f7a9112c94",
    url = "https://static.crates.io/crates/futures-core/futures-core-0.3.13.crate",
)

archive(
    name = "futures-executor-0.3.13--archive",
    sha256 = "891a4b7b96d84d5940084b2a37632dd65deeae662c114ceaa2c879629c9c0ad1",
    url = "https://static.crates.io/crates/futures-executor/futures-executor-0.3.13.crate",
)

archive(
    name = "futures-io-0.3.13--archive",
    sha256 = "d71c2c65c57704c32f5241c1223167c2c3294fd34ac020c807ddbe6db287ba59",
    url = "https://static.crates.io/crates/futures-io/futures-io-0.3.13.crate",
)

archive(
    name = "futures-macro-0.3.13--archive",
    sha256 = "ea405816a5139fb39af82c2beb921d52143f556038378d6db21183a5c37fbfb7",
    url = "https://static.crates.io/crates/futures-macro/futures-macro-0.3.13.crate",
)

archive(
    name = "futures-sink-0.3.13--archive",
    sha256 = "85754d98985841b7d4f5e8e6fbfa4a4ac847916893ec511a2917ccd8525b8bb3",
    url = "https://static.crates.io/crates/futures-sink/futures-sink-0.3.13.crate",
)

archive(
    name = "futures-task-0.3.13--archive",
    sha256 = "fa189ef211c15ee602667a6fcfe1c1fd9e07d42250d2156382820fba33c9df80",
    url = "https://static.crates.io/crates/futures-task/futures-task-0.3.13.crate",
)

archive(
    name = "futures-util-0.3.13--archive",
    sha256 = "1812c7ab8aedf8d6f2701a43e1243acdbcc2b36ab26e2ad421eb99ac963d96d1",
    url = "https://static.crates.io/crates/futures-util/futures-util-0.3.13.crate",
)

archive(
    name = "generic-array-0.12.4--archive",
    sha256 = "ffdf9f34f1447443d37393cc6c2b8313aebddcd96906caf34e54c68d8e57d7bd",
    url = "https://static.crates.io/crates/generic-array/generic-array-0.12.4.crate",
)

archive(
    name = "generic-array-0.14.4--archive",
    sha256 = "501466ecc8a30d1d3b7fc9229b122b2ce8ed6e9d9223f1138d4babb253e51817",
    url = "https://static.crates.io/crates/generic-array/generic-array-0.14.4.crate",
)

archive(
    name = "getrandom-0.1.15--archive",
    sha256 = "fc587bc0ec293155d5bfa6b9891ec18a1e330c234f896ea47fbada4cadbe47e6",
    url = "https://static.crates.io/crates/getrandom/getrandom-0.1.15.crate",
)

archive(
    name = "getrandom-0.2.2--archive",
    sha256 = "c9495705279e7140bf035dde1f6e750c162df8b625267cd52cc44e0b156732c8",
    url = "https://static.crates.io/crates/getrandom/getrandom-0.2.2.crate",
)

archive(
    name = "gimli-0.22.0--archive",
    sha256 = "aaf91faf136cb47367fa430cd46e37a788775e7fa104f8b4bcb3861dc389b724",
    url = "https://static.crates.io/crates/gimli/gimli-0.22.0.crate",
)

archive(
    name = "goblin-0.3.4--archive",
    sha256 = "669cdc3826f69a51d3f8fc3f86de81c2378110254f678b8407977736122057a4",
    url = "https://static.crates.io/crates/goblin/goblin-0.3.4.crate",
)

archive(
    name = "h2-0.3.0--archive",
    sha256 = "6b67e66362108efccd8ac053abafc8b7a8d86a37e6e48fc4f6f7485eb5e9e6a5",
    url = "https://static.crates.io/crates/h2/h2-0.3.0.crate",
)

archive(
    name = "handlebars-3.5.4--archive",
    sha256 = "580b6f551b29a3a02436318aed09ba1c58eea177dc49e39beac627ad356730a5",
    url = "https://static.crates.io/crates/handlebars/handlebars-3.5.4.crate",
)

archive(
    name = "hashbrown-0.11.2--archive",
    sha256 = "ab5ef0d4909ef3724cc8cce6ccc8572c5c817592e9285f5464f8e86f8bd3726e",
    url = "https://static.crates.io/crates/hashbrown/hashbrown-0.11.2.crate",
)

archive(
    name = "headers-0.3.2--archive",
    sha256 = "ed18eb2459bf1a09ad2d6b1547840c3e5e62882fa09b9a6a20b1de8e3228848f",
    url = "https://static.crates.io/crates/headers/headers-0.3.2.crate",
)

archive(
    name = "headers-core-0.2.0--archive",
    sha256 = "e7f66481bfee273957b1f20485a4ff3362987f85b2c236580d81b4eb7a326429",
    url = "https://static.crates.io/crates/headers-core/headers-core-0.2.0.crate",
)

archive(
    name = "heck-0.3.1--archive",
    sha256 = "20564e78d53d2bb135c343b3f47714a56af2061f1c928fdb541dc7b9fdd94205",
    url = "https://static.crates.io/crates/heck/heck-0.3.1.crate",
)

archive(
    name = "hostname-0.3.1--archive",
    sha256 = "3c731c3e10504cc8ed35cfe2f1db4c9274c3d35fa486e3b31df46f068ef3e867",
    url = "https://static.crates.io/crates/hostname/hostname-0.3.1.crate",
)

archive(
    name = "http-0.2.1--archive",
    sha256 = "28d569972648b2c512421b5f2a405ad6ac9666547189d0c5477a3f200f3e02f9",
    url = "https://static.crates.io/crates/http/http-0.2.1.crate",
)

archive(
    name = "http-body-0.4.0--archive",
    sha256 = "2861bd27ee074e5ee891e8b539837a9430012e249d7f0ca2d795650f579c1994",
    url = "https://static.crates.io/crates/http-body/http-body-0.4.0.crate",
)

archive(
    name = "httparse-1.4.1--archive",
    sha256 = "f3a87b616e37e93c22fb19bcd386f02f3af5ea98a25670ad0fce773de23c5e68",
    url = "https://static.crates.io/crates/httparse/httparse-1.4.1.crate",
)

archive(
    name = "httpdate-1.0.0--archive",
    sha256 = "05842d0d43232b23ccb7060ecb0f0626922c21f30012e97b767b30afd4a5d4b9",
    url = "https://static.crates.io/crates/httpdate/httpdate-1.0.0.crate",
)

archive(
    name = "hyper-0.14.7--archive",
    sha256 = "1e5f105c494081baa3bf9e200b279e27ec1623895cd504c7dbef8d0b080fcf54",
    url = "https://static.crates.io/crates/hyper/hyper-0.14.7.crate",
)

archive(
    name = "hyper-rustls-0.22.1--archive",
    sha256 = "5f9f7a97316d44c0af9b0301e65010573a853a9fc97046d7331d7f6bc0fd5a64",
    url = "https://static.crates.io/crates/hyper-rustls/hyper-rustls-0.22.1.crate",
)

archive(
    name = "ident_case-1.0.1--archive",
    sha256 = "b9e0384b61958566e926dc50660321d12159025e767c18e043daf26b70104c39",
    url = "https://static.crates.io/crates/ident_case/ident_case-1.0.1.crate",
)

archive(
    name = "idna-0.2.0--archive",
    sha256 = "02e2673c30ee86b5b96a9cb52ad15718aa1f966f5ab9ad54a8b95d5ca33120a9",
    url = "https://static.crates.io/crates/idna/idna-0.2.0.crate",
)

archive(
    name = "indexmap-1.7.0--archive",
    sha256 = "bc633605454125dec4b66843673f01c7df2b89479b32e0ed634e43a91cff62a5",
    url = "https://static.crates.io/crates/indexmap/indexmap-1.7.0.crate",
)

archive(
    name = "input_buffer-0.4.0--archive",
    sha256 = "f97967975f448f1a7ddb12b0bc41069d09ed6a1c161a92687e057325db35d413",
    url = "https://static.crates.io/crates/input_buffer/input_buffer-0.4.0.crate",
)

archive(
    name = "instant-0.1.7--archive",
    sha256 = "63312a18f7ea8760cdd0a7c5aac1a619752a246b833545e3e36d1f81f7cd9e66",
    url = "https://static.crates.io/crates/instant/instant-0.1.7.crate",
)

archive(
    name = "ipnet-2.3.0--archive",
    sha256 = "47be2f14c678be2fdcab04ab1171db51b2762ce6f0a8ee87c8dd4a04ed216135",
    url = "https://static.crates.io/crates/ipnet/ipnet-2.3.0.crate",
)

archive(
    name = "itertools-0.10.1--archive",
    sha256 = "69ddb889f9d0d08a67338271fa9b62996bc788c7796a5c18cf057420aaed5eaf",
    url = "https://static.crates.io/crates/itertools/itertools-0.10.1.crate",
)

archive(
    name = "itertools-0.9.0--archive",
    sha256 = "284f18f85651fe11e8a991b2adb42cb078325c996ed026d994719efcfca1d54b",
    url = "https://static.crates.io/crates/itertools/itertools-0.9.0.crate",
)

archive(
    name = "itoa-0.4.6--archive",
    sha256 = "dc6f3ad7b9d11a0c00842ff8de1b60ee58661048eb8049ed33c73594f359d7e6",
    url = "https://static.crates.io/crates/itoa/itoa-0.4.6.crate",
)

archive(
    name = "lalrpop-0.19.1--archive",
    sha256 = "60fb56191fb8ed5311597e5750debe6779c9fdb487dbaa5ff302592897d7a2c8",
    url = "https://static.crates.io/crates/lalrpop/lalrpop-0.19.1.crate",
)

archive(
    name = "lalrpop-util-0.19.1--archive",
    sha256 = "6771161eff561647fad8bb7e745e002c304864fb8f436b52b30acda51fca4408",
    url = "https://static.crates.io/crates/lalrpop-util/lalrpop-util-0.19.1.crate",
)

archive(
    name = "lazy_static-1.4.0--archive",
    sha256 = "e2abad23fbc42b3700f2f279844dc832adb2b2eb069b2df918f455c4e18cc646",
    url = "https://static.crates.io/crates/lazy_static/lazy_static-1.4.0.crate",
)

archive(
    name = "libc-0.2.98--archive",
    sha256 = "320cfe77175da3a483efed4bc0adc1968ca050b098ce4f2f1c13a56626128790",
    url = "https://static.crates.io/crates/libc/libc-0.2.98.crate",
)

archive(
    name = "libm-0.2.1--archive",
    sha256 = "c7d73b3f436185384286bd8098d17ec07c9a7d2388a6599f824d8502b529702a",
    url = "https://static.crates.io/crates/libm/libm-0.2.1.crate",
)

archive(
    name = "linked-hash-map-0.5.3--archive",
    sha256 = "8dd5a6d5999d9907cda8ed67bbd137d3af8085216c2ac62de5be860bd41f304a",
    url = "https://static.crates.io/crates/linked-hash-map/linked-hash-map-0.5.3.crate",
)

archive(
    name = "lock_api-0.4.1--archive",
    sha256 = "28247cc5a5be2f05fbcd76dd0cf2c7d3b5400cb978a28042abcd4fa0b3f8261c",
    url = "https://static.crates.io/crates/lock_api/lock_api-0.4.1.crate",
)

archive(
    name = "log-0.4.11--archive",
    sha256 = "4fabed175da42fed1fa0746b0ea71f412aa9d35e76e95e59b192c64b9dc2bf8b",
    url = "https://static.crates.io/crates/log/log-0.4.11.crate",
)

archive(
    name = "logos-0.11.4--archive",
    sha256 = "b91c49573597a5d6c094f9031617bb1fed15c0db68c81e6546d313414ce107e4",
    url = "https://static.crates.io/crates/logos/logos-0.11.4.crate",
)

archive(
    name = "logos-derive-0.11.5--archive",
    sha256 = "797b1f8a0571b331c1b47e7db245af3dc634838da7a92b3bef4e30376ae1c347",
    url = "https://static.crates.io/crates/logos-derive/logos-derive-0.11.5.crate",
)

archive(
    name = "lru-cache-0.1.2--archive",
    sha256 = "31e24f1ad8321ca0e8a1e0ac13f23cb668e6f5466c2c57319f6a5cf1cc8e3b1c",
    url = "https://static.crates.io/crates/lru-cache/lru-cache-0.1.2.crate",
)

archive(
    name = "maplit-1.0.2--archive",
    sha256 = "3e2e65a1a2e43cfcb47a895c4c8b10d1f4a61097f9f254f183aee60cad9c651d",
    url = "https://static.crates.io/crates/maplit/maplit-1.0.2.crate",
)

archive(
    name = "match_cfg-0.1.0--archive",
    sha256 = "ffbee8634e0d45d258acb448e7eaab3fce7a0a467395d4d9f228e3c1f01fb2e4",
    url = "https://static.crates.io/crates/match_cfg/match_cfg-0.1.0.crate",
)

archive(
    name = "matches-0.1.8--archive",
    sha256 = "7ffc5c5338469d4d3ea17d269fa8ea3512ad247247c30bd2df69e68309ed0a08",
    url = "https://static.crates.io/crates/matches/matches-0.1.8.crate",
)

archive(
    name = "maybe-uninit-2.0.0--archive",
    sha256 = "60302e4db3a61da70c0cb7991976248362f30319e88850c487b9b95bbf059e00",
    url = "https://static.crates.io/crates/maybe-uninit/maybe-uninit-2.0.0.crate",
)

archive(
    name = "memchr-2.4.0--archive",
    sha256 = "b16bd47d9e329435e309c58469fe0791c2d0d1ba96ec0954152a5ae2b04387dc",
    url = "https://static.crates.io/crates/memchr/memchr-2.4.0.crate",
)

archive(
    name = "memoffset-0.6.4--archive",
    sha256 = "59accc507f1338036a0477ef61afdae33cde60840f4dfe481319ce3ad116ddf9",
    url = "https://static.crates.io/crates/memoffset/memoffset-0.6.4.crate",
)

archive(
    name = "mime-0.3.16--archive",
    sha256 = "2a60c7ce501c71e03a9c9c0d35b861413ae925bd979cc7a4e30d060069aaac8d",
    url = "https://static.crates.io/crates/mime/mime-0.3.16.crate",
)

archive(
    name = "mime_guess-2.0.3--archive",
    sha256 = "2684d4c2e97d99848d30b324b00c8fcc7e5c897b7cbb5819b09e7c90e8baf212",
    url = "https://static.crates.io/crates/mime_guess/mime_guess-2.0.3.crate",
)

archive(
    name = "miniz_oxide-0.4.2--archive",
    sha256 = "c60c0dfe32c10b43a144bad8fc83538c52f58302c92300ea7ec7bf7b38d5a7b9",
    url = "https://static.crates.io/crates/miniz_oxide/miniz_oxide-0.4.2.crate",
)

archive(
    name = "mio-0.7.7--archive",
    sha256 = "e50ae3f04d169fcc9bde0b547d1c205219b7157e07ded9c5aff03e0637cb3ed7",
    url = "https://static.crates.io/crates/mio/mio-0.7.7.crate",
)

archive(
    name = "multipart-0.17.0--archive",
    sha256 = "8209c33c951f07387a8497841122fc6f712165e3f9bda3e6be4645b58188f676",
    url = "https://static.crates.io/crates/multipart/multipart-0.17.0.crate",
)

archive(
    name = "new_debug_unreachable-1.0.4--archive",
    sha256 = "e4a24736216ec316047a1fc4252e27dabb04218aa4a3f37c6e7ddbf1f9782b54",
    url = "https://static.crates.io/crates/new_debug_unreachable/new_debug_unreachable-1.0.4.crate",
)

archive(
    name = "nix-0.19.1--archive",
    sha256 = "b2ccba0cfe4fdf15982d1674c69b1fd80bad427d293849982668dfe454bd61f2",
    url = "https://static.crates.io/crates/nix/nix-0.19.1.crate",
)

archive(
    name = "nix-0.20.0--archive",
    sha256 = "fa9b4819da1bc61c0ea48b63b7bc8604064dd43013e7cc325df098d49cd7c18a",
    url = "https://static.crates.io/crates/nix/nix-0.20.0.crate",
)

archive(
    name = "num-integer-0.1.44--archive",
    sha256 = "d2cc698a63b549a70bc047073d2949cce27cd1c7b0a4a862d08a8031bc2801db",
    url = "https://static.crates.io/crates/num-integer/num-integer-0.1.44.crate",
)

archive(
    name = "num-traits-0.2.14--archive",
    sha256 = "9a64b1ec5cda2586e284722486d802acf1f7dbdc623e2bfc57e65ca1cd099290",
    url = "https://static.crates.io/crates/num-traits/num-traits-0.2.14.crate",
)

archive(
    name = "num_cpus-1.13.0--archive",
    sha256 = "05499f3756671c15885fee9034446956fff3f243d6077b91e5767df161f766b3",
    url = "https://static.crates.io/crates/num_cpus/num_cpus-1.13.0.crate",
)

archive(
    name = "object-0.20.0--archive",
    sha256 = "1ab52be62400ca80aa00285d25253d7f7c437b7375c4de678f5405d3afe82ca5",
    url = "https://static.crates.io/crates/object/object-0.20.0.crate",
)

archive(
    name = "once_cell-1.7.2--archive",
    sha256 = "af8b08b04175473088b46763e51ee54da5f9a164bc162f615b91bc179dbf15a3",
    url = "https://static.crates.io/crates/once_cell/once_cell-1.7.2.crate",
)

archive(
    name = "opaque-debug-0.2.3--archive",
    sha256 = "2839e79665f131bdb5782e51f2c6c9599c133c6098982a54c794358bf432529c",
    url = "https://static.crates.io/crates/opaque-debug/opaque-debug-0.2.3.crate",
)

archive(
    name = "opaque-debug-0.3.0--archive",
    sha256 = "624a8340c38c1b80fd549087862da4ba43e08858af025b236e509b6649fc13d5",
    url = "https://static.crates.io/crates/opaque-debug/opaque-debug-0.3.0.crate",
)

archive(
    name = "openssl-probe-0.1.2--archive",
    sha256 = "77af24da69f9d9341038eba93a073b1fdaaa1b788221b00a69bce9e762cb32de",
    url = "https://static.crates.io/crates/openssl-probe/openssl-probe-0.1.2.crate",
)

archive(
    name = "parking_lot-0.11.0--archive",
    sha256 = "a4893845fa2ca272e647da5d0e46660a314ead9c2fdd9a883aabc32e481a8733",
    url = "https://static.crates.io/crates/parking_lot/parking_lot-0.11.0.crate",
)

archive(
    name = "parking_lot_core-0.8.0--archive",
    sha256 = "c361aa727dd08437f2f1447be8b59a33b0edd15e0fcee698f935613d9efbca9b",
    url = "https://static.crates.io/crates/parking_lot_core/parking_lot_core-0.8.0.crate",
)

archive(
    name = "paste-1.0.2--archive",
    sha256 = "ba7ae1a2180ed02ddfdb5ab70c70d596a26dd642e097bb6fe78b1bde8588ed97",
    url = "https://static.crates.io/crates/paste/paste-1.0.2.crate",
)

archive(
    name = "percent-encoding-2.1.0--archive",
    sha256 = "d4fd5641d01c8f18a23da7b6fe29298ff4b55afcccdf78973b24cf3175fee32e",
    url = "https://static.crates.io/crates/percent-encoding/percent-encoding-2.1.0.crate",
)

archive(
    name = "pest-2.1.3--archive",
    sha256 = "10f4872ae94d7b90ae48754df22fd42ad52ce740b8f370b03da4835417403e53",
    url = "https://static.crates.io/crates/pest/pest-2.1.3.crate",
)

archive(
    name = "pest_derive-2.1.0--archive",
    sha256 = "833d1ae558dc601e9a60366421196a8d94bc0ac980476d0b67e1d0988d72b2d0",
    url = "https://static.crates.io/crates/pest_derive/pest_derive-2.1.0.crate",
)

archive(
    name = "pest_generator-2.1.3--archive",
    sha256 = "99b8db626e31e5b81787b9783425769681b347011cc59471e33ea46d2ea0cf55",
    url = "https://static.crates.io/crates/pest_generator/pest_generator-2.1.3.crate",
)

archive(
    name = "pest_meta-2.1.3--archive",
    sha256 = "54be6e404f5317079812fc8f9f5279de376d8856929e21c184ecf6bbd692a11d",
    url = "https://static.crates.io/crates/pest_meta/pest_meta-2.1.3.crate",
)

archive(
    name = "petgraph-0.5.1--archive",
    sha256 = "467d164a6de56270bd7c4d070df81d07beace25012d5103ced4e9ff08d6afdb7",
    url = "https://static.crates.io/crates/petgraph/petgraph-0.5.1.crate",
)

archive(
    name = "phf_shared-0.8.0--archive",
    sha256 = "c00cf8b9eafe68dde5e9eaa2cef8ee84a9336a47d566ec55ca16589633b65af7",
    url = "https://static.crates.io/crates/phf_shared/phf_shared-0.8.0.crate",
)

archive(
    name = "pin-project-0.4.24--archive",
    sha256 = "f48fad7cfbff853437be7cf54d7b993af21f53be7f0988cbfe4a51535aa77205",
    url = "https://static.crates.io/crates/pin-project/pin-project-0.4.24.crate",
)

archive(
    name = "pin-project-1.0.2--archive",
    sha256 = "9ccc2237c2c489783abd8c4c80e5450fc0e98644555b1364da68cc29aa151ca7",
    url = "https://static.crates.io/crates/pin-project/pin-project-1.0.2.crate",
)

archive(
    name = "pin-project-internal-0.4.24--archive",
    sha256 = "24c6d293bdd3ca5a1697997854c6cf7855e43fb6a0ba1c47af57a5bcafd158ae",
    url = "https://static.crates.io/crates/pin-project-internal/pin-project-internal-0.4.24.crate",
)

archive(
    name = "pin-project-internal-1.0.2--archive",
    sha256 = "f8e8d2bf0b23038a4424865103a4df472855692821aab4e4f5c3312d461d9e5f",
    url = "https://static.crates.io/crates/pin-project-internal/pin-project-internal-1.0.2.crate",
)

archive(
    name = "pin-project-lite-0.2.6--archive",
    sha256 = "dc0e1f259c92177c30a4c9d177246edd0a3568b25756a977d0632cf8fa37e905",
    url = "https://static.crates.io/crates/pin-project-lite/pin-project-lite-0.2.6.crate",
)

archive(
    name = "pin-utils-0.1.0--archive",
    sha256 = "8b870d8c151b6f2fb93e84a13146138f05d02ed11c7e7c54f8826aaaf7c9f184",
    url = "https://static.crates.io/crates/pin-utils/pin-utils-0.1.0.crate",
)

archive(
    name = "plain-0.2.3--archive",
    sha256 = "b4596b6d070b27117e987119b4dac604f3c58cfb0b191112e24771b2faeac1a6",
    url = "https://static.crates.io/crates/plain/plain-0.2.3.crate",
)

archive(
    name = "ppv-lite86-0.2.9--archive",
    sha256 = "c36fa947111f5c62a733b652544dd0016a43ce89619538a8ef92724a6f501a20",
    url = "https://static.crates.io/crates/ppv-lite86/ppv-lite86-0.2.9.crate",
)

archive(
    name = "precomputed-hash-0.1.1--archive",
    sha256 = "925383efa346730478fb4838dbe9137d2a47675ad789c546d150a6e1dd4ab31c",
    url = "https://static.crates.io/crates/precomputed-hash/precomputed-hash-0.1.1.crate",
)

archive(
    name = "proc-macro-error-1.0.4--archive",
    sha256 = "da25490ff9892aab3fcf7c36f08cfb902dd3e71ca0f9f9517bea02a73a5ce38c",
    url = "https://static.crates.io/crates/proc-macro-error/proc-macro-error-1.0.4.crate",
)

archive(
    name = "proc-macro-error-attr-1.0.4--archive",
    sha256 = "a1be40180e52ecc98ad80b184934baf3d0d29f979574e439af5a55274b35f869",
    url = "https://static.crates.io/crates/proc-macro-error-attr/proc-macro-error-attr-1.0.4.crate",
)

archive(
    name = "proc-macro-hack-0.5.19--archive",
    sha256 = "dbf0c48bc1d91375ae5c3cd81e3722dff1abcf81a30960240640d223f59fe0e5",
    url = "https://static.crates.io/crates/proc-macro-hack/proc-macro-hack-0.5.19.crate",
)

archive(
    name = "proc-macro-nested-0.1.6--archive",
    sha256 = "eba180dafb9038b050a4c280019bbedf9f2467b61e5d892dcad585bb57aadc5a",
    url = "https://static.crates.io/crates/proc-macro-nested/proc-macro-nested-0.1.6.crate",
)

archive(
    name = "proc-macro2-1.0.26--archive",
    sha256 = "a152013215dca273577e18d2bf00fa862b89b24169fb78c4c95aeb07992c9cec",
    url = "https://static.crates.io/crates/proc-macro2/proc-macro2-1.0.26.crate",
)

archive(
    name = "quick-error-1.2.3--archive",
    sha256 = "a1d01941d82fa2ab50be1e79e6714289dd7cde78eba4c074bc5a4374f650dfe0",
    url = "https://static.crates.io/crates/quick-error/quick-error-1.2.3.crate",
)

archive(
    name = "quick-error-2.0.0--archive",
    sha256 = "3ac73b1112776fc109b2e61909bc46c7e1bf0d7f690ffb1676553acce16d5cda",
    url = "https://static.crates.io/crates/quick-error/quick-error-2.0.0.crate",
)

archive(
    name = "quote-1.0.9--archive",
    sha256 = "c3d0b9745dc2debf507c8422de05d7226cc1f0644216dfdfead988f9b1ab32a7",
    url = "https://static.crates.io/crates/quote/quote-1.0.9.crate",
)

archive(
    name = "rand-0.6.5--archive",
    sha256 = "6d71dacdc3c88c1fde3885a3be3fbab9f35724e6ce99467f7d9c5026132184ca",
    url = "https://static.crates.io/crates/rand/rand-0.6.5.crate",
)

archive(
    name = "rand-0.7.3--archive",
    sha256 = "6a6b1679d49b24bbfe0c803429aa1874472f50d9b363131f0e89fc356b544d03",
    url = "https://static.crates.io/crates/rand/rand-0.7.3.crate",
)

archive(
    name = "rand-0.8.3--archive",
    sha256 = "0ef9e7e66b4468674bfcb0c81af8b7fa0bb154fa9f28eb840da5c447baeb8d7e",
    url = "https://static.crates.io/crates/rand/rand-0.8.3.crate",
)

archive(
    name = "rand_chacha-0.1.1--archive",
    sha256 = "556d3a1ca6600bfcbab7c7c91ccb085ac7fbbcd70e008a98742e7847f4f7bcef",
    url = "https://static.crates.io/crates/rand_chacha/rand_chacha-0.1.1.crate",
)

archive(
    name = "rand_chacha-0.2.2--archive",
    sha256 = "f4c8ed856279c9737206bf725bf36935d8666ead7aa69b52be55af369d193402",
    url = "https://static.crates.io/crates/rand_chacha/rand_chacha-0.2.2.crate",
)

archive(
    name = "rand_chacha-0.3.0--archive",
    sha256 = "e12735cf05c9e10bf21534da50a147b924d555dc7a547c42e6bb2d5b6017ae0d",
    url = "https://static.crates.io/crates/rand_chacha/rand_chacha-0.3.0.crate",
)

archive(
    name = "rand_core-0.3.1--archive",
    sha256 = "7a6fdeb83b075e8266dcc8762c22776f6877a63111121f5f8c7411e5be7eed4b",
    url = "https://static.crates.io/crates/rand_core/rand_core-0.3.1.crate",
)

archive(
    name = "rand_core-0.4.2--archive",
    sha256 = "9c33a3c44ca05fa6f1807d8e6743f3824e8509beca625669633be0acbdf509dc",
    url = "https://static.crates.io/crates/rand_core/rand_core-0.4.2.crate",
)

archive(
    name = "rand_core-0.5.1--archive",
    sha256 = "90bde5296fc891b0cef12a6d03ddccc162ce7b2aff54160af9338f8d40df6d19",
    url = "https://static.crates.io/crates/rand_core/rand_core-0.5.1.crate",
)

archive(
    name = "rand_core-0.6.1--archive",
    sha256 = "c026d7df8b298d90ccbbc5190bd04d85e159eaf5576caeacf8741da93ccbd2e5",
    url = "https://static.crates.io/crates/rand_core/rand_core-0.6.1.crate",
)

archive(
    name = "rand_hc-0.1.0--archive",
    sha256 = "7b40677c7be09ae76218dc623efbf7b18e34bced3f38883af07bb75630a21bc4",
    url = "https://static.crates.io/crates/rand_hc/rand_hc-0.1.0.crate",
)

archive(
    name = "rand_isaac-0.1.1--archive",
    sha256 = "ded997c9d5f13925be2a6fd7e66bf1872597f759fd9dd93513dd7e92e5a5ee08",
    url = "https://static.crates.io/crates/rand_isaac/rand_isaac-0.1.1.crate",
)

archive(
    name = "rand_jitter-0.1.4--archive",
    sha256 = "1166d5c91dc97b88d1decc3285bb0a99ed84b05cfd0bc2341bdf2d43fc41e39b",
    url = "https://static.crates.io/crates/rand_jitter/rand_jitter-0.1.4.crate",
)

archive(
    name = "rand_os-0.1.3--archive",
    sha256 = "7b75f676a1e053fc562eafbb47838d67c84801e38fc1ba459e8f180deabd5071",
    url = "https://static.crates.io/crates/rand_os/rand_os-0.1.3.crate",
)

archive(
    name = "rand_pcg-0.1.2--archive",
    sha256 = "abf9b09b01790cfe0364f52bf32995ea3c39f4d2dd011eac241d2914146d0b44",
    url = "https://static.crates.io/crates/rand_pcg/rand_pcg-0.1.2.crate",
)

archive(
    name = "rand_pcg-0.2.1--archive",
    sha256 = "16abd0c1b639e9eb4d7c50c0b8100b0d0f849be2349829c740fe8e6eb4816429",
    url = "https://static.crates.io/crates/rand_pcg/rand_pcg-0.2.1.crate",
)

archive(
    name = "rand_xorshift-0.1.1--archive",
    sha256 = "cbf7e9e623549b0e21f6e97cf8ecf247c1a8fd2e8a992ae265314300b2455d5c",
    url = "https://static.crates.io/crates/rand_xorshift/rand_xorshift-0.1.1.crate",
)

archive(
    name = "rayon-1.5.0--archive",
    sha256 = "8b0d8e0819fadc20c74ea8373106ead0600e3a67ef1fe8da56e39b9ae7275674",
    url = "https://static.crates.io/crates/rayon/rayon-1.5.0.crate",
)

archive(
    name = "rayon-core-1.9.0--archive",
    sha256 = "9ab346ac5921dc62ffa9f89b7a773907511cdfa5490c572ae9be1be33e8afa4a",
    url = "https://static.crates.io/crates/rayon-core/rayon-core-1.9.0.crate",
)

archive(
    name = "regex-1.4.2--archive",
    sha256 = "38cf2c13ed4745de91a5eb834e11c00bcc3709e773173b2ce4c56c9fbde04b9c",
    url = "https://static.crates.io/crates/regex/regex-1.4.2.crate",
)

archive(
    name = "regex-syntax-0.6.21--archive",
    sha256 = "3b181ba2dcf07aaccad5448e8ead58db5b742cf85dfe035e2227f137a539a189",
    url = "https://static.crates.io/crates/regex-syntax/regex-syntax-0.6.21.crate",
)

archive(
    name = "remove_dir_all-0.5.3--archive",
    sha256 = "3acd125665422973a33ac9d3dd2df85edad0f4ae9b00dafb1a05e43a9f5ef8e7",
    url = "https://static.crates.io/crates/remove_dir_all/remove_dir_all-0.5.3.crate",
)

archive(
    name = "resolv-conf-0.7.0--archive",
    sha256 = "52e44394d2086d010551b14b53b1f24e31647570cd1deb0379e2c21b329aba00",
    url = "https://static.crates.io/crates/resolv-conf/resolv-conf-0.7.0.crate",
)

archive(
    name = "ring-0.16.20--archive",
    sha256 = "3053cf52e236a3ed746dfc745aa9cacf1b791d846bdaf412f60a8d7d6e17c8fc",
    url = "https://static.crates.io/crates/ring/ring-0.16.20.crate",
)

archive(
    name = "rustc-demangle-0.1.20--archive",
    sha256 = "dead70b0b5e03e9c814bcb6b01e03e68f7c57a80aa48c72ec92152ab3e818d49",
    url = "https://static.crates.io/crates/rustc-demangle/rustc-demangle-0.1.20.crate",
)

archive(
    name = "rustls-0.19.1--archive",
    sha256 = "35edb675feee39aec9c99fa5ff985081995a06d594114ae14cbe797ad7b7a6d7",
    url = "https://static.crates.io/crates/rustls/rustls-0.19.1.crate",
)

archive(
    name = "rustls-native-certs-0.5.0--archive",
    sha256 = "5a07b7c1885bd8ed3831c289b7870b13ef46fe0e856d288c30d9cc17d75a2092",
    url = "https://static.crates.io/crates/rustls-native-certs/rustls-native-certs-0.5.0.crate",
)

archive(
    name = "rustyline-7.1.0--archive",
    sha256 = "8227301bfc717136f0ecbd3d064ba8199e44497a0bdd46bb01ede4387cfd2cec",
    url = "https://static.crates.io/crates/rustyline/rustyline-7.1.0.crate",
)

archive(
    name = "ryu-1.0.5--archive",
    sha256 = "71d301d4193d031abdd79ff7e3dd721168a9572ef3fe51a1517aba235bd8f86e",
    url = "https://static.crates.io/crates/ryu/ryu-1.0.5.crate",
)

archive(
    name = "safemem-0.3.3--archive",
    sha256 = "ef703b7cb59335eae2eb93ceb664c0eb7ea6bf567079d843e09420219668e072",
    url = "https://static.crates.io/crates/safemem/safemem-0.3.3.crate",
)

archive(
    name = "scoped-tls-1.0.0--archive",
    sha256 = "ea6a9290e3c9cf0f18145ef7ffa62d68ee0bf5fcd651017e586dc7fd5da448c2",
    url = "https://static.crates.io/crates/scoped-tls/scoped-tls-1.0.0.crate",
)

archive(
    name = "scopeguard-1.1.0--archive",
    sha256 = "d29ab0c6d3fc0ee92fe66e2d99f700eab17a8d57d1c1d3b748380fb20baa78cd",
    url = "https://static.crates.io/crates/scopeguard/scopeguard-1.1.0.crate",
)

archive(
    name = "scroll-0.10.1--archive",
    sha256 = "abb2332cb595d33f7edd5700f4cbf94892e680c7f0ae56adab58a35190b66cb1",
    url = "https://static.crates.io/crates/scroll/scroll-0.10.1.crate",
)

archive(
    name = "scroll_derive-0.10.2--archive",
    sha256 = "e367622f934864ffa1c704ba2b82280aab856e3d8213c84c5720257eb34b15b9",
    url = "https://static.crates.io/crates/scroll_derive/scroll_derive-0.10.2.crate",
)

archive(
    name = "sct-0.6.0--archive",
    sha256 = "e3042af939fca8c3453b7af0f1c66e533a15a86169e39de2657310ade8f98d3c",
    url = "https://static.crates.io/crates/sct/sct-0.6.0.crate",
)

archive(
    name = "serde-1.0.126--archive",
    sha256 = "ec7505abeacaec74ae4778d9d9328fe5a5d04253220a85c4ee022239fc996d03",
    url = "https://static.crates.io/crates/serde/serde-1.0.126.crate",
)

archive(
    name = "serde_derive-1.0.126--archive",
    sha256 = "963a7dbc9895aeac7ac90e74f34a5d5261828f79df35cbed41e10189d3804d43",
    url = "https://static.crates.io/crates/serde_derive/serde_derive-1.0.126.crate",
)

archive(
    name = "serde_json-1.0.59--archive",
    sha256 = "dcac07dbffa1c65e7f816ab9eba78eb142c6d44410f4eeba1e26e4f5dfa56b95",
    url = "https://static.crates.io/crates/serde_json/serde_json-1.0.59.crate",
)

archive(
    name = "serde_test-1.0.116--archive",
    sha256 = "923edec3f1ab4a2f489f384e117dc4f826fd977a9d189b28717cba8474dd5c6b",
    url = "https://static.crates.io/crates/serde_test/serde_test-1.0.116.crate",
)

archive(
    name = "serde_urlencoded-0.7.0--archive",
    sha256 = "edfa57a7f8d9c1d260a549e7224100f6c43d43f9103e06dd8b4095a9b2b43ce9",
    url = "https://static.crates.io/crates/serde_urlencoded/serde_urlencoded-0.7.0.crate",
)

archive(
    name = "sha-1-0.8.2--archive",
    sha256 = "f7d94d0bede923b3cea61f3f1ff57ff8cdfd77b400fb8f9998949e0cf04163df",
    url = "https://static.crates.io/crates/sha-1/sha-1-0.8.2.crate",
)

archive(
    name = "sha-1-0.9.4--archive",
    sha256 = "dfebf75d25bd900fd1e7d11501efab59bc846dbc76196839663e6637bba9f25f",
    url = "https://static.crates.io/crates/sha-1/sha-1-0.9.4.crate",
)

archive(
    name = "sha2-0.8.2--archive",
    sha256 = "a256f46ea78a0c0d9ff00077504903ac881a1dafdc20da66545699e7776b3e69",
    url = "https://static.crates.io/crates/sha2/sha2-0.8.2.crate",
)

archive(
    name = "signal-hook-registry-1.4.0--archive",
    sha256 = "e51e73328dc4ac0c7ccbda3a494dfa03df1de2f46018127f60c693f2648455b0",
    url = "https://static.crates.io/crates/signal-hook-registry/signal-hook-registry-1.4.0.crate",
)

archive(
    name = "siphasher-0.3.3--archive",
    sha256 = "fa8f3741c7372e75519bd9346068370c9cdaabcc1f9599cbcf2a2719352286b7",
    url = "https://static.crates.io/crates/siphasher/siphasher-0.3.3.crate",
)

archive(
    name = "slab-0.4.2--archive",
    sha256 = "c111b5bd5695e56cffe5129854aa230b39c93a305372fdbb2668ca2394eea9f8",
    url = "https://static.crates.io/crates/slab/slab-0.4.2.crate",
)

archive(
    name = "slog-2.5.2--archive",
    sha256 = "1cc9c640a4adbfbcc11ffb95efe5aa7af7309e002adab54b185507dbf2377b99",
    url = "https://static.crates.io/crates/slog/slog-2.5.2.crate",
)

archive(
    name = "slog-async-2.5.0--archive",
    sha256 = "51b3336ce47ce2f96673499fc07eb85e3472727b9a7a2959964b002c2ce8fbbb",
    url = "https://static.crates.io/crates/slog-async/slog-async-2.5.0.crate",
)

archive(
    name = "slog-term-2.6.0--archive",
    sha256 = "bab1d807cf71129b05ce36914e1dbb6fbfbdecaf686301cb457f4fa967f9f5b6",
    url = "https://static.crates.io/crates/slog-term/slog-term-2.6.0.crate",
)

archive(
    name = "smallvec-1.6.1--archive",
    sha256 = "fe0f37c9e8f3c5a4a66ad655a93c74daac4ad00c441533bf5c6e7990bb42604e",
    url = "https://static.crates.io/crates/smallvec/smallvec-1.6.1.crate",
)

archive(
    name = "socket2-0.4.0--archive",
    sha256 = "9e3dfc207c526015c632472a77be09cf1b6e46866581aecae5cc38fb4235dea2",
    url = "https://static.crates.io/crates/socket2/socket2-0.4.0.crate",
)

archive(
    name = "spin-0.5.2--archive",
    sha256 = "6e63cff320ae2c57904679ba7cb63280a3dc4613885beafb148ee7bf9aa9042d",
    url = "https://static.crates.io/crates/spin/spin-0.5.2.crate",
)

archive(
    name = "stable_deref_trait-1.2.0--archive",
    sha256 = "a8f112729512f8e442d81f95a8a7ddf2b7c6b8a1a6f509a95864142b30cab2d3",
    url = "https://static.crates.io/crates/stable_deref_trait/stable_deref_trait-1.2.0.crate",
)

archive(
    name = "static_assertions-1.1.0--archive",
    sha256 = "a2eb9349b6444b326872e140eb1cf5e7c522154d69e7a0ffb0fb81c06b37543f",
    url = "https://static.crates.io/crates/static_assertions/static_assertions-1.1.0.crate",
)

archive(
    name = "string_cache-0.8.0--archive",
    sha256 = "2940c75beb4e3bf3a494cef919a747a2cb81e52571e212bfbd185074add7208a",
    url = "https://static.crates.io/crates/string_cache/string_cache-0.8.0.crate",
)

archive(
    name = "strsim-0.8.0--archive",
    sha256 = "8ea5119cdb4c55b55d432abb513a0429384878c15dde60cc77b1c99de1a95a6a",
    url = "https://static.crates.io/crates/strsim/strsim-0.8.0.crate",
)

archive(
    name = "strsim-0.9.3--archive",
    sha256 = "6446ced80d6c486436db5c078dde11a9f73d42b57fb273121e160b84f63d894c",
    url = "https://static.crates.io/crates/strsim/strsim-0.9.3.crate",
)

archive(
    name = "structopt-0.3.21--archive",
    sha256 = "5277acd7ee46e63e5168a80734c9f6ee81b1367a7d8772a2d765df2a3705d28c",
    url = "https://static.crates.io/crates/structopt/structopt-0.3.21.crate",
)

archive(
    name = "structopt-derive-0.4.14--archive",
    sha256 = "5ba9cdfda491b814720b6b06e0cac513d922fc407582032e8706e9f137976f90",
    url = "https://static.crates.io/crates/structopt-derive/structopt-derive-0.4.14.crate",
)

archive(
    name = "syn-1.0.73--archive",
    sha256 = "f71489ff30030d2ae598524f61326b902466f72a0fb1a8564c001cc63425bcc7",
    url = "https://static.crates.io/crates/syn/syn-1.0.73.crate",
)

archive(
    name = "synstructure-0.12.4--archive",
    sha256 = "b834f2d66f734cb897113e34aaff2f1ab4719ca946f9a7358dba8f8064148701",
    url = "https://static.crates.io/crates/synstructure/synstructure-0.12.4.crate",
)

archive(
    name = "take_mut-0.2.2--archive",
    sha256 = "f764005d11ee5f36500a149ace24e00e3da98b0158b3e2d53a7495660d3f4d60",
    url = "https://static.crates.io/crates/take_mut/take_mut-0.2.2.crate",
)

archive(
    name = "tempfile-3.1.0--archive",
    sha256 = "7a6e24d9338a0a5be79593e2fa15a648add6138caa803e2d5bc782c371732ca9",
    url = "https://static.crates.io/crates/tempfile/tempfile-3.1.0.crate",
)

archive(
    name = "term-0.5.2--archive",
    sha256 = "edd106a334b7657c10b7c540a0106114feadeb4dc314513e97df481d5d966f42",
    url = "https://static.crates.io/crates/term/term-0.5.2.crate",
)

archive(
    name = "term-0.6.1--archive",
    sha256 = "c0863a3345e70f61d613eab32ee046ccd1bcc5f9105fe402c61fcd0c13eeb8b5",
    url = "https://static.crates.io/crates/term/term-0.6.1.crate",
)

archive(
    name = "term_size-0.3.2--archive",
    sha256 = "1e4129646ca0ed8f45d09b929036bafad5377103edd06e50bf574b353d2b08d9",
    url = "https://static.crates.io/crates/term_size/term_size-0.3.2.crate",
)

archive(
    name = "textwrap-0.11.0--archive",
    sha256 = "d326610f408c7a4eb6f51c37c330e496b08506c9457c9d34287ecc38809fb060",
    url = "https://static.crates.io/crates/textwrap/textwrap-0.11.0.crate",
)

archive(
    name = "thiserror-1.0.23--archive",
    sha256 = "76cc616c6abf8c8928e2fdcc0dbfab37175edd8fb49a4641066ad1364fdab146",
    url = "https://static.crates.io/crates/thiserror/thiserror-1.0.23.crate",
)

archive(
    name = "thiserror-impl-1.0.23--archive",
    sha256 = "9be73a2caec27583d0046ef3796c3794f868a5bc813db689eed00c7631275cd1",
    url = "https://static.crates.io/crates/thiserror-impl/thiserror-impl-1.0.23.crate",
)

archive(
    name = "thread_local-1.0.1--archive",
    sha256 = "d40c6d1b69745a6ec6fb1ca717914848da4b44ae29d9b3080cbee91d72a69b14",
    url = "https://static.crates.io/crates/thread_local/thread_local-1.0.1.crate",
)

archive(
    name = "time-0.1.44--archive",
    sha256 = "6db9e6914ab8b1ae1c260a4ae7a49b6c5611b40328a735b21862567685e73255",
    url = "https://static.crates.io/crates/time/time-0.1.44.crate",
)

archive(
    name = "tinyvec-0.3.4--archive",
    sha256 = "238ce071d267c5710f9d31451efec16c5ee22de34df17cc05e56cbc92e967117",
    url = "https://static.crates.io/crates/tinyvec/tinyvec-0.3.4.crate",
)

archive(
    name = "tokio-1.7.1--archive",
    sha256 = "5fb2ed024293bb19f7a5dc54fe83bf86532a44c12a2bb8ba40d64a4509395ca2",
    url = "https://static.crates.io/crates/tokio/tokio-1.7.1.crate",
)

archive(
    name = "tokio-macros-1.1.0--archive",
    sha256 = "caf7b11a536f46a809a8a9f0bb4237020f70ecbf115b842360afb127ea2fda57",
    url = "https://static.crates.io/crates/tokio-macros/tokio-macros-1.1.0.crate",
)

archive(
    name = "tokio-rustls-0.22.0--archive",
    sha256 = "bc6844de72e57df1980054b38be3a9f4702aba4858be64dd700181a8a6d0e1b6",
    url = "https://static.crates.io/crates/tokio-rustls/tokio-rustls-0.22.0.crate",
)

archive(
    name = "tokio-stream-0.1.4--archive",
    sha256 = "c535f53c0cfa1acace62995a8994fc9cc1f12d202420da96ff306ee24d576469",
    url = "https://static.crates.io/crates/tokio-stream/tokio-stream-0.1.4.crate",
)

archive(
    name = "tokio-tungstenite-0.13.0--archive",
    sha256 = "e1a5f475f1b9d077ea1017ecbc60890fda8e54942d680ca0b1d2b47cfa2d861b",
    url = "https://static.crates.io/crates/tokio-tungstenite/tokio-tungstenite-0.13.0.crate",
)

archive(
    name = "tokio-util-0.6.3--archive",
    sha256 = "ebb7cb2f00c5ae8df755b252306272cd1790d39728363936e01827e11f0b017b",
    url = "https://static.crates.io/crates/tokio-util/tokio-util-0.6.3.crate",
)

archive(
    name = "toml-0.5.7--archive",
    sha256 = "75cf45bb0bef80604d001caaec0d09da99611b3c0fd39d3080468875cdb65645",
    url = "https://static.crates.io/crates/toml/toml-0.5.7.crate",
)

archive(
    name = "tower-0.4.6--archive",
    sha256 = "f715efe02c0862926eb463e49368d38ddb119383475686178e32e26d15d06a66",
    url = "https://static.crates.io/crates/tower/tower-0.4.6.crate",
)

archive(
    name = "tower-layer-0.3.1--archive",
    sha256 = "343bc9466d3fe6b0f960ef45960509f84480bf4fd96f92901afe7ff3df9d3a62",
    url = "https://static.crates.io/crates/tower-layer/tower-layer-0.3.1.crate",
)

archive(
    name = "tower-service-0.3.0--archive",
    sha256 = "e987b6bf443f4b5b3b6f38704195592cca41c5bb7aedd3c3693c7081f8289860",
    url = "https://static.crates.io/crates/tower-service/tower-service-0.3.0.crate",
)

archive(
    name = "tracing-0.1.22--archive",
    sha256 = "9f47026cdc4080c07e49b37087de021820269d996f581aac150ef9e5583eefe3",
    url = "https://static.crates.io/crates/tracing/tracing-0.1.22.crate",
)

archive(
    name = "tracing-attributes-0.1.11--archive",
    sha256 = "80e0ccfc3378da0cce270c946b676a376943f5cd16aeba64568e7939806f4ada",
    url = "https://static.crates.io/crates/tracing-attributes/tracing-attributes-0.1.11.crate",
)

archive(
    name = "tracing-core-0.1.17--archive",
    sha256 = "f50de3927f93d202783f4513cda820ab47ef17f624b03c096e86ef00c67e6b5f",
    url = "https://static.crates.io/crates/tracing-core/tracing-core-0.1.17.crate",
)

archive(
    name = "tracing-futures-0.2.4--archive",
    sha256 = "ab7bb6f14721aa00656086e9335d363c5c8747bae02ebe32ea2c7dece5689b4c",
    url = "https://static.crates.io/crates/tracing-futures/tracing-futures-0.2.4.crate",
)

archive(
    name = "trust-dns-proto-0.20.0--archive",
    sha256 = "98a0381b2864c2978db7f8e17c7b23cca5a3a5f99241076e13002261a8ecbabd",
    url = "https://static.crates.io/crates/trust-dns-proto/trust-dns-proto-0.20.0.crate",
)

archive(
    name = "trust-dns-resolver-0.20.0--archive",
    sha256 = "3072d18c10bd621cb00507d59cfab5517862285c353160366e37fbf4c74856e4",
    url = "https://static.crates.io/crates/trust-dns-resolver/trust-dns-resolver-0.20.0.crate",
)

archive(
    name = "try-lock-0.2.3--archive",
    sha256 = "59547bce71d9c38b83d9c0e92b6066c4253371f15005def0c30d9657f50c7642",
    url = "https://static.crates.io/crates/try-lock/try-lock-0.2.3.crate",
)

archive(
    name = "tungstenite-0.12.0--archive",
    sha256 = "8ada8297e8d70872fa9a551d93250a9f407beb9f37ef86494eb20012a2ff7c24",
    url = "https://static.crates.io/crates/tungstenite/tungstenite-0.12.0.crate",
)

archive(
    name = "twoway-0.1.8--archive",
    sha256 = "59b11b2b5241ba34be09c3cc85a36e56e48f9888862e19cedf23336d35316ed1",
    url = "https://static.crates.io/crates/twoway/twoway-0.1.8.crate",
)

archive(
    name = "typenum-1.12.0--archive",
    sha256 = "373c8a200f9e67a0c95e62a4f52fbf80c23b4381c05a17845531982fa99e6b33",
    url = "https://static.crates.io/crates/typenum/typenum-1.12.0.crate",
)

archive(
    name = "ucd-trie-0.1.3--archive",
    sha256 = "56dee185309b50d1f11bfedef0fe6d036842e3fb77413abef29f8f8d1c5d4c1c",
    url = "https://static.crates.io/crates/ucd-trie/ucd-trie-0.1.3.crate",
)

archive(
    name = "unicase-2.6.0--archive",
    sha256 = "50f37be617794602aabbeee0be4f259dc1778fabe05e2d67ee8f79326d5cb4f6",
    url = "https://static.crates.io/crates/unicase/unicase-2.6.0.crate",
)

archive(
    name = "unicode-bidi-0.3.4--archive",
    sha256 = "49f2bd0c6468a8230e1db229cff8029217cf623c767ea5d60bfbd42729ea54d5",
    url = "https://static.crates.io/crates/unicode-bidi/unicode-bidi-0.3.4.crate",
)

archive(
    name = "unicode-normalization-0.1.13--archive",
    sha256 = "6fb19cf769fa8c6a80a162df694621ebeb4dafb606470b2b2fce0be40a98a977",
    url = "https://static.crates.io/crates/unicode-normalization/unicode-normalization-0.1.13.crate",
)

archive(
    name = "unicode-segmentation-1.7.1--archive",
    sha256 = "bb0d2e7be6ae3a5fa87eed5fb451aff96f2573d2694942e40543ae0bbe19c796",
    url = "https://static.crates.io/crates/unicode-segmentation/unicode-segmentation-1.7.1.crate",
)

archive(
    name = "unicode-width-0.1.8--archive",
    sha256 = "9337591893a19b88d8d87f2cec1e73fad5cdfd10e5a6f349f498ad6ea2ffb1e3",
    url = "https://static.crates.io/crates/unicode-width/unicode-width-0.1.8.crate",
)

archive(
    name = "unicode-xid-0.2.1--archive",
    sha256 = "f7fe0bb3479651439c9112f72b6c505038574c9fbb575ed1bf3b797fa39dd564",
    url = "https://static.crates.io/crates/unicode-xid/unicode-xid-0.2.1.crate",
)

archive(
    name = "untrusted-0.7.1--archive",
    sha256 = "a156c684c91ea7d62626509bce3cb4e1d9ed5c4d978f7b4352658f96a4c26b4a",
    url = "https://static.crates.io/crates/untrusted/untrusted-0.7.1.crate",
)

archive(
    name = "url-2.2.0--archive",
    sha256 = "5909f2b0817350449ed73e8bcd81c8c3c8d9a7a5d8acba4b27db277f1868976e",
    url = "https://static.crates.io/crates/url/url-2.2.0.crate",
)

archive(
    name = "utf-8-0.7.5--archive",
    sha256 = "05e42f7c18b8f902290b009cde6d651262f956c98bc51bca4cd1d511c9cd85c7",
    url = "https://static.crates.io/crates/utf-8/utf-8-0.7.5.crate",
)

archive(
    name = "utf8-ranges-1.0.4--archive",
    sha256 = "b4ae116fef2b7fea257ed6440d3cfcff7f190865f170cdad00bb6465bf18ecba",
    url = "https://static.crates.io/crates/utf8-ranges/utf8-ranges-1.0.4.crate",
)

archive(
    name = "utf8parse-0.2.0--archive",
    sha256 = "936e4b492acfd135421d8dca4b1aa80a7bfc26e702ef3af710e0752684df5372",
    url = "https://static.crates.io/crates/utf8parse/utf8parse-0.2.0.crate",
)

archive(
    name = "vec_map-0.8.2--archive",
    sha256 = "f1bddf1187be692e79c5ffeab891132dfb0f236ed36a43c7ed39f1165ee20191",
    url = "https://static.crates.io/crates/vec_map/vec_map-0.8.2.crate",
)

archive(
    name = "version_check-0.9.2--archive",
    sha256 = "b5a972e5669d67ba988ce3dc826706fb0a8b01471c088cb0b6110b805cc36aed",
    url = "https://static.crates.io/crates/version_check/version_check-0.9.2.crate",
)

archive(
    name = "want-0.3.0--archive",
    sha256 = "1ce8a968cb1cd110d136ff8b819a556d6fb6d919363c61534f6860c7eb172ba0",
    url = "https://static.crates.io/crates/want/want-0.3.0.crate",
)

archive(
    name = "warp-0.3.0--archive",
    sha256 = "3dafd0aac2818a94a34df0df1100a7356c493d8ede4393875fd0b5c51bb6bc80",
    url = "https://static.crates.io/crates/warp/warp-0.3.0.crate",
)

archive(
    name = "webpki-0.21.3--archive",
    sha256 = "ab146130f5f790d45f82aeeb09e55a256573373ec64409fc19a6fb82fb1032ae",
    url = "https://static.crates.io/crates/webpki/webpki-0.21.3.crate",
)

archive(
    name = "zstd-0.8.0+zstd.1.4.9--archive",
    sha256 = "afab5e288c9e10bcd910b16ad82cb8028b74b09eccaa5ecd90621f99d3380735",
    url = "https://static.crates.io/crates/zstd/zstd-0.8.0+zstd.1.4.9.crate",
)

archive(
    name = "zstd-safe-4.0.0+zstd.1.4.9--archive",
    sha256 = "81f02c0811d5455aa82c6bc400cffd8c882f3a2813f5e2245e2b264443305ab2",
    url = "https://static.crates.io/crates/zstd-safe/zstd-safe-4.0.0+zstd.1.4.9.crate",
)

archive(
    name = "zstd-sys-1.5.0+zstd.1.4.9--archive",
    sha256 = "4e6c094340240369025fc6b731b054ee2a834328fa584310ac96aa4baebdc465",
    url = "https://static.crates.io/crates/zstd-sys/zstd-sys-1.5.0+zstd.1.4.9.crate",
)

third_party_rust_library(
    name = "addr2line-0.13.0",
    srcs = [
        "addr2line-0.13.0/src/lazy.rs",
        "addr2line-0.13.0/src/lib.rs",
    ],
    archive = ":addr2line-0.13.0--archive",
    crate = "addr2line",
    crate_root = "addr2line-0.13.0/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [":gimli"],
)

third_party_rust_library(
    name = "adler-0.2.3",
    srcs = [
        "adler-0.2.3/src/algo.rs",
        "adler-0.2.3/src/lib.rs",
    ],
    archive = ":adler-0.2.3--archive",
    crate = "adler",
    crate_root = "adler-0.2.3/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "ahash-0.7.4",
    srcs = [
        "ahash-0.7.4/src/aes_hash.rs",
        "ahash-0.7.4/src/convert.rs",
        "ahash-0.7.4/src/fallback_hash.rs",
        "ahash-0.7.4/src/hash_map.rs",
        "ahash-0.7.4/src/hash_quality_test.rs",
        "ahash-0.7.4/src/hash_set.rs",
        "ahash-0.7.4/src/lib.rs",
        "ahash-0.7.4/src/operations.rs",
        "ahash-0.7.4/src/random_state.rs",
        "ahash-0.7.4/src/specialize.rs",
    ],
    archive = ":ahash-0.7.4--archive",
    crate = "ahash",
    crate_root = "ahash-0.7.4/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [
        "runtime-rng",
        "specialize",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":getrandom-0.2.2",
        ":once_cell",
    ],
)

third_party_rust_library(
    name = "aho-corasick",
    srcs = [
        "aho-corasick-0.7.13/src/ahocorasick.rs",
        "aho-corasick-0.7.13/src/automaton.rs",
        "aho-corasick-0.7.13/src/buffer.rs",
        "aho-corasick-0.7.13/src/byte_frequencies.rs",
        "aho-corasick-0.7.13/src/classes.rs",
        "aho-corasick-0.7.13/src/dfa.rs",
        "aho-corasick-0.7.13/src/error.rs",
        "aho-corasick-0.7.13/src/lib.rs",
        "aho-corasick-0.7.13/src/nfa.rs",
        "aho-corasick-0.7.13/src/packed/api.rs",
        "aho-corasick-0.7.13/src/packed/mod.rs",
        "aho-corasick-0.7.13/src/packed/pattern.rs",
        "aho-corasick-0.7.13/src/packed/rabinkarp.rs",
        "aho-corasick-0.7.13/src/packed/teddy/compile.rs",
        "aho-corasick-0.7.13/src/packed/teddy/mod.rs",
        "aho-corasick-0.7.13/src/packed/teddy/runtime.rs",
        "aho-corasick-0.7.13/src/packed/tests.rs",
        "aho-corasick-0.7.13/src/packed/vector.rs",
        "aho-corasick-0.7.13/src/prefilter.rs",
        "aho-corasick-0.7.13/src/state_id.rs",
        "aho-corasick-0.7.13/src/tests.rs",
    ],
    archive = ":aho-corasick-0.7.13--archive",
    crate = "aho_corasick",
    crate_root = "aho-corasick-0.7.13/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [
        "default",
        "std",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [":memchr-2.4.0"],
)

third_party_rust_library(
    name = "annotate-snippets",
    srcs = [
        "annotate-snippets-0.9.0/src/display_list/from_snippet.rs",
        "annotate-snippets-0.9.0/src/display_list/mod.rs",
        "annotate-snippets-0.9.0/src/display_list/structs.rs",
        "annotate-snippets-0.9.0/src/formatter/mod.rs",
        "annotate-snippets-0.9.0/src/formatter/style.rs",
        "annotate-snippets-0.9.0/src/lib.rs",
        "annotate-snippets-0.9.0/src/snippet.rs",
        "annotate-snippets-0.9.0/src/stylesheets/color.rs",
        "annotate-snippets-0.9.0/src/stylesheets/mod.rs",
        "annotate-snippets-0.9.0/src/stylesheets/no_color.rs",
    ],
    archive = ":annotate-snippets-0.9.0--archive",
    crate = "annotate_snippets",
    crate_root = "annotate-snippets-0.9.0/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = ["default"],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [":unicode-width"],
)

third_party_rust_library(
    name = "ansi_term-0.11.0",
    srcs = [
        "ansi_term-0.11.0/src/ansi.rs",
        "ansi_term-0.11.0/src/debug.rs",
        "ansi_term-0.11.0/src/difference.rs",
        "ansi_term-0.11.0/src/display.rs",
        "ansi_term-0.11.0/src/lib.rs",
        "ansi_term-0.11.0/src/style.rs",
        "ansi_term-0.11.0/src/windows.rs",
        "ansi_term-0.11.0/src/write.rs",
    ],
    archive = ":ansi_term-0.11.0--archive",
    crate = "ansi_term",
    crate_root = "ansi_term-0.11.0/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "anyhow",
    srcs = [
        "anyhow-1.0.34/src/backtrace.rs",
        "anyhow-1.0.34/src/chain.rs",
        "anyhow-1.0.34/src/context.rs",
        "anyhow-1.0.34/src/error.rs",
        "anyhow-1.0.34/src/fmt.rs",
        "anyhow-1.0.34/src/kind.rs",
        "anyhow-1.0.34/src/lib.rs",
        "anyhow-1.0.34/src/macros.rs",
        "anyhow-1.0.34/src/wrapper.rs",
    ],
    archive = ":anyhow-1.0.34--archive",
    crate = "anyhow",
    crate_root = "anyhow-1.0.34/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [
        "default",
        "std",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = [
        "--cap-lints=allow",
        "--cfg=backtrace",
    ],
    deps = [],
)

third_party_rust_library(
    name = "ascii-canvas-2.0.0",
    srcs = [
        "ascii-canvas-2.0.0/src/lib.rs",
        "ascii-canvas-2.0.0/src/row.rs",
        "ascii-canvas-2.0.0/src/style.rs",
        "ascii-canvas-2.0.0/src/test.rs",
    ],
    archive = ":ascii-canvas-2.0.0--archive",
    crate = "ascii_canvas",
    crate_root = "ascii-canvas-2.0.0/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [":term-0.5.2"],
)

third_party_rust_library(
    name = "async-trait",
    srcs = [
        "async-trait-0.1.51/src/args.rs",
        "async-trait-0.1.51/src/expand.rs",
        "async-trait-0.1.51/src/lib.rs",
        "async-trait-0.1.51/src/lifetime.rs",
        "async-trait-0.1.51/src/parse.rs",
        "async-trait-0.1.51/src/receiver.rs",
    ],
    archive = ":async-trait-0.1.51--archive",
    crate = "async_trait",
    crate_root = "async-trait-0.1.51/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = True,
    rustc_flags = [
        "--cap-lints=allow",
        "@$(location :async-trait-0.1.51-build-script-build-args)",
    ],
    deps = [
        ":proc-macro2",
        ":quote",
        ":syn",
    ],
)

third_party_rust_binary(
    name = "async-trait-0.1.51-build-script-build",
    srcs = ["async-trait-0.1.51/build.rs"],
    archive = ":async-trait-0.1.51--archive",
    crate = "build_script_build",
    crate_root = "async-trait-0.1.51/build.rs",
    edition = "2018",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "atty",
    srcs = ["atty-0.2.14/src/lib.rs"],
    archive = ":atty-0.2.14--archive",
    crate = "atty",
    crate_root = "atty-0.2.14/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [":libc"],
)

third_party_rust_library(
    name = "autocfg-0.1.7",
    srcs = [
        "autocfg-0.1.7/src/error.rs",
        "autocfg-0.1.7/src/lib.rs",
        "autocfg-0.1.7/src/tests.rs",
        "autocfg-0.1.7/src/version.rs",
    ],
    archive = ":autocfg-0.1.7--archive",
    crate = "autocfg",
    crate_root = "autocfg-0.1.7/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "autocfg-1.0.1",
    srcs = [
        "autocfg-1.0.1/src/error.rs",
        "autocfg-1.0.1/src/lib.rs",
        "autocfg-1.0.1/src/tests.rs",
        "autocfg-1.0.1/src/version.rs",
    ],
    archive = ":autocfg-1.0.1--archive",
    crate = "autocfg",
    crate_root = "autocfg-1.0.1/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "backtrace",
    srcs = [
        "backtrace-0.3.51/src/backtrace/dbghelp.rs",
        "backtrace-0.3.51/src/backtrace/libunwind.rs",
        "backtrace-0.3.51/src/backtrace/miri.rs",
        "backtrace-0.3.51/src/backtrace/mod.rs",
        "backtrace-0.3.51/src/backtrace/noop.rs",
        "backtrace-0.3.51/src/capture.rs",
        "backtrace-0.3.51/src/dbghelp.rs",
        "backtrace-0.3.51/src/lib.rs",
        "backtrace-0.3.51/src/print.rs",
        "backtrace-0.3.51/src/print/fuchsia.rs",
        "backtrace-0.3.51/src/symbolize/dbghelp.rs",
        "backtrace-0.3.51/src/symbolize/gimli.rs",
        "backtrace-0.3.51/src/symbolize/gimli/coff.rs",
        "backtrace-0.3.51/src/symbolize/gimli/elf.rs",
        "backtrace-0.3.51/src/symbolize/gimli/macho.rs",
        "backtrace-0.3.51/src/symbolize/gimli/mmap_fake.rs",
        "backtrace-0.3.51/src/symbolize/gimli/mmap_unix.rs",
        "backtrace-0.3.51/src/symbolize/gimli/mmap_windows.rs",
        "backtrace-0.3.51/src/symbolize/gimli/stash.rs",
        "backtrace-0.3.51/src/symbolize/libbacktrace.rs",
        "backtrace-0.3.51/src/symbolize/miri.rs",
        "backtrace-0.3.51/src/symbolize/mod.rs",
        "backtrace-0.3.51/src/symbolize/noop.rs",
        "backtrace-0.3.51/src/types.rs",
        "backtrace-0.3.51/src/windows.rs",
    ],
    archive = ":backtrace-0.3.51--archive",
    crate = "backtrace",
    crate_root = "backtrace-0.3.51/src/lib.rs",
    edition = "2018",
    env = {
        "OUT_DIR": ".",
    },
    features = [
        "addr2line",
        "default",
        "gimli-symbolize",
        "miniz_oxide",
        "object",
        "std",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":addr2line-0.13.0",
        ":cfg-if",
        ":libc",
        ":miniz_oxide-0.4.2",
        ":object-0.20.0",
        ":rustc-demangle",
    ],
)

third_party_rust_library(
    name = "base64-0.12.3",
    srcs = [
        "base64-0.12.3/src/chunked_encoder.rs",
        "base64-0.12.3/src/decode.rs",
        "base64-0.12.3/src/display.rs",
        "base64-0.12.3/src/encode.rs",
        "base64-0.12.3/src/lib.rs",
        "base64-0.12.3/src/read/decoder.rs",
        "base64-0.12.3/src/read/decoder_tests.rs",
        "base64-0.12.3/src/read/mod.rs",
        "base64-0.12.3/src/tables.rs",
        "base64-0.12.3/src/tests.rs",
        "base64-0.12.3/src/write/encoder.rs",
        "base64-0.12.3/src/write/encoder_tests.rs",
        "base64-0.12.3/src/write/mod.rs",
    ],
    archive = ":base64-0.12.3--archive",
    crate = "base64",
    crate_root = "base64-0.12.3/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [
        "default",
        "std",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "base64-0.13.0",
    srcs = [
        "base64-0.13.0/src/chunked_encoder.rs",
        "base64-0.13.0/src/decode.rs",
        "base64-0.13.0/src/display.rs",
        "base64-0.13.0/src/encode.rs",
        "base64-0.13.0/src/lib.rs",
        "base64-0.13.0/src/read/decoder.rs",
        "base64-0.13.0/src/read/decoder_tests.rs",
        "base64-0.13.0/src/read/mod.rs",
        "base64-0.13.0/src/tables.rs",
        "base64-0.13.0/src/tests.rs",
        "base64-0.13.0/src/write/encoder.rs",
        "base64-0.13.0/src/write/encoder_string_writer.rs",
        "base64-0.13.0/src/write/encoder_tests.rs",
        "base64-0.13.0/src/write/mod.rs",
    ],
    archive = ":base64-0.13.0--archive",
    crate = "base64",
    crate_root = "base64-0.13.0/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [
        "default",
        "std",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "beef-0.4.4",
    srcs = [
        "beef-0.4.4/src/generic.rs",
        "beef-0.4.4/src/lean.rs",
        "beef-0.4.4/src/lib.rs",
        "beef-0.4.4/src/serde.rs",
        "beef-0.4.4/src/traits.rs",
        "beef-0.4.4/src/wide.rs",
    ],
    archive = ":beef-0.4.4--archive",
    crate = "beef",
    crate_root = "beef-0.4.4/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = ["default"],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "bit-set",
    srcs = ["bit-set-0.5.2/src/lib.rs"],
    archive = ":bit-set-0.5.2--archive",
    crate = "bit_set",
    crate_root = "bit-set-0.5.2/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [
        "default",
        "std",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [":bit-vec"],
)

third_party_rust_library(
    name = "bit-vec",
    srcs = ["bit-vec-0.6.2/src/lib.rs"],
    archive = ":bit-vec-0.6.2--archive",
    crate = "bit_vec",
    crate_root = "bit-vec-0.6.2/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [
        "default",
        "std",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "bitflags",
    srcs = [
        "bitflags-1.2.1/src/example_generated.rs",
        "bitflags-1.2.1/src/lib.rs",
    ],
    archive = ":bitflags-1.2.1--archive",
    crate = "bitflags",
    crate_root = "bitflags-1.2.1/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = ["default"],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = [
        "--cap-lints=allow",
        "@$(location :bitflags-1.2.1-build-script-build-args)",
    ],
    deps = [],
)

third_party_rust_binary(
    name = "bitflags-1.2.1-build-script-build",
    srcs = [
        "bitflags-1.2.1/build.rs",
        "bitflags-1.2.1/src/example_generated.rs",
        "bitflags-1.2.1/src/lib.rs",
    ],
    archive = ":bitflags-1.2.1--archive",
    crate = "build_script_build",
    crate_root = "bitflags-1.2.1/build.rs",
    edition = "2015",
    env = {
    },
    features = ["default"],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "block-buffer-0.7.3",
    srcs = ["block-buffer-0.7.3/src/lib.rs"],
    archive = ":block-buffer-0.7.3--archive",
    crate = "block_buffer",
    crate_root = "block-buffer-0.7.3/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":block-padding-0.1.5",
        ":byte-tools-0.3.1",
        ":byteorder",
        ":generic-array-0.12.4",
    ],
)

third_party_rust_library(
    name = "block-buffer-0.9.0",
    srcs = ["block-buffer-0.9.0/src/lib.rs"],
    archive = ":block-buffer-0.9.0--archive",
    crate = "block_buffer",
    crate_root = "block-buffer-0.9.0/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [":generic-array"],
)

third_party_rust_library(
    name = "block-padding-0.1.5",
    srcs = ["block-padding-0.1.5/src/lib.rs"],
    archive = ":block-padding-0.1.5--archive",
    crate = "block_padding",
    crate_root = "block-padding-0.1.5/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [":byte-tools-0.3.1"],
)

third_party_rust_library(
    name = "buf_redux-0.8.4",
    srcs = [
        "buf_redux-0.8.4/src/benches.rs",
        "buf_redux-0.8.4/src/buffer/mod.rs",
        "buf_redux-0.8.4/src/buffer/slice_deque_buf.rs",
        "buf_redux-0.8.4/src/buffer/std_buf.rs",
        "buf_redux-0.8.4/src/lib.rs",
        "buf_redux-0.8.4/src/nightly.rs",
        "buf_redux-0.8.4/src/policy.rs",
        "buf_redux-0.8.4/src/ringbuf_tests.rs",
        "buf_redux-0.8.4/src/std_tests.rs",
    ],
    archive = ":buf_redux-0.8.4--archive",
    crate = "buf_redux",
    crate_root = "buf_redux-0.8.4/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":memchr-2.4.0",
        ":safemem-0.3.3",
    ],
)

third_party_rust_library(
    name = "bumpalo",
    srcs = [
        "bumpalo-3.4.0/src/alloc.rs",
        "bumpalo-3.4.0/src/boxed.rs",
        "bumpalo-3.4.0/src/collections/mod.rs",
        "bumpalo-3.4.0/src/collections/raw_vec.rs",
        "bumpalo-3.4.0/src/collections/str/lossy.rs",
        "bumpalo-3.4.0/src/collections/str/mod.rs",
        "bumpalo-3.4.0/src/collections/string.rs",
        "bumpalo-3.4.0/src/collections/vec.rs",
        "bumpalo-3.4.0/src/lib.rs",
    ],
    archive = ":bumpalo-3.4.0--archive",
    crate = "bumpalo",
    crate_root = "bumpalo-3.4.0/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [
        "collections",
        "default",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "byte-tools-0.3.1",
    srcs = ["byte-tools-0.3.1/src/lib.rs"],
    archive = ":byte-tools-0.3.1--archive",
    crate = "byte_tools",
    crate_root = "byte-tools-0.3.1/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "byteorder",
    srcs = [
        "byteorder-1.3.4/src/io.rs",
        "byteorder-1.3.4/src/lib.rs",
    ],
    archive = ":byteorder-1.3.4--archive",
    crate = "byteorder",
    crate_root = "byteorder-1.3.4/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [
        "default",
        "i128",
        "std",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = [
        "--cap-lints=allow",
        "@$(location :byteorder-1.3.4-build-script-build-args)",
    ],
    deps = [],
)

third_party_rust_binary(
    name = "byteorder-1.3.4-build-script-build",
    srcs = [
        "byteorder-1.3.4/benches/bench.rs",
        "byteorder-1.3.4/build.rs",
        "byteorder-1.3.4/src/io.rs",
        "byteorder-1.3.4/src/lib.rs",
    ],
    archive = ":byteorder-1.3.4--archive",
    crate = "build_script_build",
    crate_root = "byteorder-1.3.4/build.rs",
    edition = "2015",
    env = {
    },
    features = [
        "default",
        "i128",
        "std",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "bytes",
    srcs = [
        "bytes-1.0.0/src/buf/buf_impl.rs",
        "bytes-1.0.0/src/buf/buf_mut.rs",
        "bytes-1.0.0/src/buf/chain.rs",
        "bytes-1.0.0/src/buf/iter.rs",
        "bytes-1.0.0/src/buf/limit.rs",
        "bytes-1.0.0/src/buf/mod.rs",
        "bytes-1.0.0/src/buf/reader.rs",
        "bytes-1.0.0/src/buf/take.rs",
        "bytes-1.0.0/src/buf/uninit_slice.rs",
        "bytes-1.0.0/src/buf/vec_deque.rs",
        "bytes-1.0.0/src/buf/writer.rs",
        "bytes-1.0.0/src/bytes.rs",
        "bytes-1.0.0/src/bytes_mut.rs",
        "bytes-1.0.0/src/fmt/debug.rs",
        "bytes-1.0.0/src/fmt/hex.rs",
        "bytes-1.0.0/src/fmt/mod.rs",
        "bytes-1.0.0/src/lib.rs",
        "bytes-1.0.0/src/loom.rs",
        "bytes-1.0.0/src/serde.rs",
    ],
    archive = ":bytes-1.0.0--archive",
    crate = "bytes",
    crate_root = "bytes-1.0.0/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [
        "default",
        "serde",
        "std",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [":serde"],
)

third_party_rust_library(
    name = "bytes-05",
    srcs = [
        "bytes-0.5.6/src/buf/buf_impl.rs",
        "bytes-0.5.6/src/buf/buf_mut.rs",
        "bytes-0.5.6/src/buf/ext/chain.rs",
        "bytes-0.5.6/src/buf/ext/limit.rs",
        "bytes-0.5.6/src/buf/ext/mod.rs",
        "bytes-0.5.6/src/buf/ext/reader.rs",
        "bytes-0.5.6/src/buf/ext/take.rs",
        "bytes-0.5.6/src/buf/ext/writer.rs",
        "bytes-0.5.6/src/buf/iter.rs",
        "bytes-0.5.6/src/buf/mod.rs",
        "bytes-0.5.6/src/buf/vec_deque.rs",
        "bytes-0.5.6/src/bytes.rs",
        "bytes-0.5.6/src/bytes_mut.rs",
        "bytes-0.5.6/src/fmt/debug.rs",
        "bytes-0.5.6/src/fmt/hex.rs",
        "bytes-0.5.6/src/fmt/mod.rs",
        "bytes-0.5.6/src/lib.rs",
        "bytes-0.5.6/src/loom.rs",
        "bytes-0.5.6/src/serde.rs",
    ],
    archive = ":bytes-0.5.6--archive",
    crate = "bytes",
    crate_root = "bytes-0.5.6/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [
        "default",
        "serde",
        "std",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [":serde"],
)

third_party_rust_library(
    name = "cfg-if",
    srcs = ["cfg-if-0.1.10/src/lib.rs"],
    archive = ":cfg-if-0.1.10--archive",
    crate = "cfg_if",
    crate_root = "cfg-if-0.1.10/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "cfg-if-1.0.0",
    srcs = ["cfg-if-1.0.0/src/lib.rs"],
    archive = ":cfg-if-1.0.0--archive",
    crate = "cfg_if",
    crate_root = "cfg-if-1.0.0/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "chrono",
    srcs = [
        "chrono-0.4.19/src/date.rs",
        "chrono-0.4.19/src/datetime.rs",
        "chrono-0.4.19/src/div.rs",
        "chrono-0.4.19/src/format/locales.rs",
        "chrono-0.4.19/src/format/mod.rs",
        "chrono-0.4.19/src/format/parse.rs",
        "chrono-0.4.19/src/format/parsed.rs",
        "chrono-0.4.19/src/format/scan.rs",
        "chrono-0.4.19/src/format/strftime.rs",
        "chrono-0.4.19/src/lib.rs",
        "chrono-0.4.19/src/naive/date.rs",
        "chrono-0.4.19/src/naive/datetime.rs",
        "chrono-0.4.19/src/naive/internals.rs",
        "chrono-0.4.19/src/naive/isoweek.rs",
        "chrono-0.4.19/src/naive/time.rs",
        "chrono-0.4.19/src/offset/fixed.rs",
        "chrono-0.4.19/src/offset/local.rs",
        "chrono-0.4.19/src/offset/mod.rs",
        "chrono-0.4.19/src/offset/utc.rs",
        "chrono-0.4.19/src/oldtime.rs",
        "chrono-0.4.19/src/round.rs",
        "chrono-0.4.19/src/sys.rs",
        "chrono-0.4.19/src/sys/stub.rs",
        "chrono-0.4.19/src/sys/unix.rs",
        "chrono-0.4.19/src/sys/windows.rs",
    ],
    archive = ":chrono-0.4.19--archive",
    crate = "chrono",
    crate_root = "chrono-0.4.19/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [
        "alloc",
        "clock",
        "default",
        "libc",
        "serde",
        "std",
        "time",
        "winapi",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":libc",
        ":num-integer-0.1.44",
        ":num-traits",
        ":serde",
        ":time-01",
    ],
)

third_party_rust_library(
    name = "clap",
    srcs = [
        "clap-2.33.3/src/app/help.rs",
        "clap-2.33.3/src/app/meta.rs",
        "clap-2.33.3/src/app/mod.rs",
        "clap-2.33.3/src/app/parser.rs",
        "clap-2.33.3/src/app/settings.rs",
        "clap-2.33.3/src/app/usage.rs",
        "clap-2.33.3/src/app/validator.rs",
        "clap-2.33.3/src/args/any_arg.rs",
        "clap-2.33.3/src/args/arg.rs",
        "clap-2.33.3/src/args/arg_builder/base.rs",
        "clap-2.33.3/src/args/arg_builder/flag.rs",
        "clap-2.33.3/src/args/arg_builder/mod.rs",
        "clap-2.33.3/src/args/arg_builder/option.rs",
        "clap-2.33.3/src/args/arg_builder/positional.rs",
        "clap-2.33.3/src/args/arg_builder/switched.rs",
        "clap-2.33.3/src/args/arg_builder/valued.rs",
        "clap-2.33.3/src/args/arg_matcher.rs",
        "clap-2.33.3/src/args/arg_matches.rs",
        "clap-2.33.3/src/args/group.rs",
        "clap-2.33.3/src/args/macros.rs",
        "clap-2.33.3/src/args/matched_arg.rs",
        "clap-2.33.3/src/args/mod.rs",
        "clap-2.33.3/src/args/settings.rs",
        "clap-2.33.3/src/args/subcommand.rs",
        "clap-2.33.3/src/completions/bash.rs",
        "clap-2.33.3/src/completions/elvish.rs",
        "clap-2.33.3/src/completions/fish.rs",
        "clap-2.33.3/src/completions/macros.rs",
        "clap-2.33.3/src/completions/mod.rs",
        "clap-2.33.3/src/completions/powershell.rs",
        "clap-2.33.3/src/completions/shell.rs",
        "clap-2.33.3/src/completions/zsh.rs",
        "clap-2.33.3/src/errors.rs",
        "clap-2.33.3/src/fmt.rs",
        "clap-2.33.3/src/lib.rs",
        "clap-2.33.3/src/macros.rs",
        "clap-2.33.3/src/map.rs",
        "clap-2.33.3/src/osstringext.rs",
        "clap-2.33.3/src/strext.rs",
        "clap-2.33.3/src/suggestions.rs",
        "clap-2.33.3/src/usage_parser.rs",
    ],
    archive = ":clap-2.33.3--archive",
    crate = "clap",
    crate_root = "clap-2.33.3/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [
        "ansi_term",
        "atty",
        "color",
        "default",
        "strsim",
        "suggestions",
        "term_size",
        "vec_map",
        "wrap_help",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":ansi_term-0.11.0",
        ":atty",
        ":bitflags",
        ":strsim-0.8.0",
        ":term_size",
        ":textwrap",
        ":unicode-width",
        ":vec_map",
    ],
)

third_party_rust_library(
    name = "const_fn-0.4.2",
    srcs = [
        "const_fn-0.4.2/src/ast.rs",
        "const_fn-0.4.2/src/error.rs",
        "const_fn-0.4.2/src/lib.rs",
        "const_fn-0.4.2/src/to_tokens.rs",
        "const_fn-0.4.2/src/utils.rs",
    ],
    archive = ":const_fn-0.4.2--archive",
    crate = "const_fn",
    crate_root = "const_fn-0.4.2/src/lib.rs",
    edition = "2018",
    env = {
        "OUT_DIR": ".",
    },
    features = [],
    mapped_srcs = {
        "//third-party/rust:const_fn-0.4.2-build-script-build-srcs=version.rs": "const_fn-0.4.2/src/version.rs",
    },
    named_deps = {
    },
    proc_macro = True,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_binary(
    name = "const_fn-0.4.2-build-script-build",
    srcs = ["const_fn-0.4.2/build.rs"],
    archive = ":const_fn-0.4.2--archive",
    crate = "build_script_build",
    crate_root = "const_fn-0.4.2/build.rs",
    edition = "2018",
    env = {
        "OUT_DIR": ".",
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "cpuid-bool-0.1.2",
    srcs = ["cpuid-bool-0.1.2/src/lib.rs"],
    archive = ":cpuid-bool-0.1.2--archive",
    crate = "cpuid_bool",
    crate_root = "cpuid-bool-0.1.2/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "crossbeam-channel",
    srcs = [
        "crossbeam-channel-0.5.0/src/channel.rs",
        "crossbeam-channel-0.5.0/src/context.rs",
        "crossbeam-channel-0.5.0/src/counter.rs",
        "crossbeam-channel-0.5.0/src/err.rs",
        "crossbeam-channel-0.5.0/src/flavors/array.rs",
        "crossbeam-channel-0.5.0/src/flavors/at.rs",
        "crossbeam-channel-0.5.0/src/flavors/list.rs",
        "crossbeam-channel-0.5.0/src/flavors/mod.rs",
        "crossbeam-channel-0.5.0/src/flavors/never.rs",
        "crossbeam-channel-0.5.0/src/flavors/tick.rs",
        "crossbeam-channel-0.5.0/src/flavors/zero.rs",
        "crossbeam-channel-0.5.0/src/lib.rs",
        "crossbeam-channel-0.5.0/src/select.rs",
        "crossbeam-channel-0.5.0/src/select_macro.rs",
        "crossbeam-channel-0.5.0/src/utils.rs",
        "crossbeam-channel-0.5.0/src/waker.rs",
    ],
    archive = ":crossbeam-channel-0.5.0--archive",
    crate = "crossbeam_channel",
    crate_root = "crossbeam-channel-0.5.0/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [
        "crossbeam-utils",
        "default",
        "std",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":cfg-if-1.0.0",
        ":crossbeam-utils-0.8.0",
    ],
)

third_party_rust_library(
    name = "crossbeam-channel-0.4.4",
    srcs = [
        "crossbeam-channel-0.4.4/src/channel.rs",
        "crossbeam-channel-0.4.4/src/context.rs",
        "crossbeam-channel-0.4.4/src/counter.rs",
        "crossbeam-channel-0.4.4/src/err.rs",
        "crossbeam-channel-0.4.4/src/flavors/after.rs",
        "crossbeam-channel-0.4.4/src/flavors/array.rs",
        "crossbeam-channel-0.4.4/src/flavors/list.rs",
        "crossbeam-channel-0.4.4/src/flavors/mod.rs",
        "crossbeam-channel-0.4.4/src/flavors/never.rs",
        "crossbeam-channel-0.4.4/src/flavors/tick.rs",
        "crossbeam-channel-0.4.4/src/flavors/zero.rs",
        "crossbeam-channel-0.4.4/src/lib.rs",
        "crossbeam-channel-0.4.4/src/select.rs",
        "crossbeam-channel-0.4.4/src/select_macro.rs",
        "crossbeam-channel-0.4.4/src/utils.rs",
        "crossbeam-channel-0.4.4/src/waker.rs",
    ],
    archive = ":crossbeam-channel-0.4.4--archive",
    crate = "crossbeam_channel",
    crate_root = "crossbeam-channel-0.4.4/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":crossbeam-utils-0.7.2",
        ":maybe-uninit-2.0.0",
    ],
)

third_party_rust_library(
    name = "crossbeam-deque-0.8.0",
    srcs = [
        "crossbeam-deque-0.8.0/src/deque.rs",
        "crossbeam-deque-0.8.0/src/lib.rs",
    ],
    archive = ":crossbeam-deque-0.8.0--archive",
    crate = "crossbeam_deque",
    crate_root = "crossbeam-deque-0.8.0/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [
        "crossbeam-epoch",
        "crossbeam-utils",
        "default",
        "std",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":cfg-if-1.0.0",
        ":crossbeam-epoch-0.9.1",
        ":crossbeam-utils-0.8.0",
    ],
)

third_party_rust_library(
    name = "crossbeam-epoch-0.9.1",
    srcs = [
        "crossbeam-epoch-0.9.1/src/atomic.rs",
        "crossbeam-epoch-0.9.1/src/collector.rs",
        "crossbeam-epoch-0.9.1/src/default.rs",
        "crossbeam-epoch-0.9.1/src/deferred.rs",
        "crossbeam-epoch-0.9.1/src/epoch.rs",
        "crossbeam-epoch-0.9.1/src/guard.rs",
        "crossbeam-epoch-0.9.1/src/internal.rs",
        "crossbeam-epoch-0.9.1/src/lib.rs",
        "crossbeam-epoch-0.9.1/src/sync/list.rs",
        "crossbeam-epoch-0.9.1/src/sync/mod.rs",
        "crossbeam-epoch-0.9.1/src/sync/queue.rs",
    ],
    archive = ":crossbeam-epoch-0.9.1--archive",
    crate = "crossbeam_epoch",
    crate_root = "crossbeam-epoch-0.9.1/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [
        "alloc",
        "lazy_static",
        "std",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":cfg-if-1.0.0",
        ":const_fn-0.4.2",
        ":crossbeam-utils-0.8.0",
        ":lazy_static",
        ":memoffset",
        ":scopeguard",
    ],
)

third_party_rust_library(
    name = "crossbeam-utils-0.7.2",
    srcs = [
        "crossbeam-utils-0.7.2/src/atomic/atomic_cell.rs",
        "crossbeam-utils-0.7.2/src/atomic/consume.rs",
        "crossbeam-utils-0.7.2/src/atomic/mod.rs",
        "crossbeam-utils-0.7.2/src/atomic/seq_lock.rs",
        "crossbeam-utils-0.7.2/src/atomic/seq_lock_wide.rs",
        "crossbeam-utils-0.7.2/src/backoff.rs",
        "crossbeam-utils-0.7.2/src/cache_padded.rs",
        "crossbeam-utils-0.7.2/src/lib.rs",
        "crossbeam-utils-0.7.2/src/sync/mod.rs",
        "crossbeam-utils-0.7.2/src/sync/parker.rs",
        "crossbeam-utils-0.7.2/src/sync/sharded_lock.rs",
        "crossbeam-utils-0.7.2/src/sync/wait_group.rs",
        "crossbeam-utils-0.7.2/src/thread.rs",
    ],
    archive = ":crossbeam-utils-0.7.2--archive",
    crate = "crossbeam_utils",
    crate_root = "crossbeam-utils-0.7.2/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [
        "default",
        "lazy_static",
        "std",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = [
        "--cap-lints=allow",
        "@$(location :crossbeam-utils-0.7.2-build-script-build-args)",
    ],
    deps = [
        ":cfg-if",
        ":lazy_static",
    ],
)

third_party_rust_binary(
    name = "crossbeam-utils-0.7.2-build-script-build",
    srcs = [
        "crossbeam-utils-0.7.2/benches/atomic_cell.rs",
        "crossbeam-utils-0.7.2/build.rs",
        "crossbeam-utils-0.7.2/src/atomic/atomic_cell.rs",
        "crossbeam-utils-0.7.2/src/atomic/consume.rs",
        "crossbeam-utils-0.7.2/src/atomic/mod.rs",
        "crossbeam-utils-0.7.2/src/atomic/seq_lock.rs",
        "crossbeam-utils-0.7.2/src/atomic/seq_lock_wide.rs",
        "crossbeam-utils-0.7.2/src/backoff.rs",
        "crossbeam-utils-0.7.2/src/cache_padded.rs",
        "crossbeam-utils-0.7.2/src/lib.rs",
        "crossbeam-utils-0.7.2/src/sync/mod.rs",
        "crossbeam-utils-0.7.2/src/sync/parker.rs",
        "crossbeam-utils-0.7.2/src/sync/sharded_lock.rs",
        "crossbeam-utils-0.7.2/src/sync/wait_group.rs",
        "crossbeam-utils-0.7.2/src/thread.rs",
        "crossbeam-utils-0.7.2/tests/atomic_cell.rs",
        "crossbeam-utils-0.7.2/tests/cache_padded.rs",
        "crossbeam-utils-0.7.2/tests/parker.rs",
        "crossbeam-utils-0.7.2/tests/sharded_lock.rs",
        "crossbeam-utils-0.7.2/tests/thread.rs",
        "crossbeam-utils-0.7.2/tests/wait_group.rs",
    ],
    archive = ":crossbeam-utils-0.7.2--archive",
    crate = "build_script_build",
    crate_root = "crossbeam-utils-0.7.2/build.rs",
    edition = "2015",
    env = {
    },
    features = [
        "default",
        "lazy_static",
        "std",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [":autocfg-1.0.1"],
)

third_party_rust_library(
    name = "crossbeam-utils-0.8.0",
    srcs = [
        "crossbeam-utils-0.8.0/src/atomic/atomic_cell.rs",
        "crossbeam-utils-0.8.0/src/atomic/consume.rs",
        "crossbeam-utils-0.8.0/src/atomic/mod.rs",
        "crossbeam-utils-0.8.0/src/atomic/seq_lock.rs",
        "crossbeam-utils-0.8.0/src/atomic/seq_lock_wide.rs",
        "crossbeam-utils-0.8.0/src/backoff.rs",
        "crossbeam-utils-0.8.0/src/cache_padded.rs",
        "crossbeam-utils-0.8.0/src/lib.rs",
        "crossbeam-utils-0.8.0/src/sync/mod.rs",
        "crossbeam-utils-0.8.0/src/sync/parker.rs",
        "crossbeam-utils-0.8.0/src/sync/sharded_lock.rs",
        "crossbeam-utils-0.8.0/src/sync/wait_group.rs",
        "crossbeam-utils-0.8.0/src/thread.rs",
    ],
    archive = ":crossbeam-utils-0.8.0--archive",
    crate = "crossbeam_utils",
    crate_root = "crossbeam-utils-0.8.0/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [
        "default",
        "lazy_static",
        "std",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = [
        "--cap-lints=allow",
        "@$(location :crossbeam-utils-0.8.0-build-script-build-args)",
    ],
    deps = [
        ":cfg-if-1.0.0",
        ":const_fn-0.4.2",
        ":lazy_static",
    ],
)

third_party_rust_binary(
    name = "crossbeam-utils-0.8.0-build-script-build",
    srcs = ["crossbeam-utils-0.8.0/build.rs"],
    archive = ":crossbeam-utils-0.8.0--archive",
    crate = "build_script_build",
    crate_root = "crossbeam-utils-0.8.0/build.rs",
    edition = "2018",
    env = {
    },
    features = [
        "default",
        "lazy_static",
        "std",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [":autocfg-1.0.1"],
)

third_party_rust_library(
    name = "ct-logs-0.8.0",
    srcs = ["ct-logs-0.8.0/src/lib.rs"],
    archive = ":ct-logs-0.8.0--archive",
    crate = "ct_logs",
    crate_root = "ct-logs-0.8.0/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [":sct-0.6.0"],
)

third_party_rust_library(
    name = "darling-0.10.2",
    srcs = [
        "darling-0.10.2/src/lib.rs",
        "darling-0.10.2/src/macros_public.rs",
    ],
    archive = ":darling-0.10.2--archive",
    crate = "darling",
    crate_root = "darling-0.10.2/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [
        "default",
        "suggestions",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":darling_core-0.10.2",
        ":darling_macro-0.10.2",
    ],
)

third_party_rust_library(
    name = "darling_core-0.10.2",
    srcs = [
        "darling_core-0.10.2/src/ast/data.rs",
        "darling_core-0.10.2/src/ast/generics.rs",
        "darling_core-0.10.2/src/ast/mod.rs",
        "darling_core-0.10.2/src/codegen/attr_extractor.rs",
        "darling_core-0.10.2/src/codegen/default_expr.rs",
        "darling_core-0.10.2/src/codegen/error.rs",
        "darling_core-0.10.2/src/codegen/field.rs",
        "darling_core-0.10.2/src/codegen/from_derive_impl.rs",
        "darling_core-0.10.2/src/codegen/from_field.rs",
        "darling_core-0.10.2/src/codegen/from_meta_impl.rs",
        "darling_core-0.10.2/src/codegen/from_type_param.rs",
        "darling_core-0.10.2/src/codegen/from_variant_impl.rs",
        "darling_core-0.10.2/src/codegen/mod.rs",
        "darling_core-0.10.2/src/codegen/outer_from_impl.rs",
        "darling_core-0.10.2/src/codegen/trait_impl.rs",
        "darling_core-0.10.2/src/codegen/variant.rs",
        "darling_core-0.10.2/src/codegen/variant_data.rs",
        "darling_core-0.10.2/src/derive.rs",
        "darling_core-0.10.2/src/error/kind.rs",
        "darling_core-0.10.2/src/error/mod.rs",
        "darling_core-0.10.2/src/from_derive_input.rs",
        "darling_core-0.10.2/src/from_field.rs",
        "darling_core-0.10.2/src/from_generic_param.rs",
        "darling_core-0.10.2/src/from_generics.rs",
        "darling_core-0.10.2/src/from_meta.rs",
        "darling_core-0.10.2/src/from_type_param.rs",
        "darling_core-0.10.2/src/from_variant.rs",
        "darling_core-0.10.2/src/lib.rs",
        "darling_core-0.10.2/src/macros_private.rs",
        "darling_core-0.10.2/src/macros_public.rs",
        "darling_core-0.10.2/src/options/core.rs",
        "darling_core-0.10.2/src/options/forward_attrs.rs",
        "darling_core-0.10.2/src/options/from_derive.rs",
        "darling_core-0.10.2/src/options/from_field.rs",
        "darling_core-0.10.2/src/options/from_meta.rs",
        "darling_core-0.10.2/src/options/from_type_param.rs",
        "darling_core-0.10.2/src/options/from_variant.rs",
        "darling_core-0.10.2/src/options/input_field.rs",
        "darling_core-0.10.2/src/options/input_variant.rs",
        "darling_core-0.10.2/src/options/mod.rs",
        "darling_core-0.10.2/src/options/outer_from.rs",
        "darling_core-0.10.2/src/options/shape.rs",
        "darling_core-0.10.2/src/usage/generics_ext.rs",
        "darling_core-0.10.2/src/usage/ident_set.rs",
        "darling_core-0.10.2/src/usage/lifetimes.rs",
        "darling_core-0.10.2/src/usage/mod.rs",
        "darling_core-0.10.2/src/usage/options.rs",
        "darling_core-0.10.2/src/usage/type_params.rs",
        "darling_core-0.10.2/src/util/ident_string.rs",
        "darling_core-0.10.2/src/util/ignored.rs",
        "darling_core-0.10.2/src/util/mod.rs",
        "darling_core-0.10.2/src/util/over_ride.rs",
        "darling_core-0.10.2/src/util/path_list.rs",
        "darling_core-0.10.2/src/util/spanned_value.rs",
        "darling_core-0.10.2/src/util/with_original.rs",
    ],
    archive = ":darling_core-0.10.2--archive",
    crate = "darling_core",
    crate_root = "darling_core-0.10.2/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [
        "strsim",
        "suggestions",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":fnv",
        ":ident_case-1.0.1",
        ":proc-macro2",
        ":quote",
        ":strsim-0.9.3",
        ":syn",
    ],
)

third_party_rust_library(
    name = "darling_macro-0.10.2",
    srcs = ["darling_macro-0.10.2/src/lib.rs"],
    archive = ":darling_macro-0.10.2--archive",
    crate = "darling_macro",
    crate_root = "darling_macro-0.10.2/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = True,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":darling_core-0.10.2",
        ":quote",
        ":syn",
    ],
)

third_party_rust_library(
    name = "data-encoding",
    srcs = ["data-encoding-2.3.0/src/lib.rs"],
    archive = ":data-encoding-2.3.0--archive",
    crate = "data_encoding",
    crate_root = "data-encoding-2.3.0/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [
        "alloc",
        "default",
        "std",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "derivative",
    srcs = [
        "derivative-2.1.1/src/ast.rs",
        "derivative-2.1.1/src/attr.rs",
        "derivative-2.1.1/src/bound.rs",
        "derivative-2.1.1/src/clone.rs",
        "derivative-2.1.1/src/cmp.rs",
        "derivative-2.1.1/src/debug.rs",
        "derivative-2.1.1/src/default.rs",
        "derivative-2.1.1/src/hash.rs",
        "derivative-2.1.1/src/lib.rs",
        "derivative-2.1.1/src/matcher.rs",
        "derivative-2.1.1/src/paths.rs",
        "derivative-2.1.1/src/utils.rs",
    ],
    archive = ":derivative-2.1.1--archive",
    crate = "derivative",
    crate_root = "derivative-2.1.1/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = ["use_core"],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = True,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":proc-macro2",
        ":quote",
        ":syn",
    ],
)

third_party_rust_library(
    name = "derive_builder",
    srcs = [
        "derive_builder-0.9.0/src/doc_tpl/builder_method.md",
        "derive_builder-0.9.0/src/doc_tpl/builder_struct.md",
        "derive_builder-0.9.0/src/doc_tpl/mod.rs",
        "derive_builder-0.9.0/src/lib.rs",
        "derive_builder-0.9.0/src/log_disabled.rs",
        "derive_builder-0.9.0/src/options/darling_opts.rs",
        "derive_builder-0.9.0/src/options/mod.rs",
    ],
    archive = ":derive_builder-0.9.0--archive",
    crate = "derive_builder",
    crate_root = "derive_builder-0.9.0/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = True,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":darling-0.10.2",
        ":derive_builder_core-0.9.0",
        ":proc-macro2",
        ":quote",
        ":syn",
    ],
)

third_party_rust_library(
    name = "derive_builder_core-0.9.0",
    srcs = [
        "derive_builder_core-0.9.0/src/bindings.rs",
        "derive_builder_core-0.9.0/src/block.rs",
        "derive_builder_core-0.9.0/src/build_method.rs",
        "derive_builder_core-0.9.0/src/builder.rs",
        "derive_builder_core-0.9.0/src/builder_field.rs",
        "derive_builder_core-0.9.0/src/deprecation_notes.rs",
        "derive_builder_core-0.9.0/src/doc_comment.rs",
        "derive_builder_core-0.9.0/src/initializer.rs",
        "derive_builder_core-0.9.0/src/lib.rs",
        "derive_builder_core-0.9.0/src/log_disabled.rs",
        "derive_builder_core-0.9.0/src/options.rs",
        "derive_builder_core-0.9.0/src/setter.rs",
    ],
    archive = ":derive_builder_core-0.9.0--archive",
    crate = "derive_builder_core",
    crate_root = "derive_builder_core-0.9.0/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":darling-0.10.2",
        ":proc-macro2",
        ":quote",
        ":syn",
    ],
)

third_party_rust_library(
    name = "diff",
    srcs = ["diff-0.1.12/src/lib.rs"],
    archive = ":diff-0.1.12--archive",
    crate = "diff",
    crate_root = "diff-0.1.12/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "digest",
    srcs = [
        "digest-0.8.1/src/dev.rs",
        "digest-0.8.1/src/digest.rs",
        "digest-0.8.1/src/dyn_digest.rs",
        "digest-0.8.1/src/errors.rs",
        "digest-0.8.1/src/lib.rs",
    ],
    archive = ":digest-0.8.1--archive",
    crate = "digest",
    crate_root = "digest-0.8.1/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = ["std"],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [":generic-array-0.12.4"],
)

third_party_rust_library(
    name = "digest-0.9.0",
    srcs = [
        "digest-0.9.0/src/dev.rs",
        "digest-0.9.0/src/digest.rs",
        "digest-0.9.0/src/dyn_digest.rs",
        "digest-0.9.0/src/errors.rs",
        "digest-0.9.0/src/fixed.rs",
        "digest-0.9.0/src/lib.rs",
        "digest-0.9.0/src/variable.rs",
        "digest-0.9.0/src/xof.rs",
    ],
    archive = ":digest-0.9.0--archive",
    crate = "digest",
    crate_root = "digest-0.9.0/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [
        "alloc",
        "std",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [":generic-array"],
)

third_party_rust_library(
    name = "dirs",
    srcs = [
        "dirs-2.0.2/src/lib.rs",
        "dirs-2.0.2/src/lin.rs",
        "dirs-2.0.2/src/mac.rs",
        "dirs-2.0.2/src/wasm.rs",
        "dirs-2.0.2/src/win.rs",
    ],
    archive = ":dirs-2.0.2--archive",
    crate = "dirs",
    crate_root = "dirs-2.0.2/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":cfg-if",
        ":dirs-sys-0.3.5",
    ],
)

third_party_rust_library(
    name = "dirs-1.0.5",
    srcs = [
        "dirs-1.0.5/src/lib.rs",
        "dirs-1.0.5/src/lin.rs",
        "dirs-1.0.5/src/mac.rs",
        "dirs-1.0.5/src/redox.rs",
        "dirs-1.0.5/src/unix.rs",
        "dirs-1.0.5/src/win.rs",
    ],
    archive = ":dirs-1.0.5--archive",
    crate = "dirs",
    crate_root = "dirs-1.0.5/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [":libc"],
)

third_party_rust_library(
    name = "dirs-next-2.0.0",
    srcs = [
        "dirs-next-2.0.0/src/lib.rs",
        "dirs-next-2.0.0/src/lin.rs",
        "dirs-next-2.0.0/src/mac.rs",
        "dirs-next-2.0.0/src/wasm.rs",
        "dirs-next-2.0.0/src/win.rs",
    ],
    archive = ":dirs-next-2.0.0--archive",
    crate = "dirs_next",
    crate_root = "dirs-next-2.0.0/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":cfg-if-1.0.0",
        ":dirs-sys-next-0.1.2",
    ],
)

third_party_rust_library(
    name = "dirs-sys-0.3.5",
    srcs = [
        "dirs-sys-0.3.5/src/lib.rs",
        "dirs-sys-0.3.5/src/xdg_user_dirs.rs",
    ],
    archive = ":dirs-sys-0.3.5--archive",
    crate = "dirs_sys",
    crate_root = "dirs-sys-0.3.5/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [":libc"],
)

third_party_rust_library(
    name = "dirs-sys-next-0.1.2",
    srcs = [
        "dirs-sys-next-0.1.2/src/lib.rs",
        "dirs-sys-next-0.1.2/src/xdg_user_dirs.rs",
    ],
    archive = ":dirs-sys-next-0.1.2--archive",
    crate = "dirs_sys_next",
    crate_root = "dirs-sys-next-0.1.2/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [":libc"],
)

third_party_rust_library(
    name = "docopt-1.1.0",
    srcs = [
        "docopt-1.1.0/src/dopt.rs",
        "docopt-1.1.0/src/lib.rs",
        "docopt-1.1.0/src/parse.rs",
        "docopt-1.1.0/src/synonym.rs",
        "docopt-1.1.0/src/test/mod.rs",
        "docopt-1.1.0/src/test/suggestions.rs",
        "docopt-1.1.0/src/test/testcases.rs",
    ],
    archive = ":docopt-1.1.0--archive",
    crate = "docopt",
    crate_root = "docopt-1.1.0/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":lazy_static",
        ":regex",
        ":serde",
        ":strsim-0.9.3",
    ],
)

third_party_rust_library(
    name = "either",
    srcs = [
        "either-1.6.1/src/lib.rs",
        "either-1.6.1/src/serde_untagged.rs",
        "either-1.6.1/src/serde_untagged_optional.rs",
    ],
    archive = ":either-1.6.1--archive",
    crate = "either",
    crate_root = "either-1.6.1/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [
        "default",
        "use_std",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "ena-0.14.0",
    srcs = [
        "ena-0.14.0/src/bitvec.rs",
        "ena-0.14.0/src/lib.rs",
        "ena-0.14.0/src/snapshot_vec.rs",
        "ena-0.14.0/src/undo_log.rs",
        "ena-0.14.0/src/unify/backing_vec.rs",
        "ena-0.14.0/src/unify/mod.rs",
        "ena-0.14.0/src/unify/tests.rs",
    ],
    archive = ":ena-0.14.0--archive",
    crate = "ena",
    crate_root = "ena-0.14.0/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [":log"],
)

third_party_rust_library(
    name = "enum-as-inner-0.3.3",
    srcs = ["enum-as-inner-0.3.3/src/lib.rs"],
    archive = ":enum-as-inner-0.3.3--archive",
    crate = "enum_as_inner",
    crate_root = "enum-as-inner-0.3.3/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = True,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":heck",
        ":proc-macro2",
        ":quote",
        ":syn",
    ],
)

third_party_rust_library(
    name = "erased-serde",
    srcs = [
        "erased-serde-0.3.12/src/any.rs",
        "erased-serde-0.3.12/src/de.rs",
        "erased-serde-0.3.12/src/error.rs",
        "erased-serde-0.3.12/src/features_check/mod.rs",
        "erased-serde-0.3.12/src/lib.rs",
        "erased-serde-0.3.12/src/macros.rs",
        "erased-serde-0.3.12/src/private.rs",
        "erased-serde-0.3.12/src/ser.rs",
    ],
    archive = ":erased-serde-0.3.12--archive",
    crate = "erased_serde",
    crate_root = "erased-serde-0.3.12/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [
        "default",
        "std",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [":serde"],
)

third_party_rust_library(
    name = "failure-deprecated",
    srcs = [
        "failure-0.1.8/src/as_fail.rs",
        "failure-0.1.8/src/backtrace/internal.rs",
        "failure-0.1.8/src/backtrace/mod.rs",
        "failure-0.1.8/src/box_std.rs",
        "failure-0.1.8/src/compat.rs",
        "failure-0.1.8/src/context.rs",
        "failure-0.1.8/src/error/error_impl.rs",
        "failure-0.1.8/src/error/error_impl_small.rs",
        "failure-0.1.8/src/error/mod.rs",
        "failure-0.1.8/src/error_message.rs",
        "failure-0.1.8/src/lib.rs",
        "failure-0.1.8/src/macros.rs",
        "failure-0.1.8/src/result_ext.rs",
        "failure-0.1.8/src/small_error.rs",
        "failure-0.1.8/src/sync_failure.rs",
    ],
    archive = ":failure-0.1.8--archive",
    crate = "failure",
    crate_root = "failure-0.1.8/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [
        "backtrace",
        "default",
        "derive",
        "failure_derive",
        "std",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":backtrace",
        ":failure_derive",
    ],
)

third_party_rust_library(
    name = "failure_derive",
    srcs = ["failure_derive-0.1.8/src/lib.rs"],
    archive = ":failure_derive-0.1.8--archive",
    crate = "failure_derive",
    crate_root = "failure_derive-0.1.8/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = True,
    rustc_flags = [
        "--cap-lints=allow",
        "@$(location :failure_derive-0.1.8-build-script-build-args)",
    ],
    deps = [
        ":proc-macro2",
        ":quote",
        ":syn",
        ":synstructure",
    ],
)

third_party_rust_binary(
    name = "failure_derive-0.1.8-build-script-build",
    srcs = [
        "failure_derive-0.1.8/build.rs",
        "failure_derive-0.1.8/src/lib.rs",
        "failure_derive-0.1.8/tests/backtrace.rs",
        "failure_derive-0.1.8/tests/custom_type_bounds.rs",
        "failure_derive-0.1.8/tests/no_derive_display.rs",
        "failure_derive-0.1.8/tests/tests.rs",
        "failure_derive-0.1.8/tests/wraps.rs",
    ],
    archive = ":failure_derive-0.1.8--archive",
    crate = "build_script_build",
    crate_root = "failure_derive-0.1.8/build.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "failure_ext",
    srcs = [
        "shed/failure_ext/src/context_futures.rs",
        "shed/failure_ext/src/context_streams.rs",
        "shed/failure_ext/src/convert.rs",
        "shed/failure_ext/src/lib.rs",
        "shed/failure_ext/src/macros.rs",
        "shed/failure_ext/src/slogkv.rs",
    ],
    archive = None,
    crate = None,
    crate_root = "shed/failure_ext/src/lib.rs",
    edition = None,
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = [
        "-Aunused_braces",
        "-Wbare_trait_objects",
        "-Wellipsis_inclusive_range_patterns",
        "-Dnon_fmt_panic",
        "-Dunconditional_recursion",
    ],
    deps = [
        ":anyhow",
        ":failure-deprecated",
        ":futures-old",
        ":slog",
    ],
)

third_party_rust_library(
    name = "fake-simd-0.1.2",
    srcs = ["fake-simd-0.1.2/src/lib.rs"],
    archive = ":fake-simd-0.1.2--archive",
    crate = "fake_simd",
    crate_root = "fake-simd-0.1.2/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "fallible-iterator-0.2.0",
    srcs = [
        "fallible-iterator-0.2.0/src/lib.rs",
        "fallible-iterator-0.2.0/src/test.rs",
    ],
    archive = ":fallible-iterator-0.2.0--archive",
    crate = "fallible_iterator",
    crate_root = "fallible-iterator-0.2.0/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [
        "default",
        "std",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "fixedbitset-0.2.0",
    srcs = [
        "fixedbitset-0.2.0/src/lib.rs",
        "fixedbitset-0.2.0/src/range.rs",
    ],
    archive = ":fixedbitset-0.2.0--archive",
    crate = "fixedbitset",
    crate_root = "fixedbitset-0.2.0/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "fnv",
    srcs = ["fnv-1.0.7/lib.rs"],
    archive = ":fnv-1.0.7--archive",
    crate = "fnv",
    crate_root = "fnv-1.0.7/lib.rs",
    edition = "2015",
    env = {
    },
    features = [
        "default",
        "std",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "form_urlencoded-1.0.0",
    srcs = [
        "form_urlencoded-1.0.0/src/lib.rs",
        "form_urlencoded-1.0.0/src/query_encoding.rs",
    ],
    archive = ":form_urlencoded-1.0.0--archive",
    crate = "form_urlencoded",
    crate_root = "form_urlencoded-1.0.0/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":matches-0.1.8",
        ":percent-encoding",
    ],
)

third_party_rust_library(
    name = "fs2",
    srcs = [
        "fs2-0.4.3/src/lib.rs",
        "fs2-0.4.3/src/unix.rs",
        "fs2-0.4.3/src/windows.rs",
    ],
    archive = ":fs2-0.4.3--archive",
    crate = "fs2",
    crate_root = "fs2-0.4.3/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [":libc"],
)

third_party_rust_library(
    name = "futures",
    srcs = ["futures-0.3.13/src/lib.rs"],
    archive = ":futures-0.3.13--archive",
    crate = "futures",
    crate_root = "futures-0.3.13/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [
        "alloc",
        "async-await",
        "compat",
        "default",
        "executor",
        "futures-executor",
        "std",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":futures-channel",
        ":futures-core",
        ":futures-executor-0.3.13",
        ":futures-io-0.3.13",
        ":futures-sink",
        ":futures-task-0.3.13",
        ":futures-util",
    ],
)

third_party_rust_library(
    name = "futures-channel",
    srcs = [
        "futures-channel-0.3.13/src/lib.rs",
        "futures-channel-0.3.13/src/lock.rs",
        "futures-channel-0.3.13/src/mpsc/mod.rs",
        "futures-channel-0.3.13/src/mpsc/queue.rs",
        "futures-channel-0.3.13/src/mpsc/sink_impl.rs",
        "futures-channel-0.3.13/src/oneshot.rs",
    ],
    archive = ":futures-channel-0.3.13--archive",
    crate = "futures_channel",
    crate_root = "futures-channel-0.3.13/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [
        "alloc",
        "default",
        "futures-sink",
        "sink",
        "std",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":futures-core",
        ":futures-sink",
    ],
)

third_party_rust_library(
    name = "futures-core",
    srcs = [
        "futures-core-0.3.13/src/future.rs",
        "futures-core-0.3.13/src/lib.rs",
        "futures-core-0.3.13/src/stream.rs",
        "futures-core-0.3.13/src/task/__internal/atomic_waker.rs",
        "futures-core-0.3.13/src/task/__internal/mod.rs",
        "futures-core-0.3.13/src/task/mod.rs",
        "futures-core-0.3.13/src/task/poll.rs",
    ],
    archive = ":futures-core-0.3.13--archive",
    crate = "futures_core",
    crate_root = "futures-core-0.3.13/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [
        "alloc",
        "default",
        "std",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "futures-executor-0.3.13",
    srcs = [
        "futures-executor-0.3.13/src/enter.rs",
        "futures-executor-0.3.13/src/lib.rs",
        "futures-executor-0.3.13/src/local_pool.rs",
        "futures-executor-0.3.13/src/thread_pool.rs",
        "futures-executor-0.3.13/src/unpark_mutex.rs",
    ],
    archive = ":futures-executor-0.3.13--archive",
    crate = "futures_executor",
    crate_root = "futures-executor-0.3.13/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = ["std"],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":futures-core",
        ":futures-task-0.3.13",
        ":futures-util",
    ],
)

third_party_rust_library(
    name = "futures-io-0.3.13",
    srcs = ["futures-io-0.3.13/src/lib.rs"],
    archive = ":futures-io-0.3.13--archive",
    crate = "futures_io",
    crate_root = "futures-io-0.3.13/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [
        "default",
        "std",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "futures-macro-0.3.13",
    srcs = [
        "futures-macro-0.3.13/src/join.rs",
        "futures-macro-0.3.13/src/lib.rs",
        "futures-macro-0.3.13/src/select.rs",
    ],
    archive = ":futures-macro-0.3.13--archive",
    crate = "futures_macro",
    crate_root = "futures-macro-0.3.13/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = True,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":proc-macro-hack",
        ":proc-macro2",
        ":quote",
        ":syn",
    ],
)

third_party_rust_library(
    name = "futures-old",
    srcs = [
        "futures-0.1.31/src/executor.rs",
        "futures-0.1.31/src/future/and_then.rs",
        "futures-0.1.31/src/future/catch_unwind.rs",
        "futures-0.1.31/src/future/chain.rs",
        "futures-0.1.31/src/future/either.rs",
        "futures-0.1.31/src/future/empty.rs",
        "futures-0.1.31/src/future/flatten.rs",
        "futures-0.1.31/src/future/flatten_stream.rs",
        "futures-0.1.31/src/future/from_err.rs",
        "futures-0.1.31/src/future/fuse.rs",
        "futures-0.1.31/src/future/inspect.rs",
        "futures-0.1.31/src/future/into_stream.rs",
        "futures-0.1.31/src/future/join.rs",
        "futures-0.1.31/src/future/join_all.rs",
        "futures-0.1.31/src/future/lazy.rs",
        "futures-0.1.31/src/future/loop_fn.rs",
        "futures-0.1.31/src/future/map.rs",
        "futures-0.1.31/src/future/map_err.rs",
        "futures-0.1.31/src/future/mod.rs",
        "futures-0.1.31/src/future/option.rs",
        "futures-0.1.31/src/future/or_else.rs",
        "futures-0.1.31/src/future/poll_fn.rs",
        "futures-0.1.31/src/future/result.rs",
        "futures-0.1.31/src/future/select.rs",
        "futures-0.1.31/src/future/select2.rs",
        "futures-0.1.31/src/future/select_all.rs",
        "futures-0.1.31/src/future/select_ok.rs",
        "futures-0.1.31/src/future/shared.rs",
        "futures-0.1.31/src/future/then.rs",
        "futures-0.1.31/src/lib.rs",
        "futures-0.1.31/src/lock.rs",
        "futures-0.1.31/src/poll.rs",
        "futures-0.1.31/src/resultstream.rs",
        "futures-0.1.31/src/sink/buffer.rs",
        "futures-0.1.31/src/sink/fanout.rs",
        "futures-0.1.31/src/sink/flush.rs",
        "futures-0.1.31/src/sink/from_err.rs",
        "futures-0.1.31/src/sink/map_err.rs",
        "futures-0.1.31/src/sink/mod.rs",
        "futures-0.1.31/src/sink/send.rs",
        "futures-0.1.31/src/sink/send_all.rs",
        "futures-0.1.31/src/sink/wait.rs",
        "futures-0.1.31/src/sink/with.rs",
        "futures-0.1.31/src/sink/with_flat_map.rs",
        "futures-0.1.31/src/stream/and_then.rs",
        "futures-0.1.31/src/stream/buffer_unordered.rs",
        "futures-0.1.31/src/stream/buffered.rs",
        "futures-0.1.31/src/stream/catch_unwind.rs",
        "futures-0.1.31/src/stream/chain.rs",
        "futures-0.1.31/src/stream/channel.rs",
        "futures-0.1.31/src/stream/chunks.rs",
        "futures-0.1.31/src/stream/collect.rs",
        "futures-0.1.31/src/stream/concat.rs",
        "futures-0.1.31/src/stream/empty.rs",
        "futures-0.1.31/src/stream/filter.rs",
        "futures-0.1.31/src/stream/filter_map.rs",
        "futures-0.1.31/src/stream/flatten.rs",
        "futures-0.1.31/src/stream/fold.rs",
        "futures-0.1.31/src/stream/for_each.rs",
        "futures-0.1.31/src/stream/forward.rs",
        "futures-0.1.31/src/stream/from_err.rs",
        "futures-0.1.31/src/stream/fuse.rs",
        "futures-0.1.31/src/stream/future.rs",
        "futures-0.1.31/src/stream/futures_ordered.rs",
        "futures-0.1.31/src/stream/futures_unordered.rs",
        "futures-0.1.31/src/stream/inspect.rs",
        "futures-0.1.31/src/stream/inspect_err.rs",
        "futures-0.1.31/src/stream/iter.rs",
        "futures-0.1.31/src/stream/iter_ok.rs",
        "futures-0.1.31/src/stream/iter_result.rs",
        "futures-0.1.31/src/stream/map.rs",
        "futures-0.1.31/src/stream/map_err.rs",
        "futures-0.1.31/src/stream/merge.rs",
        "futures-0.1.31/src/stream/mod.rs",
        "futures-0.1.31/src/stream/once.rs",
        "futures-0.1.31/src/stream/or_else.rs",
        "futures-0.1.31/src/stream/peek.rs",
        "futures-0.1.31/src/stream/poll_fn.rs",
        "futures-0.1.31/src/stream/repeat.rs",
        "futures-0.1.31/src/stream/select.rs",
        "futures-0.1.31/src/stream/skip.rs",
        "futures-0.1.31/src/stream/skip_while.rs",
        "futures-0.1.31/src/stream/split.rs",
        "futures-0.1.31/src/stream/take.rs",
        "futures-0.1.31/src/stream/take_while.rs",
        "futures-0.1.31/src/stream/then.rs",
        "futures-0.1.31/src/stream/unfold.rs",
        "futures-0.1.31/src/stream/wait.rs",
        "futures-0.1.31/src/stream/zip.rs",
        "futures-0.1.31/src/sync/bilock.rs",
        "futures-0.1.31/src/sync/mod.rs",
        "futures-0.1.31/src/sync/mpsc/mod.rs",
        "futures-0.1.31/src/sync/mpsc/queue.rs",
        "futures-0.1.31/src/sync/oneshot.rs",
        "futures-0.1.31/src/task.rs",
        "futures-0.1.31/src/task_impl/atomic_task.rs",
        "futures-0.1.31/src/task_impl/core.rs",
        "futures-0.1.31/src/task_impl/mod.rs",
        "futures-0.1.31/src/task_impl/std/data.rs",
        "futures-0.1.31/src/task_impl/std/mod.rs",
        "futures-0.1.31/src/task_impl/std/task_rc.rs",
        "futures-0.1.31/src/task_impl/std/unpark_mutex.rs",
        "futures-0.1.31/src/unsync/mod.rs",
        "futures-0.1.31/src/unsync/mpsc.rs",
        "futures-0.1.31/src/unsync/oneshot.rs",
    ],
    archive = ":futures-0.1.31--archive",
    crate = "futures",
    crate_root = "futures-0.1.31/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [
        "default",
        "use_std",
        "with-deprecated",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "futures-sink",
    srcs = ["futures-sink-0.3.13/src/lib.rs"],
    archive = ":futures-sink-0.3.13--archive",
    crate = "futures_sink",
    crate_root = "futures-sink-0.3.13/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [
        "alloc",
        "default",
        "std",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "futures-task-0.3.13",
    srcs = [
        "futures-task-0.3.13/src/arc_wake.rs",
        "futures-task-0.3.13/src/future_obj.rs",
        "futures-task-0.3.13/src/lib.rs",
        "futures-task-0.3.13/src/noop_waker.rs",
        "futures-task-0.3.13/src/spawn.rs",
        "futures-task-0.3.13/src/waker.rs",
        "futures-task-0.3.13/src/waker_ref.rs",
    ],
    archive = ":futures-task-0.3.13--archive",
    crate = "futures_task",
    crate_root = "futures-task-0.3.13/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [
        "alloc",
        "std",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "futures-util",
    srcs = [
        "futures-util-0.3.13/src/async_await/join_mod.rs",
        "futures-util-0.3.13/src/async_await/mod.rs",
        "futures-util-0.3.13/src/async_await/pending.rs",
        "futures-util-0.3.13/src/async_await/poll.rs",
        "futures-util-0.3.13/src/async_await/random.rs",
        "futures-util-0.3.13/src/async_await/select_mod.rs",
        "futures-util-0.3.13/src/compat/compat01as03.rs",
        "futures-util-0.3.13/src/compat/compat03as01.rs",
        "futures-util-0.3.13/src/compat/executor.rs",
        "futures-util-0.3.13/src/compat/mod.rs",
        "futures-util-0.3.13/src/fns.rs",
        "futures-util-0.3.13/src/future/abortable.rs",
        "futures-util-0.3.13/src/future/either.rs",
        "futures-util-0.3.13/src/future/future/catch_unwind.rs",
        "futures-util-0.3.13/src/future/future/flatten.rs",
        "futures-util-0.3.13/src/future/future/fuse.rs",
        "futures-util-0.3.13/src/future/future/map.rs",
        "futures-util-0.3.13/src/future/future/mod.rs",
        "futures-util-0.3.13/src/future/future/remote_handle.rs",
        "futures-util-0.3.13/src/future/future/shared.rs",
        "futures-util-0.3.13/src/future/join.rs",
        "futures-util-0.3.13/src/future/join_all.rs",
        "futures-util-0.3.13/src/future/lazy.rs",
        "futures-util-0.3.13/src/future/maybe_done.rs",
        "futures-util-0.3.13/src/future/mod.rs",
        "futures-util-0.3.13/src/future/option.rs",
        "futures-util-0.3.13/src/future/pending.rs",
        "futures-util-0.3.13/src/future/poll_fn.rs",
        "futures-util-0.3.13/src/future/ready.rs",
        "futures-util-0.3.13/src/future/select.rs",
        "futures-util-0.3.13/src/future/select_all.rs",
        "futures-util-0.3.13/src/future/select_ok.rs",
        "futures-util-0.3.13/src/future/try_future/into_future.rs",
        "futures-util-0.3.13/src/future/try_future/mod.rs",
        "futures-util-0.3.13/src/future/try_future/try_flatten.rs",
        "futures-util-0.3.13/src/future/try_future/try_flatten_err.rs",
        "futures-util-0.3.13/src/future/try_join.rs",
        "futures-util-0.3.13/src/future/try_join_all.rs",
        "futures-util-0.3.13/src/future/try_maybe_done.rs",
        "futures-util-0.3.13/src/future/try_select.rs",
        "futures-util-0.3.13/src/io/allow_std.rs",
        "futures-util-0.3.13/src/io/buf_reader.rs",
        "futures-util-0.3.13/src/io/buf_writer.rs",
        "futures-util-0.3.13/src/io/chain.rs",
        "futures-util-0.3.13/src/io/close.rs",
        "futures-util-0.3.13/src/io/copy.rs",
        "futures-util-0.3.13/src/io/copy_buf.rs",
        "futures-util-0.3.13/src/io/cursor.rs",
        "futures-util-0.3.13/src/io/empty.rs",
        "futures-util-0.3.13/src/io/fill_buf.rs",
        "futures-util-0.3.13/src/io/flush.rs",
        "futures-util-0.3.13/src/io/into_sink.rs",
        "futures-util-0.3.13/src/io/lines.rs",
        "futures-util-0.3.13/src/io/mod.rs",
        "futures-util-0.3.13/src/io/read.rs",
        "futures-util-0.3.13/src/io/read_exact.rs",
        "futures-util-0.3.13/src/io/read_line.rs",
        "futures-util-0.3.13/src/io/read_to_end.rs",
        "futures-util-0.3.13/src/io/read_to_string.rs",
        "futures-util-0.3.13/src/io/read_until.rs",
        "futures-util-0.3.13/src/io/read_vectored.rs",
        "futures-util-0.3.13/src/io/repeat.rs",
        "futures-util-0.3.13/src/io/seek.rs",
        "futures-util-0.3.13/src/io/sink.rs",
        "futures-util-0.3.13/src/io/split.rs",
        "futures-util-0.3.13/src/io/take.rs",
        "futures-util-0.3.13/src/io/window.rs",
        "futures-util-0.3.13/src/io/write.rs",
        "futures-util-0.3.13/src/io/write_all.rs",
        "futures-util-0.3.13/src/io/write_all_vectored.rs",
        "futures-util-0.3.13/src/io/write_vectored.rs",
        "futures-util-0.3.13/src/lib.rs",
        "futures-util-0.3.13/src/lock/bilock.rs",
        "futures-util-0.3.13/src/lock/mod.rs",
        "futures-util-0.3.13/src/lock/mutex.rs",
        "futures-util-0.3.13/src/never.rs",
        "futures-util-0.3.13/src/sink/buffer.rs",
        "futures-util-0.3.13/src/sink/close.rs",
        "futures-util-0.3.13/src/sink/drain.rs",
        "futures-util-0.3.13/src/sink/err_into.rs",
        "futures-util-0.3.13/src/sink/fanout.rs",
        "futures-util-0.3.13/src/sink/feed.rs",
        "futures-util-0.3.13/src/sink/flush.rs",
        "futures-util-0.3.13/src/sink/map_err.rs",
        "futures-util-0.3.13/src/sink/mod.rs",
        "futures-util-0.3.13/src/sink/send.rs",
        "futures-util-0.3.13/src/sink/send_all.rs",
        "futures-util-0.3.13/src/sink/unfold.rs",
        "futures-util-0.3.13/src/sink/with.rs",
        "futures-util-0.3.13/src/sink/with_flat_map.rs",
        "futures-util-0.3.13/src/stream/empty.rs",
        "futures-util-0.3.13/src/stream/futures_ordered.rs",
        "futures-util-0.3.13/src/stream/futures_unordered/abort.rs",
        "futures-util-0.3.13/src/stream/futures_unordered/iter.rs",
        "futures-util-0.3.13/src/stream/futures_unordered/mod.rs",
        "futures-util-0.3.13/src/stream/futures_unordered/ready_to_run_queue.rs",
        "futures-util-0.3.13/src/stream/futures_unordered/task.rs",
        "futures-util-0.3.13/src/stream/iter.rs",
        "futures-util-0.3.13/src/stream/mod.rs",
        "futures-util-0.3.13/src/stream/once.rs",
        "futures-util-0.3.13/src/stream/pending.rs",
        "futures-util-0.3.13/src/stream/poll_fn.rs",
        "futures-util-0.3.13/src/stream/repeat.rs",
        "futures-util-0.3.13/src/stream/repeat_with.rs",
        "futures-util-0.3.13/src/stream/select.rs",
        "futures-util-0.3.13/src/stream/select_all.rs",
        "futures-util-0.3.13/src/stream/stream/buffer_unordered.rs",
        "futures-util-0.3.13/src/stream/stream/buffered.rs",
        "futures-util-0.3.13/src/stream/stream/catch_unwind.rs",
        "futures-util-0.3.13/src/stream/stream/chain.rs",
        "futures-util-0.3.13/src/stream/stream/chunks.rs",
        "futures-util-0.3.13/src/stream/stream/collect.rs",
        "futures-util-0.3.13/src/stream/stream/concat.rs",
        "futures-util-0.3.13/src/stream/stream/cycle.rs",
        "futures-util-0.3.13/src/stream/stream/enumerate.rs",
        "futures-util-0.3.13/src/stream/stream/filter.rs",
        "futures-util-0.3.13/src/stream/stream/filter_map.rs",
        "futures-util-0.3.13/src/stream/stream/flatten.rs",
        "futures-util-0.3.13/src/stream/stream/fold.rs",
        "futures-util-0.3.13/src/stream/stream/for_each.rs",
        "futures-util-0.3.13/src/stream/stream/for_each_concurrent.rs",
        "futures-util-0.3.13/src/stream/stream/forward.rs",
        "futures-util-0.3.13/src/stream/stream/fuse.rs",
        "futures-util-0.3.13/src/stream/stream/into_future.rs",
        "futures-util-0.3.13/src/stream/stream/map.rs",
        "futures-util-0.3.13/src/stream/stream/mod.rs",
        "futures-util-0.3.13/src/stream/stream/next.rs",
        "futures-util-0.3.13/src/stream/stream/peek.rs",
        "futures-util-0.3.13/src/stream/stream/ready_chunks.rs",
        "futures-util-0.3.13/src/stream/stream/scan.rs",
        "futures-util-0.3.13/src/stream/stream/select_next_some.rs",
        "futures-util-0.3.13/src/stream/stream/skip.rs",
        "futures-util-0.3.13/src/stream/stream/skip_while.rs",
        "futures-util-0.3.13/src/stream/stream/split.rs",
        "futures-util-0.3.13/src/stream/stream/take.rs",
        "futures-util-0.3.13/src/stream/stream/take_until.rs",
        "futures-util-0.3.13/src/stream/stream/take_while.rs",
        "futures-util-0.3.13/src/stream/stream/then.rs",
        "futures-util-0.3.13/src/stream/stream/unzip.rs",
        "futures-util-0.3.13/src/stream/stream/zip.rs",
        "futures-util-0.3.13/src/stream/try_stream/and_then.rs",
        "futures-util-0.3.13/src/stream/try_stream/into_async_read.rs",
        "futures-util-0.3.13/src/stream/try_stream/into_stream.rs",
        "futures-util-0.3.13/src/stream/try_stream/mod.rs",
        "futures-util-0.3.13/src/stream/try_stream/or_else.rs",
        "futures-util-0.3.13/src/stream/try_stream/try_buffer_unordered.rs",
        "futures-util-0.3.13/src/stream/try_stream/try_buffered.rs",
        "futures-util-0.3.13/src/stream/try_stream/try_collect.rs",
        "futures-util-0.3.13/src/stream/try_stream/try_concat.rs",
        "futures-util-0.3.13/src/stream/try_stream/try_filter.rs",
        "futures-util-0.3.13/src/stream/try_stream/try_filter_map.rs",
        "futures-util-0.3.13/src/stream/try_stream/try_flatten.rs",
        "futures-util-0.3.13/src/stream/try_stream/try_fold.rs",
        "futures-util-0.3.13/src/stream/try_stream/try_for_each.rs",
        "futures-util-0.3.13/src/stream/try_stream/try_for_each_concurrent.rs",
        "futures-util-0.3.13/src/stream/try_stream/try_next.rs",
        "futures-util-0.3.13/src/stream/try_stream/try_skip_while.rs",
        "futures-util-0.3.13/src/stream/try_stream/try_take_while.rs",
        "futures-util-0.3.13/src/stream/try_stream/try_unfold.rs",
        "futures-util-0.3.13/src/stream/unfold.rs",
        "futures-util-0.3.13/src/task/mod.rs",
        "futures-util-0.3.13/src/task/spawn.rs",
        "futures-util-0.3.13/src/unfold_state.rs",
    ],
    archive = ":futures-util-0.3.13--archive",
    crate = "futures_util",
    crate_root = "futures-util-0.3.13/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [
        "alloc",
        "async-await",
        "async-await-macro",
        "channel",
        "compat",
        "default",
        "futures-channel",
        "futures-io",
        "futures-macro",
        "futures-sink",
        "futures_01",
        "io",
        "memchr",
        "proc-macro-hack",
        "proc-macro-nested",
        "sink",
        "slab",
        "std",
    ],
    mapped_srcs = {
    },
    named_deps = {
        "futures_01": ":futures-old",
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":futures-channel",
        ":futures-core",
        ":futures-io-0.3.13",
        ":futures-macro-0.3.13",
        ":futures-sink",
        ":futures-task-0.3.13",
        ":memchr-2.4.0",
        ":pin-project-lite-0.2.6",
        ":pin-utils-0.1.0",
        ":proc-macro-hack",
        ":proc-macro-nested-0.1.6",
        ":slab-0.4.2",
    ],
)

third_party_rust_library(
    name = "generic-array",
    srcs = [
        "generic-array-0.14.4/src/arr.rs",
        "generic-array-0.14.4/src/functional.rs",
        "generic-array-0.14.4/src/hex.rs",
        "generic-array-0.14.4/src/impl_serde.rs",
        "generic-array-0.14.4/src/impls.rs",
        "generic-array-0.14.4/src/iter.rs",
        "generic-array-0.14.4/src/lib.rs",
        "generic-array-0.14.4/src/sequence.rs",
    ],
    archive = ":generic-array-0.14.4--archive",
    crate = "generic_array",
    crate_root = "generic-array-0.14.4/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = [
        "--cap-lints=allow",
        "@$(location :generic-array-0.14.4-build-script-build-args)",
    ],
    deps = [":typenum"],
)

third_party_rust_library(
    name = "generic-array-0.12.4",
    srcs = [
        "generic-array-0.12.4/src/arr.rs",
        "generic-array-0.12.4/src/functional.rs",
        "generic-array-0.12.4/src/hex.rs",
        "generic-array-0.12.4/src/impl_serde.rs",
        "generic-array-0.12.4/src/impls.rs",
        "generic-array-0.12.4/src/iter.rs",
        "generic-array-0.12.4/src/lib.rs",
        "generic-array-0.12.4/src/sequence.rs",
    ],
    archive = ":generic-array-0.12.4--archive",
    crate = "generic_array",
    crate_root = "generic-array-0.12.4/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [":typenum"],
)

third_party_rust_binary(
    name = "generic-array-0.14.4-build-script-build",
    srcs = [
        "generic-array-0.14.4/build.rs",
        "generic-array-0.14.4/src/arr.rs",
        "generic-array-0.14.4/src/functional.rs",
        "generic-array-0.14.4/src/hex.rs",
        "generic-array-0.14.4/src/impl_serde.rs",
        "generic-array-0.14.4/src/impls.rs",
        "generic-array-0.14.4/src/iter.rs",
        "generic-array-0.14.4/src/lib.rs",
        "generic-array-0.14.4/src/sequence.rs",
        "generic-array-0.14.4/tests/arr.rs",
        "generic-array-0.14.4/tests/generics.rs",
        "generic-array-0.14.4/tests/hex.rs",
        "generic-array-0.14.4/tests/import_name.rs",
        "generic-array-0.14.4/tests/iter.rs",
        "generic-array-0.14.4/tests/mod.rs",
    ],
    archive = ":generic-array-0.14.4--archive",
    crate = "build_script_build",
    crate_root = "generic-array-0.14.4/build.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [":version_check-0.9.2"],
)

third_party_rust_library(
    name = "getrandom-0.1.15",
    srcs = [
        "getrandom-0.1.15/src/bsd_arandom.rs",
        "getrandom-0.1.15/src/cloudabi.rs",
        "getrandom-0.1.15/src/dummy.rs",
        "getrandom-0.1.15/src/error.rs",
        "getrandom-0.1.15/src/error_impls.rs",
        "getrandom-0.1.15/src/fuchsia.rs",
        "getrandom-0.1.15/src/ios.rs",
        "getrandom-0.1.15/src/lib.rs",
        "getrandom-0.1.15/src/linux_android.rs",
        "getrandom-0.1.15/src/macos.rs",
        "getrandom-0.1.15/src/openbsd.rs",
        "getrandom-0.1.15/src/rdrand.rs",
        "getrandom-0.1.15/src/solaris_illumos.rs",
        "getrandom-0.1.15/src/use_file.rs",
        "getrandom-0.1.15/src/util.rs",
        "getrandom-0.1.15/src/util_libc.rs",
        "getrandom-0.1.15/src/vxworks.rs",
        "getrandom-0.1.15/src/wasi.rs",
        "getrandom-0.1.15/src/wasm32_bindgen.rs",
        "getrandom-0.1.15/src/wasm32_stdweb.rs",
        "getrandom-0.1.15/src/windows.rs",
        "getrandom-0.1.15/src/windows_uwp.rs",
    ],
    archive = ":getrandom-0.1.15--archive",
    crate = "getrandom",
    crate_root = "getrandom-0.1.15/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = ["std"],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = [
        "--cap-lints=allow",
        "@$(location :getrandom-0.1.15-build-script-build-args)",
    ],
    deps = [
        ":cfg-if",
        ":libc",
    ],
)

third_party_rust_binary(
    name = "getrandom-0.1.15-build-script-build",
    srcs = ["getrandom-0.1.15/build.rs"],
    archive = ":getrandom-0.1.15--archive",
    crate = "build_script_build",
    crate_root = "getrandom-0.1.15/build.rs",
    edition = "2018",
    env = {
    },
    features = ["std"],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "getrandom-0.2.2",
    srcs = [
        "getrandom-0.2.2/src/bsd_arandom.rs",
        "getrandom-0.2.2/src/custom.rs",
        "getrandom-0.2.2/src/error.rs",
        "getrandom-0.2.2/src/error_impls.rs",
        "getrandom-0.2.2/src/fuchsia.rs",
        "getrandom-0.2.2/src/ios.rs",
        "getrandom-0.2.2/src/js.rs",
        "getrandom-0.2.2/src/lib.rs",
        "getrandom-0.2.2/src/linux_android.rs",
        "getrandom-0.2.2/src/macos.rs",
        "getrandom-0.2.2/src/openbsd.rs",
        "getrandom-0.2.2/src/rdrand.rs",
        "getrandom-0.2.2/src/solaris_illumos.rs",
        "getrandom-0.2.2/src/use_file.rs",
        "getrandom-0.2.2/src/util.rs",
        "getrandom-0.2.2/src/util_libc.rs",
        "getrandom-0.2.2/src/vxworks.rs",
        "getrandom-0.2.2/src/wasi.rs",
        "getrandom-0.2.2/src/windows.rs",
    ],
    archive = ":getrandom-0.2.2--archive",
    crate = "getrandom",
    crate_root = "getrandom-0.2.2/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = ["std"],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = [
        "--cap-lints=allow",
        "@$(location :getrandom-0.2.2-build-script-build-args)",
    ],
    deps = [
        ":cfg-if-1.0.0",
        ":libc",
    ],
)

third_party_rust_binary(
    name = "getrandom-0.2.2-build-script-build",
    srcs = ["getrandom-0.2.2/build.rs"],
    archive = ":getrandom-0.2.2--archive",
    crate = "build_script_build",
    crate_root = "getrandom-0.2.2/build.rs",
    edition = "2018",
    env = {
    },
    features = ["std"],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "gimli",
    srcs = [
        "gimli-0.22.0/src/arch.rs",
        "gimli-0.22.0/src/common.rs",
        "gimli-0.22.0/src/constants.rs",
        "gimli-0.22.0/src/endianity.rs",
        "gimli-0.22.0/src/leb128.rs",
        "gimli-0.22.0/src/lib.rs",
        "gimli-0.22.0/src/read/abbrev.rs",
        "gimli-0.22.0/src/read/addr.rs",
        "gimli-0.22.0/src/read/aranges.rs",
        "gimli-0.22.0/src/read/cfi.rs",
        "gimli-0.22.0/src/read/dwarf.rs",
        "gimli-0.22.0/src/read/endian_reader.rs",
        "gimli-0.22.0/src/read/endian_slice.rs",
        "gimli-0.22.0/src/read/line.rs",
        "gimli-0.22.0/src/read/loclists.rs",
        "gimli-0.22.0/src/read/lookup.rs",
        "gimli-0.22.0/src/read/mod.rs",
        "gimli-0.22.0/src/read/op.rs",
        "gimli-0.22.0/src/read/pubnames.rs",
        "gimli-0.22.0/src/read/pubtypes.rs",
        "gimli-0.22.0/src/read/reader.rs",
        "gimli-0.22.0/src/read/rnglists.rs",
        "gimli-0.22.0/src/read/str.rs",
        "gimli-0.22.0/src/read/unit.rs",
        "gimli-0.22.0/src/read/value.rs",
        "gimli-0.22.0/src/test_util.rs",
        "gimli-0.22.0/src/write/abbrev.rs",
        "gimli-0.22.0/src/write/cfi.rs",
        "gimli-0.22.0/src/write/dwarf.rs",
        "gimli-0.22.0/src/write/endian_vec.rs",
        "gimli-0.22.0/src/write/line.rs",
        "gimli-0.22.0/src/write/loc.rs",
        "gimli-0.22.0/src/write/mod.rs",
        "gimli-0.22.0/src/write/op.rs",
        "gimli-0.22.0/src/write/range.rs",
        "gimli-0.22.0/src/write/section.rs",
        "gimli-0.22.0/src/write/str.rs",
        "gimli-0.22.0/src/write/unit.rs",
        "gimli-0.22.0/src/write/writer.rs",
    ],
    archive = ":gimli-0.22.0--archive",
    crate = "gimli",
    crate_root = "gimli-0.22.0/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [
        "default",
        "endian-reader",
        "fallible-iterator",
        "indexmap",
        "read",
        "stable_deref_trait",
        "std",
        "write",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":fallible-iterator-0.2.0",
        ":indexmap",
        ":stable_deref_trait",
    ],
)

third_party_rust_library(
    name = "goblin",
    srcs = [
        "goblin-0.3.4/src/archive/mod.rs",
        "goblin-0.3.4/src/elf/compression_header.rs",
        "goblin-0.3.4/src/elf/constants_header.rs",
        "goblin-0.3.4/src/elf/constants_relocation.rs",
        "goblin-0.3.4/src/elf/dynamic.rs",
        "goblin-0.3.4/src/elf/gnu_hash.rs",
        "goblin-0.3.4/src/elf/header.rs",
        "goblin-0.3.4/src/elf/mod.rs",
        "goblin-0.3.4/src/elf/note.rs",
        "goblin-0.3.4/src/elf/program_header.rs",
        "goblin-0.3.4/src/elf/reloc.rs",
        "goblin-0.3.4/src/elf/section_header.rs",
        "goblin-0.3.4/src/elf/sym.rs",
        "goblin-0.3.4/src/error.rs",
        "goblin-0.3.4/src/lib.rs",
        "goblin-0.3.4/src/mach/bind_opcodes.rs",
        "goblin-0.3.4/src/mach/constants.rs",
        "goblin-0.3.4/src/mach/exports.rs",
        "goblin-0.3.4/src/mach/fat.rs",
        "goblin-0.3.4/src/mach/header.rs",
        "goblin-0.3.4/src/mach/imports.rs",
        "goblin-0.3.4/src/mach/load_command.rs",
        "goblin-0.3.4/src/mach/mod.rs",
        "goblin-0.3.4/src/mach/relocation.rs",
        "goblin-0.3.4/src/mach/segment.rs",
        "goblin-0.3.4/src/mach/symbols.rs",
        "goblin-0.3.4/src/pe/characteristic.rs",
        "goblin-0.3.4/src/pe/data_directories.rs",
        "goblin-0.3.4/src/pe/debug.rs",
        "goblin-0.3.4/src/pe/exception.rs",
        "goblin-0.3.4/src/pe/export.rs",
        "goblin-0.3.4/src/pe/header.rs",
        "goblin-0.3.4/src/pe/import.rs",
        "goblin-0.3.4/src/pe/mod.rs",
        "goblin-0.3.4/src/pe/optional_header.rs",
        "goblin-0.3.4/src/pe/options.rs",
        "goblin-0.3.4/src/pe/relocation.rs",
        "goblin-0.3.4/src/pe/section_table.rs",
        "goblin-0.3.4/src/pe/symbol.rs",
        "goblin-0.3.4/src/pe/utils.rs",
        "goblin-0.3.4/src/strtab.rs",
    ],
    archive = ":goblin-0.3.4--archive",
    crate = "goblin",
    crate_root = "goblin-0.3.4/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [
        "alloc",
        "archive",
        "default",
        "elf32",
        "elf64",
        "endian_fd",
        "log",
        "mach32",
        "mach64",
        "pe32",
        "pe64",
        "std",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":log",
        ":plain",
        ":scroll",
    ],
)

third_party_rust_library(
    name = "h2-0.3.0",
    srcs = [
        "h2-0.3.0/src/client.rs",
        "h2-0.3.0/src/codec/error.rs",
        "h2-0.3.0/src/codec/framed_read.rs",
        "h2-0.3.0/src/codec/framed_write.rs",
        "h2-0.3.0/src/codec/mod.rs",
        "h2-0.3.0/src/error.rs",
        "h2-0.3.0/src/frame/data.rs",
        "h2-0.3.0/src/frame/go_away.rs",
        "h2-0.3.0/src/frame/head.rs",
        "h2-0.3.0/src/frame/headers.rs",
        "h2-0.3.0/src/frame/mod.rs",
        "h2-0.3.0/src/frame/ping.rs",
        "h2-0.3.0/src/frame/priority.rs",
        "h2-0.3.0/src/frame/reason.rs",
        "h2-0.3.0/src/frame/reset.rs",
        "h2-0.3.0/src/frame/settings.rs",
        "h2-0.3.0/src/frame/stream_id.rs",
        "h2-0.3.0/src/frame/util.rs",
        "h2-0.3.0/src/frame/window_update.rs",
        "h2-0.3.0/src/hpack/decoder.rs",
        "h2-0.3.0/src/hpack/encoder.rs",
        "h2-0.3.0/src/hpack/header.rs",
        "h2-0.3.0/src/hpack/huffman/mod.rs",
        "h2-0.3.0/src/hpack/huffman/table.rs",
        "h2-0.3.0/src/hpack/mod.rs",
        "h2-0.3.0/src/hpack/table.rs",
        "h2-0.3.0/src/hpack/test/fixture.rs",
        "h2-0.3.0/src/hpack/test/fuzz.rs",
        "h2-0.3.0/src/hpack/test/mod.rs",
        "h2-0.3.0/src/lib.rs",
        "h2-0.3.0/src/proto/connection.rs",
        "h2-0.3.0/src/proto/error.rs",
        "h2-0.3.0/src/proto/go_away.rs",
        "h2-0.3.0/src/proto/mod.rs",
        "h2-0.3.0/src/proto/peer.rs",
        "h2-0.3.0/src/proto/ping_pong.rs",
        "h2-0.3.0/src/proto/settings.rs",
        "h2-0.3.0/src/proto/streams/buffer.rs",
        "h2-0.3.0/src/proto/streams/counts.rs",
        "h2-0.3.0/src/proto/streams/flow_control.rs",
        "h2-0.3.0/src/proto/streams/mod.rs",
        "h2-0.3.0/src/proto/streams/prioritize.rs",
        "h2-0.3.0/src/proto/streams/recv.rs",
        "h2-0.3.0/src/proto/streams/send.rs",
        "h2-0.3.0/src/proto/streams/state.rs",
        "h2-0.3.0/src/proto/streams/store.rs",
        "h2-0.3.0/src/proto/streams/stream.rs",
        "h2-0.3.0/src/proto/streams/streams.rs",
        "h2-0.3.0/src/server.rs",
        "h2-0.3.0/src/share.rs",
    ],
    archive = ":h2-0.3.0--archive",
    crate = "h2",
    crate_root = "h2-0.3.0/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":bytes",
        ":fnv",
        ":futures-core",
        ":futures-sink",
        ":futures-util",
        ":http",
        ":indexmap",
        ":slab-0.4.2",
        ":tokio",
        ":tokio-util",
        ":tracing",
        ":tracing-futures",
    ],
)

third_party_rust_library(
    name = "handlebars",
    srcs = [
        "handlebars-3.5.4/src/block.rs",
        "handlebars-3.5.4/src/context.rs",
        "handlebars-3.5.4/src/decorators/inline.rs",
        "handlebars-3.5.4/src/decorators/mod.rs",
        "handlebars-3.5.4/src/error.rs",
        "handlebars-3.5.4/src/grammar.pest",
        "handlebars-3.5.4/src/grammar.rs",
        "handlebars-3.5.4/src/helpers/block_util.rs",
        "handlebars-3.5.4/src/helpers/helper_boolean.rs",
        "handlebars-3.5.4/src/helpers/helper_each.rs",
        "handlebars-3.5.4/src/helpers/helper_if.rs",
        "handlebars-3.5.4/src/helpers/helper_log.rs",
        "handlebars-3.5.4/src/helpers/helper_lookup.rs",
        "handlebars-3.5.4/src/helpers/helper_raw.rs",
        "handlebars-3.5.4/src/helpers/helper_with.rs",
        "handlebars-3.5.4/src/helpers/mod.rs",
        "handlebars-3.5.4/src/helpers/scripting.rs",
        "handlebars-3.5.4/src/json/mod.rs",
        "handlebars-3.5.4/src/json/path.rs",
        "handlebars-3.5.4/src/json/value.rs",
        "handlebars-3.5.4/src/lib.rs",
        "handlebars-3.5.4/src/macros.rs",
        "handlebars-3.5.4/src/output.rs",
        "handlebars-3.5.4/src/partial.rs",
        "handlebars-3.5.4/src/registry.rs",
        "handlebars-3.5.4/src/render.rs",
        "handlebars-3.5.4/src/support.rs",
        "handlebars-3.5.4/src/template.rs",
        "handlebars-3.5.4/src/util.rs",
    ],
    archive = ":handlebars-3.5.4--archive",
    crate = "handlebars",
    crate_root = "handlebars-3.5.4/src/lib.rs",
    edition = "2018",
    env = {
        "CARGO_MANIFEST_DIR": "third-party/rust/handlebars-3.5.4",
        "CARGO_PKG_NAME": "handlebars",
        "CARGO_PKG_VERSION": "3.5.4",
        "CARGO_PKG_VERSION_MAJOR": "3",
        "CARGO_PKG_VERSION_MINOR": "5",
        "CARGO_PKG_VERSION_PATCH": "4",
    },
    features = ["default"],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        "//third-party/rust:log",
        "//third-party/rust:pest",
        "//third-party/rust:pest_derive",
        "//third-party/rust:quick-error-2.0.0",
        "//third-party/rust:serde",
        "//third-party/rust:serde_json",
    ],
)

third_party_rust_library(
    name = "hashbrown",
    srcs = [
        "hashbrown-0.11.2/src/external_trait_impls/mod.rs",
        "hashbrown-0.11.2/src/external_trait_impls/rayon/helpers.rs",
        "hashbrown-0.11.2/src/external_trait_impls/rayon/map.rs",
        "hashbrown-0.11.2/src/external_trait_impls/rayon/mod.rs",
        "hashbrown-0.11.2/src/external_trait_impls/rayon/raw.rs",
        "hashbrown-0.11.2/src/external_trait_impls/rayon/set.rs",
        "hashbrown-0.11.2/src/external_trait_impls/serde.rs",
        "hashbrown-0.11.2/src/lib.rs",
        "hashbrown-0.11.2/src/macros.rs",
        "hashbrown-0.11.2/src/map.rs",
        "hashbrown-0.11.2/src/raw/alloc.rs",
        "hashbrown-0.11.2/src/raw/bitmask.rs",
        "hashbrown-0.11.2/src/raw/generic.rs",
        "hashbrown-0.11.2/src/raw/mod.rs",
        "hashbrown-0.11.2/src/raw/sse2.rs",
        "hashbrown-0.11.2/src/rustc_entry.rs",
        "hashbrown-0.11.2/src/scopeguard.rs",
        "hashbrown-0.11.2/src/set.rs",
    ],
    archive = ":hashbrown-0.11.2--archive",
    crate = "hashbrown",
    crate_root = "hashbrown-0.11.2/src/lib.rs",
    edition = "2018",
    env = {
        "CARGO_MANIFEST_DIR": "third-party/rust/hashbrown-0.11.2",
        "CARGO_PKG_NAME": "hashbrown",
        "CARGO_PKG_VERSION": "0.11.2",
        "CARGO_PKG_VERSION_MAJOR": "0",
        "CARGO_PKG_VERSION_MINOR": "11",
        "CARGO_PKG_VERSION_PATCH": "2",
    },
    features = [
        "ahash",
        "default",
        "inline-more",
        "raw",
        "serde",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":ahash-0.7.4",
        ":serde",
    ],
)

third_party_rust_library(
    name = "headers-0.3.2",
    srcs = [
        "headers-0.3.2/src/common/accept_ranges.rs",
        "headers-0.3.2/src/common/access_control_allow_credentials.rs",
        "headers-0.3.2/src/common/access_control_allow_headers.rs",
        "headers-0.3.2/src/common/access_control_allow_methods.rs",
        "headers-0.3.2/src/common/access_control_allow_origin.rs",
        "headers-0.3.2/src/common/access_control_expose_headers.rs",
        "headers-0.3.2/src/common/access_control_max_age.rs",
        "headers-0.3.2/src/common/access_control_request_headers.rs",
        "headers-0.3.2/src/common/access_control_request_method.rs",
        "headers-0.3.2/src/common/allow.rs",
        "headers-0.3.2/src/common/authorization.rs",
        "headers-0.3.2/src/common/cache_control.rs",
        "headers-0.3.2/src/common/connection.rs",
        "headers-0.3.2/src/common/content_disposition.rs",
        "headers-0.3.2/src/common/content_encoding.rs",
        "headers-0.3.2/src/common/content_length.rs",
        "headers-0.3.2/src/common/content_location.rs",
        "headers-0.3.2/src/common/content_range.rs",
        "headers-0.3.2/src/common/content_type.rs",
        "headers-0.3.2/src/common/cookie.rs",
        "headers-0.3.2/src/common/date.rs",
        "headers-0.3.2/src/common/etag.rs",
        "headers-0.3.2/src/common/expect.rs",
        "headers-0.3.2/src/common/expires.rs",
        "headers-0.3.2/src/common/host.rs",
        "headers-0.3.2/src/common/if_match.rs",
        "headers-0.3.2/src/common/if_modified_since.rs",
        "headers-0.3.2/src/common/if_none_match.rs",
        "headers-0.3.2/src/common/if_range.rs",
        "headers-0.3.2/src/common/if_unmodified_since.rs",
        "headers-0.3.2/src/common/last_modified.rs",
        "headers-0.3.2/src/common/location.rs",
        "headers-0.3.2/src/common/mod.rs",
        "headers-0.3.2/src/common/origin.rs",
        "headers-0.3.2/src/common/pragma.rs",
        "headers-0.3.2/src/common/proxy_authorization.rs",
        "headers-0.3.2/src/common/range.rs",
        "headers-0.3.2/src/common/referer.rs",
        "headers-0.3.2/src/common/referrer_policy.rs",
        "headers-0.3.2/src/common/retry_after.rs",
        "headers-0.3.2/src/common/sec_websocket_accept.rs",
        "headers-0.3.2/src/common/sec_websocket_key.rs",
        "headers-0.3.2/src/common/sec_websocket_version.rs",
        "headers-0.3.2/src/common/server.rs",
        "headers-0.3.2/src/common/set_cookie.rs",
        "headers-0.3.2/src/common/strict_transport_security.rs",
        "headers-0.3.2/src/common/te.rs",
        "headers-0.3.2/src/common/transfer_encoding.rs",
        "headers-0.3.2/src/common/upgrade.rs",
        "headers-0.3.2/src/common/user_agent.rs",
        "headers-0.3.2/src/common/vary.rs",
        "headers-0.3.2/src/disabled/accept.rs",
        "headers-0.3.2/src/disabled/accept_charset.rs",
        "headers-0.3.2/src/disabled/accept_encoding.rs",
        "headers-0.3.2/src/disabled/accept_language.rs",
        "headers-0.3.2/src/disabled/content_language.rs",
        "headers-0.3.2/src/disabled/from.rs",
        "headers-0.3.2/src/disabled/last_event_id.rs",
        "headers-0.3.2/src/disabled/link.rs",
        "headers-0.3.2/src/disabled/prefer.rs",
        "headers-0.3.2/src/disabled/preference_applied.rs",
        "headers-0.3.2/src/disabled/util/charset.rs",
        "headers-0.3.2/src/disabled/util/encoding.rs",
        "headers-0.3.2/src/disabled/util/extended_value.rs",
        "headers-0.3.2/src/disabled/util/quality_value.rs",
        "headers-0.3.2/src/disabled/warning.rs",
        "headers-0.3.2/src/lib.rs",
        "headers-0.3.2/src/map_ext.rs",
        "headers-0.3.2/src/util/csv.rs",
        "headers-0.3.2/src/util/entity.rs",
        "headers-0.3.2/src/util/flat_csv.rs",
        "headers-0.3.2/src/util/fmt.rs",
        "headers-0.3.2/src/util/http_date.rs",
        "headers-0.3.2/src/util/iter.rs",
        "headers-0.3.2/src/util/mod.rs",
        "headers-0.3.2/src/util/seconds.rs",
        "headers-0.3.2/src/util/value_string.rs",
    ],
    archive = ":headers-0.3.2--archive",
    crate = "headers",
    crate_root = "headers-0.3.2/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":base64-0.12.3",
        ":bitflags",
        ":bytes-05",
        ":headers-core-0.2.0",
        ":http",
        ":mime",
        ":sha-1",
        ":time-01",
    ],
)

third_party_rust_library(
    name = "headers-core-0.2.0",
    srcs = ["headers-core-0.2.0/src/lib.rs"],
    archive = ":headers-core-0.2.0--archive",
    crate = "headers_core",
    crate_root = "headers-core-0.2.0/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [":http"],
)

third_party_rust_library(
    name = "heck",
    srcs = [
        "heck-0.3.1/src/camel.rs",
        "heck-0.3.1/src/kebab.rs",
        "heck-0.3.1/src/lib.rs",
        "heck-0.3.1/src/mixed.rs",
        "heck-0.3.1/src/shouty_snake.rs",
        "heck-0.3.1/src/snake.rs",
        "heck-0.3.1/src/title.rs",
    ],
    archive = ":heck-0.3.1--archive",
    crate = "heck",
    crate_root = "heck-0.3.1/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [":unicode-segmentation"],
)

third_party_rust_library(
    name = "hostname",
    srcs = [
        "hostname-0.3.1/src/lib.rs",
        "hostname-0.3.1/src/nix.rs",
        "hostname-0.3.1/src/windows.rs",
    ],
    archive = ":hostname-0.3.1--archive",
    crate = "hostname",
    crate_root = "hostname-0.3.1/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = ["default"],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":libc",
        ":match_cfg-0.1.0",
    ],
)

third_party_rust_library(
    name = "http",
    srcs = [
        "http-0.2.1/src/byte_str.rs",
        "http-0.2.1/src/convert.rs",
        "http-0.2.1/src/error.rs",
        "http-0.2.1/src/extensions.rs",
        "http-0.2.1/src/header/map.rs",
        "http-0.2.1/src/header/mod.rs",
        "http-0.2.1/src/header/name.rs",
        "http-0.2.1/src/header/value.rs",
        "http-0.2.1/src/lib.rs",
        "http-0.2.1/src/method.rs",
        "http-0.2.1/src/request.rs",
        "http-0.2.1/src/response.rs",
        "http-0.2.1/src/status.rs",
        "http-0.2.1/src/uri/authority.rs",
        "http-0.2.1/src/uri/builder.rs",
        "http-0.2.1/src/uri/mod.rs",
        "http-0.2.1/src/uri/path.rs",
        "http-0.2.1/src/uri/port.rs",
        "http-0.2.1/src/uri/scheme.rs",
        "http-0.2.1/src/uri/tests.rs",
        "http-0.2.1/src/version.rs",
    ],
    archive = ":http-0.2.1--archive",
    crate = "http",
    crate_root = "http-0.2.1/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":bytes-05",
        ":fnv",
        ":itoa-0.4.6",
    ],
)

third_party_rust_library(
    name = "http-body-0.4.0",
    srcs = [
        "http-body-0.4.0/src/lib.rs",
        "http-body-0.4.0/src/next.rs",
        "http-body-0.4.0/src/size_hint.rs",
    ],
    archive = ":http-body-0.4.0--archive",
    crate = "http_body",
    crate_root = "http-body-0.4.0/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":bytes",
        ":http",
    ],
)

third_party_rust_library(
    name = "httparse-1.4.1",
    srcs = [
        "httparse-1.4.1/src/iter.rs",
        "httparse-1.4.1/src/lib.rs",
        "httparse-1.4.1/src/macros.rs",
        "httparse-1.4.1/src/simd/avx2.rs",
        "httparse-1.4.1/src/simd/fallback.rs",
        "httparse-1.4.1/src/simd/mod.rs",
        "httparse-1.4.1/src/simd/sse42.rs",
    ],
    archive = ":httparse-1.4.1--archive",
    crate = "httparse",
    crate_root = "httparse-1.4.1/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [
        "default",
        "std",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = [
        "--cap-lints=allow",
        "@$(location :httparse-1.4.1-build-script-build-args)",
    ],
    deps = [],
)

third_party_rust_binary(
    name = "httparse-1.4.1-build-script-build",
    srcs = [
        "httparse-1.4.1/benches/parse.rs",
        "httparse-1.4.1/build.rs",
        "httparse-1.4.1/src/iter.rs",
        "httparse-1.4.1/src/lib.rs",
        "httparse-1.4.1/src/macros.rs",
        "httparse-1.4.1/src/simd/avx2.rs",
        "httparse-1.4.1/src/simd/fallback.rs",
        "httparse-1.4.1/src/simd/mod.rs",
        "httparse-1.4.1/src/simd/sse42.rs",
        "httparse-1.4.1/tests/uri.rs",
    ],
    archive = ":httparse-1.4.1--archive",
    crate = "build_script_build",
    crate_root = "httparse-1.4.1/build.rs",
    edition = "2015",
    env = {
    },
    features = [
        "default",
        "std",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "httpdate-1.0.0",
    srcs = [
        "httpdate-1.0.0/src/date.rs",
        "httpdate-1.0.0/src/lib.rs",
    ],
    archive = ":httpdate-1.0.0--archive",
    crate = "httpdate",
    crate_root = "httpdate-1.0.0/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "hyper",
    srcs = [
        "hyper-0.14.7/src/body/aggregate.rs",
        "hyper-0.14.7/src/body/body.rs",
        "hyper-0.14.7/src/body/length.rs",
        "hyper-0.14.7/src/body/mod.rs",
        "hyper-0.14.7/src/body/to_bytes.rs",
        "hyper-0.14.7/src/cfg.rs",
        "hyper-0.14.7/src/client/client.rs",
        "hyper-0.14.7/src/client/conn.rs",
        "hyper-0.14.7/src/client/connect/dns.rs",
        "hyper-0.14.7/src/client/connect/http.rs",
        "hyper-0.14.7/src/client/connect/mod.rs",
        "hyper-0.14.7/src/client/dispatch.rs",
        "hyper-0.14.7/src/client/mod.rs",
        "hyper-0.14.7/src/client/pool.rs",
        "hyper-0.14.7/src/client/service.rs",
        "hyper-0.14.7/src/client/tests.rs",
        "hyper-0.14.7/src/common/buf.rs",
        "hyper-0.14.7/src/common/date.rs",
        "hyper-0.14.7/src/common/drain.rs",
        "hyper-0.14.7/src/common/exec.rs",
        "hyper-0.14.7/src/common/io/mod.rs",
        "hyper-0.14.7/src/common/io/rewind.rs",
        "hyper-0.14.7/src/common/lazy.rs",
        "hyper-0.14.7/src/common/mod.rs",
        "hyper-0.14.7/src/common/never.rs",
        "hyper-0.14.7/src/common/sync_wrapper.rs",
        "hyper-0.14.7/src/common/task.rs",
        "hyper-0.14.7/src/common/watch.rs",
        "hyper-0.14.7/src/error.rs",
        "hyper-0.14.7/src/ext.rs",
        "hyper-0.14.7/src/ffi/body.rs",
        "hyper-0.14.7/src/ffi/client.rs",
        "hyper-0.14.7/src/ffi/error.rs",
        "hyper-0.14.7/src/ffi/http_types.rs",
        "hyper-0.14.7/src/ffi/io.rs",
        "hyper-0.14.7/src/ffi/macros.rs",
        "hyper-0.14.7/src/ffi/mod.rs",
        "hyper-0.14.7/src/ffi/task.rs",
        "hyper-0.14.7/src/headers.rs",
        "hyper-0.14.7/src/lib.rs",
        "hyper-0.14.7/src/mock.rs",
        "hyper-0.14.7/src/proto/h1/conn.rs",
        "hyper-0.14.7/src/proto/h1/decode.rs",
        "hyper-0.14.7/src/proto/h1/dispatch.rs",
        "hyper-0.14.7/src/proto/h1/encode.rs",
        "hyper-0.14.7/src/proto/h1/io.rs",
        "hyper-0.14.7/src/proto/h1/mod.rs",
        "hyper-0.14.7/src/proto/h1/role.rs",
        "hyper-0.14.7/src/proto/h2/client.rs",
        "hyper-0.14.7/src/proto/h2/mod.rs",
        "hyper-0.14.7/src/proto/h2/ping.rs",
        "hyper-0.14.7/src/proto/h2/server.rs",
        "hyper-0.14.7/src/proto/mod.rs",
        "hyper-0.14.7/src/rt.rs",
        "hyper-0.14.7/src/server/accept.rs",
        "hyper-0.14.7/src/server/conn.rs",
        "hyper-0.14.7/src/server/mod.rs",
        "hyper-0.14.7/src/server/server.rs",
        "hyper-0.14.7/src/server/shutdown.rs",
        "hyper-0.14.7/src/server/tcp.rs",
        "hyper-0.14.7/src/service/http.rs",
        "hyper-0.14.7/src/service/make.rs",
        "hyper-0.14.7/src/service/mod.rs",
        "hyper-0.14.7/src/service/oneshot.rs",
        "hyper-0.14.7/src/service/util.rs",
        "hyper-0.14.7/src/upgrade.rs",
    ],
    archive = ":hyper-0.14.7--archive",
    crate = "hyper",
    crate_root = "hyper-0.14.7/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [
        "client",
        "default",
        "full",
        "h2",
        "http1",
        "http2",
        "runtime",
        "server",
        "socket2",
        "stream",
        "tcp",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":bytes",
        ":futures-channel",
        ":futures-core",
        ":futures-util",
        ":h2-0.3.0",
        ":http",
        ":http-body-0.4.0",
        ":httparse-1.4.1",
        ":httpdate-1.0.0",
        ":itoa-0.4.6",
        ":pin-project-1.0.2",
        ":socket2-0.4.0",
        ":tokio",
        ":tower-service",
        ":tracing",
        ":want-0.3.0",
    ],
)

third_party_rust_library(
    name = "hyper-rustls",
    srcs = [
        "hyper-rustls-0.22.1/src/connector.rs",
        "hyper-rustls-0.22.1/src/lib.rs",
        "hyper-rustls-0.22.1/src/stream.rs",
    ],
    archive = ":hyper-rustls-0.22.1--archive",
    crate = "hyper_rustls",
    crate_root = "hyper-rustls-0.22.1/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [
        "ct-logs",
        "default",
        "native-tokio",
        "rustls-native-certs",
        "tokio-runtime",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":ct-logs-0.8.0",
        ":futures-util",
        ":hyper",
        ":log",
        ":rustls",
        ":rustls-native-certs",
        ":tokio",
        ":tokio-rustls",
        ":webpki-0.21.3",
    ],
)

third_party_rust_library(
    name = "ident_case-1.0.1",
    srcs = ["ident_case-1.0.1/src/lib.rs"],
    archive = ":ident_case-1.0.1--archive",
    crate = "ident_case",
    crate_root = "ident_case-1.0.1/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "idna-0.2.0",
    srcs = [
        "idna-0.2.0/src/lib.rs",
        "idna-0.2.0/src/punycode.rs",
        "idna-0.2.0/src/uts46.rs",
        "idna-0.2.0/src/uts46_mapping_table.rs",
    ],
    archive = ":idna-0.2.0--archive",
    crate = "idna",
    crate_root = "idna-0.2.0/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":matches-0.1.8",
        ":unicode-bidi-0.3.4",
        ":unicode-normalization-0.1.13",
    ],
)

third_party_rust_library(
    name = "indexmap",
    srcs = [
        "indexmap-1.7.0/src/equivalent.rs",
        "indexmap-1.7.0/src/lib.rs",
        "indexmap-1.7.0/src/macros.rs",
        "indexmap-1.7.0/src/map.rs",
        "indexmap-1.7.0/src/map/core.rs",
        "indexmap-1.7.0/src/map/core/raw.rs",
        "indexmap-1.7.0/src/mutable_keys.rs",
        "indexmap-1.7.0/src/rayon/map.rs",
        "indexmap-1.7.0/src/rayon/mod.rs",
        "indexmap-1.7.0/src/rayon/set.rs",
        "indexmap-1.7.0/src/serde.rs",
        "indexmap-1.7.0/src/serde_seq.rs",
        "indexmap-1.7.0/src/set.rs",
        "indexmap-1.7.0/src/util.rs",
    ],
    archive = ":indexmap-1.7.0--archive",
    crate = "indexmap",
    crate_root = "indexmap-1.7.0/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [
        "rayon",
        "serde",
        "serde-1",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = [
        "--cap-lints=allow",
        "--cfg=has_std",
    ],
    deps = [
        ":hashbrown",
        ":rayon",
        ":serde",
    ],
)

third_party_rust_library(
    name = "input_buffer-0.4.0",
    srcs = ["input_buffer-0.4.0/src/lib.rs"],
    archive = ":input_buffer-0.4.0--archive",
    crate = "input_buffer",
    crate_root = "input_buffer-0.4.0/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [":bytes"],
)

third_party_rust_library(
    name = "instant-0.1.7",
    srcs = [
        "instant-0.1.7/src/lib.rs",
        "instant-0.1.7/src/native.rs",
        "instant-0.1.7/src/wasm.rs",
    ],
    archive = ":instant-0.1.7--archive",
    crate = "instant",
    crate_root = "instant-0.1.7/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [":cfg-if"],
)

third_party_rust_library(
    name = "ipnet-2.3.0",
    srcs = [
        "ipnet-2.3.0/src/ipext.rs",
        "ipnet-2.3.0/src/ipnet.rs",
        "ipnet-2.3.0/src/ipnet_serde.rs",
        "ipnet-2.3.0/src/lib.rs",
        "ipnet-2.3.0/src/parser.rs",
    ],
    archive = ":ipnet-2.3.0--archive",
    crate = "ipnet",
    crate_root = "ipnet-2.3.0/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "itertools",
    srcs = [
        "itertools-0.10.1/src/adaptors/coalesce.rs",
        "itertools-0.10.1/src/adaptors/map.rs",
        "itertools-0.10.1/src/adaptors/mod.rs",
        "itertools-0.10.1/src/adaptors/multi_product.rs",
        "itertools-0.10.1/src/combinations.rs",
        "itertools-0.10.1/src/combinations_with_replacement.rs",
        "itertools-0.10.1/src/concat_impl.rs",
        "itertools-0.10.1/src/cons_tuples_impl.rs",
        "itertools-0.10.1/src/diff.rs",
        "itertools-0.10.1/src/duplicates_impl.rs",
        "itertools-0.10.1/src/either_or_both.rs",
        "itertools-0.10.1/src/exactly_one_err.rs",
        "itertools-0.10.1/src/flatten_ok.rs",
        "itertools-0.10.1/src/format.rs",
        "itertools-0.10.1/src/free.rs",
        "itertools-0.10.1/src/group_map.rs",
        "itertools-0.10.1/src/groupbylazy.rs",
        "itertools-0.10.1/src/grouping_map.rs",
        "itertools-0.10.1/src/impl_macros.rs",
        "itertools-0.10.1/src/intersperse.rs",
        "itertools-0.10.1/src/k_smallest.rs",
        "itertools-0.10.1/src/kmerge_impl.rs",
        "itertools-0.10.1/src/lazy_buffer.rs",
        "itertools-0.10.1/src/lib.rs",
        "itertools-0.10.1/src/merge_join.rs",
        "itertools-0.10.1/src/minmax.rs",
        "itertools-0.10.1/src/multipeek_impl.rs",
        "itertools-0.10.1/src/pad_tail.rs",
        "itertools-0.10.1/src/peek_nth.rs",
        "itertools-0.10.1/src/peeking_take_while.rs",
        "itertools-0.10.1/src/permutations.rs",
        "itertools-0.10.1/src/powerset.rs",
        "itertools-0.10.1/src/process_results_impl.rs",
        "itertools-0.10.1/src/put_back_n_impl.rs",
        "itertools-0.10.1/src/rciter_impl.rs",
        "itertools-0.10.1/src/repeatn.rs",
        "itertools-0.10.1/src/size_hint.rs",
        "itertools-0.10.1/src/sources.rs",
        "itertools-0.10.1/src/tee.rs",
        "itertools-0.10.1/src/tuple_impl.rs",
        "itertools-0.10.1/src/unique_impl.rs",
        "itertools-0.10.1/src/with_position.rs",
        "itertools-0.10.1/src/zip_eq_impl.rs",
        "itertools-0.10.1/src/zip_longest.rs",
        "itertools-0.10.1/src/ziptuple.rs",
    ],
    archive = ":itertools-0.10.1--archive",
    crate = "itertools",
    crate_root = "itertools-0.10.1/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [
        "default",
        "use_alloc",
        "use_std",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [":either"],
)

third_party_rust_library(
    name = "itertools-0.9.0",
    srcs = [
        "itertools-0.9.0/src/adaptors/mod.rs",
        "itertools-0.9.0/src/adaptors/multi_product.rs",
        "itertools-0.9.0/src/combinations.rs",
        "itertools-0.9.0/src/combinations_with_replacement.rs",
        "itertools-0.9.0/src/concat_impl.rs",
        "itertools-0.9.0/src/cons_tuples_impl.rs",
        "itertools-0.9.0/src/diff.rs",
        "itertools-0.9.0/src/either_or_both.rs",
        "itertools-0.9.0/src/exactly_one_err.rs",
        "itertools-0.9.0/src/format.rs",
        "itertools-0.9.0/src/free.rs",
        "itertools-0.9.0/src/group_map.rs",
        "itertools-0.9.0/src/groupbylazy.rs",
        "itertools-0.9.0/src/impl_macros.rs",
        "itertools-0.9.0/src/intersperse.rs",
        "itertools-0.9.0/src/kmerge_impl.rs",
        "itertools-0.9.0/src/lazy_buffer.rs",
        "itertools-0.9.0/src/lib.rs",
        "itertools-0.9.0/src/merge_join.rs",
        "itertools-0.9.0/src/minmax.rs",
        "itertools-0.9.0/src/multipeek_impl.rs",
        "itertools-0.9.0/src/pad_tail.rs",
        "itertools-0.9.0/src/peeking_take_while.rs",
        "itertools-0.9.0/src/permutations.rs",
        "itertools-0.9.0/src/process_results_impl.rs",
        "itertools-0.9.0/src/put_back_n_impl.rs",
        "itertools-0.9.0/src/rciter_impl.rs",
        "itertools-0.9.0/src/repeatn.rs",
        "itertools-0.9.0/src/size_hint.rs",
        "itertools-0.9.0/src/sources.rs",
        "itertools-0.9.0/src/tee.rs",
        "itertools-0.9.0/src/tuple_impl.rs",
        "itertools-0.9.0/src/unique_impl.rs",
        "itertools-0.9.0/src/with_position.rs",
        "itertools-0.9.0/src/zip_eq_impl.rs",
        "itertools-0.9.0/src/zip_longest.rs",
        "itertools-0.9.0/src/ziptuple.rs",
    ],
    archive = ":itertools-0.9.0--archive",
    crate = "itertools",
    crate_root = "itertools-0.9.0/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [
        "default",
        "use_std",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [":either"],
)

third_party_rust_library(
    name = "itoa-0.4.6",
    srcs = [
        "itoa-0.4.6/src/lib.rs",
        "itoa-0.4.6/src/udiv128.rs",
    ],
    archive = ":itoa-0.4.6--archive",
    crate = "itoa",
    crate_root = "itoa-0.4.6/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [
        "default",
        "std",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "lalrpop",
    srcs = [
        "lalrpop-0.19.1/src/api/mod.rs",
        "lalrpop-0.19.1/src/build/action.rs",
        "lalrpop-0.19.1/src/build/fake_term.rs",
        "lalrpop-0.19.1/src/build/mod.rs",
        "lalrpop-0.19.1/src/collections/map.rs",
        "lalrpop-0.19.1/src/collections/mod.rs",
        "lalrpop-0.19.1/src/collections/multimap.rs",
        "lalrpop-0.19.1/src/collections/set.rs",
        "lalrpop-0.19.1/src/file_text.rs",
        "lalrpop-0.19.1/src/generate.rs",
        "lalrpop-0.19.1/src/grammar/consts.rs",
        "lalrpop-0.19.1/src/grammar/free_variables/mod.rs",
        "lalrpop-0.19.1/src/grammar/free_variables/test.rs",
        "lalrpop-0.19.1/src/grammar/mod.rs",
        "lalrpop-0.19.1/src/grammar/parse_tree.rs",
        "lalrpop-0.19.1/src/grammar/pattern.rs",
        "lalrpop-0.19.1/src/grammar/repr.rs",
        "lalrpop-0.19.1/src/grammar/token/mod.rs",
        "lalrpop-0.19.1/src/grammar/token/test.rs",
        "lalrpop-0.19.1/src/kernel_set.rs",
        "lalrpop-0.19.1/src/lexer/dfa/interpret.rs",
        "lalrpop-0.19.1/src/lexer/dfa/mod.rs",
        "lalrpop-0.19.1/src/lexer/dfa/overlap.rs",
        "lalrpop-0.19.1/src/lexer/dfa/test.rs",
        "lalrpop-0.19.1/src/lexer/intern_token/mod.rs",
        "lalrpop-0.19.1/src/lexer/mod.rs",
        "lalrpop-0.19.1/src/lexer/nfa/interpret.rs",
        "lalrpop-0.19.1/src/lexer/nfa/mod.rs",
        "lalrpop-0.19.1/src/lexer/nfa/test.rs",
        "lalrpop-0.19.1/src/lexer/re/mod.rs",
        "lalrpop-0.19.1/src/lexer/re/test.rs",
        "lalrpop-0.19.1/src/lib.rs",
        "lalrpop-0.19.1/src/log.rs",
        "lalrpop-0.19.1/src/lr1/build/mod.rs",
        "lalrpop-0.19.1/src/lr1/build/test.rs",
        "lalrpop-0.19.1/src/lr1/build_lalr/mod.rs",
        "lalrpop-0.19.1/src/lr1/build_lalr/test.rs",
        "lalrpop-0.19.1/src/lr1/codegen/ascent.rs",
        "lalrpop-0.19.1/src/lr1/codegen/base.rs",
        "lalrpop-0.19.1/src/lr1/codegen/mod.rs",
        "lalrpop-0.19.1/src/lr1/codegen/parse_table.rs",
        "lalrpop-0.19.1/src/lr1/codegen/test_all.rs",
        "lalrpop-0.19.1/src/lr1/core/mod.rs",
        "lalrpop-0.19.1/src/lr1/error/mod.rs",
        "lalrpop-0.19.1/src/lr1/error/test.rs",
        "lalrpop-0.19.1/src/lr1/example/mod.rs",
        "lalrpop-0.19.1/src/lr1/example/test.rs",
        "lalrpop-0.19.1/src/lr1/first/mod.rs",
        "lalrpop-0.19.1/src/lr1/first/test.rs",
        "lalrpop-0.19.1/src/lr1/interpret.rs",
        "lalrpop-0.19.1/src/lr1/item.rs",
        "lalrpop-0.19.1/src/lr1/lane_table/construct/merge.rs",
        "lalrpop-0.19.1/src/lr1/lane_table/construct/mod.rs",
        "lalrpop-0.19.1/src/lr1/lane_table/construct/state_set.rs",
        "lalrpop-0.19.1/src/lr1/lane_table/lane/mod.rs",
        "lalrpop-0.19.1/src/lr1/lane_table/mod.rs",
        "lalrpop-0.19.1/src/lr1/lane_table/table/context_set/mod.rs",
        "lalrpop-0.19.1/src/lr1/lane_table/table/context_set/test.rs",
        "lalrpop-0.19.1/src/lr1/lane_table/table/mod.rs",
        "lalrpop-0.19.1/src/lr1/lane_table/test.rs",
        "lalrpop-0.19.1/src/lr1/lookahead.rs",
        "lalrpop-0.19.1/src/lr1/mod.rs",
        "lalrpop-0.19.1/src/lr1/report/mod.rs",
        "lalrpop-0.19.1/src/lr1/state_graph.rs",
        "lalrpop-0.19.1/src/lr1/tls.rs",
        "lalrpop-0.19.1/src/lr1/trace/mod.rs",
        "lalrpop-0.19.1/src/lr1/trace/reduce/mod.rs",
        "lalrpop-0.19.1/src/lr1/trace/reduce/test.rs",
        "lalrpop-0.19.1/src/lr1/trace/shift/mod.rs",
        "lalrpop-0.19.1/src/lr1/trace/shift/test.rs",
        "lalrpop-0.19.1/src/lr1/trace/trace_graph/mod.rs",
        "lalrpop-0.19.1/src/lr1/trace/trace_graph/test.rs",
        "lalrpop-0.19.1/src/main.rs",
        "lalrpop-0.19.1/src/message/builder.rs",
        "lalrpop-0.19.1/src/message/horiz.rs",
        "lalrpop-0.19.1/src/message/indent.rs",
        "lalrpop-0.19.1/src/message/message.rs",
        "lalrpop-0.19.1/src/message/mod.rs",
        "lalrpop-0.19.1/src/message/styled.rs",
        "lalrpop-0.19.1/src/message/test.rs",
        "lalrpop-0.19.1/src/message/text.rs",
        "lalrpop-0.19.1/src/message/vert.rs",
        "lalrpop-0.19.1/src/message/wrap.rs",
        "lalrpop-0.19.1/src/normalize/inline/graph/mod.rs",
        "lalrpop-0.19.1/src/normalize/inline/graph/test.rs",
        "lalrpop-0.19.1/src/normalize/inline/mod.rs",
        "lalrpop-0.19.1/src/normalize/inline/test.rs",
        "lalrpop-0.19.1/src/normalize/lower/mod.rs",
        "lalrpop-0.19.1/src/normalize/macro_expand/mod.rs",
        "lalrpop-0.19.1/src/normalize/macro_expand/test.rs",
        "lalrpop-0.19.1/src/normalize/mod.rs",
        "lalrpop-0.19.1/src/normalize/norm_util.rs",
        "lalrpop-0.19.1/src/normalize/prevalidate/mod.rs",
        "lalrpop-0.19.1/src/normalize/prevalidate/test.rs",
        "lalrpop-0.19.1/src/normalize/resolve/mod.rs",
        "lalrpop-0.19.1/src/normalize/resolve/test.rs",
        "lalrpop-0.19.1/src/normalize/token_check/mod.rs",
        "lalrpop-0.19.1/src/normalize/token_check/test.rs",
        "lalrpop-0.19.1/src/normalize/tyinfer/mod.rs",
        "lalrpop-0.19.1/src/normalize/tyinfer/test.rs",
        "lalrpop-0.19.1/src/parser/lrgrammar.rs",
        "lalrpop-0.19.1/src/parser/mod.rs",
        "lalrpop-0.19.1/src/parser/test.rs",
        "lalrpop-0.19.1/src/rust/mod.rs",
        "lalrpop-0.19.1/src/session.rs",
        "lalrpop-0.19.1/src/test_util.rs",
        "lalrpop-0.19.1/src/tls/mod.rs",
        "lalrpop-0.19.1/src/tok/mod.rs",
        "lalrpop-0.19.1/src/tok/test.rs",
        "lalrpop-0.19.1/src/util.rs",
    ],
    archive = ":lalrpop-0.19.1--archive",
    crate = "lalrpop",
    crate_root = "lalrpop-0.19.1/src/lib.rs",
    edition = "2015",
    env = {
        "CARGO_MANIFEST_DIR": "third-party/rust/lalrpop-0.19.1",
        "CARGO_PKG_NAME": "lalrpop",
        "CARGO_PKG_VERSION": "0.19.1",
        "CARGO_PKG_VERSION_MAJOR": "0",
        "CARGO_PKG_VERSION_MINOR": "19",
        "CARGO_PKG_VERSION_PATCH": "1",
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":ascii-canvas-2.0.0",
        ":atty",
        ":bit-set",
        ":diff",
        ":docopt-1.1.0",
        ":ena-0.14.0",
        ":itertools-0.9.0",
        ":lalrpop-util",
        ":petgraph-0.5.1",
        ":regex",
        ":regex-syntax-0.6.21",
        ":serde",
        ":serde_derive",
        ":sha2",
        ":string_cache",
        ":term-0.5.2",
        ":unicode-xid-0.2.1",
    ],
)

third_party_rust_binary(
    name = "lalrpop-lalrpop",
    srcs = [
        "lalrpop-0.19.1/src/api/mod.rs",
        "lalrpop-0.19.1/src/build/action.rs",
        "lalrpop-0.19.1/src/build/fake_term.rs",
        "lalrpop-0.19.1/src/build/mod.rs",
        "lalrpop-0.19.1/src/collections/map.rs",
        "lalrpop-0.19.1/src/collections/mod.rs",
        "lalrpop-0.19.1/src/collections/multimap.rs",
        "lalrpop-0.19.1/src/collections/set.rs",
        "lalrpop-0.19.1/src/file_text.rs",
        "lalrpop-0.19.1/src/generate.rs",
        "lalrpop-0.19.1/src/grammar/consts.rs",
        "lalrpop-0.19.1/src/grammar/free_variables/mod.rs",
        "lalrpop-0.19.1/src/grammar/free_variables/test.rs",
        "lalrpop-0.19.1/src/grammar/mod.rs",
        "lalrpop-0.19.1/src/grammar/parse_tree.rs",
        "lalrpop-0.19.1/src/grammar/pattern.rs",
        "lalrpop-0.19.1/src/grammar/repr.rs",
        "lalrpop-0.19.1/src/grammar/token/mod.rs",
        "lalrpop-0.19.1/src/grammar/token/test.rs",
        "lalrpop-0.19.1/src/kernel_set.rs",
        "lalrpop-0.19.1/src/lexer/dfa/interpret.rs",
        "lalrpop-0.19.1/src/lexer/dfa/mod.rs",
        "lalrpop-0.19.1/src/lexer/dfa/overlap.rs",
        "lalrpop-0.19.1/src/lexer/dfa/test.rs",
        "lalrpop-0.19.1/src/lexer/intern_token/mod.rs",
        "lalrpop-0.19.1/src/lexer/mod.rs",
        "lalrpop-0.19.1/src/lexer/nfa/interpret.rs",
        "lalrpop-0.19.1/src/lexer/nfa/mod.rs",
        "lalrpop-0.19.1/src/lexer/nfa/test.rs",
        "lalrpop-0.19.1/src/lexer/re/mod.rs",
        "lalrpop-0.19.1/src/lexer/re/test.rs",
        "lalrpop-0.19.1/src/lib.rs",
        "lalrpop-0.19.1/src/log.rs",
        "lalrpop-0.19.1/src/lr1/build/mod.rs",
        "lalrpop-0.19.1/src/lr1/build/test.rs",
        "lalrpop-0.19.1/src/lr1/build_lalr/mod.rs",
        "lalrpop-0.19.1/src/lr1/build_lalr/test.rs",
        "lalrpop-0.19.1/src/lr1/codegen/ascent.rs",
        "lalrpop-0.19.1/src/lr1/codegen/base.rs",
        "lalrpop-0.19.1/src/lr1/codegen/mod.rs",
        "lalrpop-0.19.1/src/lr1/codegen/parse_table.rs",
        "lalrpop-0.19.1/src/lr1/codegen/test_all.rs",
        "lalrpop-0.19.1/src/lr1/core/mod.rs",
        "lalrpop-0.19.1/src/lr1/error/mod.rs",
        "lalrpop-0.19.1/src/lr1/error/test.rs",
        "lalrpop-0.19.1/src/lr1/example/mod.rs",
        "lalrpop-0.19.1/src/lr1/example/test.rs",
        "lalrpop-0.19.1/src/lr1/first/mod.rs",
        "lalrpop-0.19.1/src/lr1/first/test.rs",
        "lalrpop-0.19.1/src/lr1/interpret.rs",
        "lalrpop-0.19.1/src/lr1/item.rs",
        "lalrpop-0.19.1/src/lr1/lane_table/construct/merge.rs",
        "lalrpop-0.19.1/src/lr1/lane_table/construct/mod.rs",
        "lalrpop-0.19.1/src/lr1/lane_table/construct/state_set.rs",
        "lalrpop-0.19.1/src/lr1/lane_table/lane/mod.rs",
        "lalrpop-0.19.1/src/lr1/lane_table/mod.rs",
        "lalrpop-0.19.1/src/lr1/lane_table/table/context_set/mod.rs",
        "lalrpop-0.19.1/src/lr1/lane_table/table/context_set/test.rs",
        "lalrpop-0.19.1/src/lr1/lane_table/table/mod.rs",
        "lalrpop-0.19.1/src/lr1/lane_table/test.rs",
        "lalrpop-0.19.1/src/lr1/lookahead.rs",
        "lalrpop-0.19.1/src/lr1/mod.rs",
        "lalrpop-0.19.1/src/lr1/report/mod.rs",
        "lalrpop-0.19.1/src/lr1/state_graph.rs",
        "lalrpop-0.19.1/src/lr1/tls.rs",
        "lalrpop-0.19.1/src/lr1/trace/mod.rs",
        "lalrpop-0.19.1/src/lr1/trace/reduce/mod.rs",
        "lalrpop-0.19.1/src/lr1/trace/reduce/test.rs",
        "lalrpop-0.19.1/src/lr1/trace/shift/mod.rs",
        "lalrpop-0.19.1/src/lr1/trace/shift/test.rs",
        "lalrpop-0.19.1/src/lr1/trace/trace_graph/mod.rs",
        "lalrpop-0.19.1/src/lr1/trace/trace_graph/test.rs",
        "lalrpop-0.19.1/src/main.rs",
        "lalrpop-0.19.1/src/message/builder.rs",
        "lalrpop-0.19.1/src/message/horiz.rs",
        "lalrpop-0.19.1/src/message/indent.rs",
        "lalrpop-0.19.1/src/message/message.rs",
        "lalrpop-0.19.1/src/message/mod.rs",
        "lalrpop-0.19.1/src/message/styled.rs",
        "lalrpop-0.19.1/src/message/test.rs",
        "lalrpop-0.19.1/src/message/text.rs",
        "lalrpop-0.19.1/src/message/vert.rs",
        "lalrpop-0.19.1/src/message/wrap.rs",
        "lalrpop-0.19.1/src/normalize/inline/graph/mod.rs",
        "lalrpop-0.19.1/src/normalize/inline/graph/test.rs",
        "lalrpop-0.19.1/src/normalize/inline/mod.rs",
        "lalrpop-0.19.1/src/normalize/inline/test.rs",
        "lalrpop-0.19.1/src/normalize/lower/mod.rs",
        "lalrpop-0.19.1/src/normalize/macro_expand/mod.rs",
        "lalrpop-0.19.1/src/normalize/macro_expand/test.rs",
        "lalrpop-0.19.1/src/normalize/mod.rs",
        "lalrpop-0.19.1/src/normalize/norm_util.rs",
        "lalrpop-0.19.1/src/normalize/prevalidate/mod.rs",
        "lalrpop-0.19.1/src/normalize/prevalidate/test.rs",
        "lalrpop-0.19.1/src/normalize/resolve/mod.rs",
        "lalrpop-0.19.1/src/normalize/resolve/test.rs",
        "lalrpop-0.19.1/src/normalize/token_check/mod.rs",
        "lalrpop-0.19.1/src/normalize/token_check/test.rs",
        "lalrpop-0.19.1/src/normalize/tyinfer/mod.rs",
        "lalrpop-0.19.1/src/normalize/tyinfer/test.rs",
        "lalrpop-0.19.1/src/parser/lrgrammar.rs",
        "lalrpop-0.19.1/src/parser/mod.rs",
        "lalrpop-0.19.1/src/parser/test.rs",
        "lalrpop-0.19.1/src/rust/mod.rs",
        "lalrpop-0.19.1/src/session.rs",
        "lalrpop-0.19.1/src/test_util.rs",
        "lalrpop-0.19.1/src/tls/mod.rs",
        "lalrpop-0.19.1/src/tok/mod.rs",
        "lalrpop-0.19.1/src/tok/test.rs",
        "lalrpop-0.19.1/src/util.rs",
    ],
    archive = ":lalrpop-0.19.1--archive",
    crate = "lalrpop",
    crate_root = "lalrpop-0.19.1/src/main.rs",
    edition = "2015",
    env = {
        "CARGO_MANIFEST_DIR": "third-party/rust/lalrpop-0.19.1",
        "CARGO_PKG_NAME": "lalrpop",
        "CARGO_PKG_VERSION": "0.19.1",
        "CARGO_PKG_VERSION_MAJOR": "0",
        "CARGO_PKG_VERSION_MINOR": "19",
        "CARGO_PKG_VERSION_PATCH": "1",
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":ascii-canvas-2.0.0",
        ":atty",
        ":bit-set",
        ":diff",
        ":docopt-1.1.0",
        ":ena-0.14.0",
        ":itertools-0.9.0",
        ":lalrpop",
        ":lalrpop-util",
        ":petgraph-0.5.1",
        ":regex",
        ":regex-syntax-0.6.21",
        ":serde",
        ":serde_derive",
        ":sha2",
        ":string_cache",
        ":term-0.5.2",
        ":unicode-xid-0.2.1",
    ],
)

third_party_rust_library(
    name = "lalrpop-util",
    srcs = [
        "lalrpop-util-0.19.1/src/lexer.rs",
        "lalrpop-util-0.19.1/src/lib.rs",
        "lalrpop-util-0.19.1/src/state_machine.rs",
    ],
    archive = ":lalrpop-util-0.19.1--archive",
    crate = "lalrpop_util",
    crate_root = "lalrpop-util-0.19.1/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "lazy_static",
    srcs = [
        "lazy_static-1.4.0/src/core_lazy.rs",
        "lazy_static-1.4.0/src/inline_lazy.rs",
        "lazy_static-1.4.0/src/lib.rs",
    ],
    archive = ":lazy_static-1.4.0--archive",
    crate = "lazy_static",
    crate_root = "lazy_static-1.4.0/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [
        "spin",
        "spin_no_std",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [":spin-0.5.2"],
)

third_party_rust_library(
    name = "libc",
    srcs = [
        "libc-0.2.98/src/fixed_width_ints.rs",
        "libc-0.2.98/src/fuchsia/aarch64.rs",
        "libc-0.2.98/src/fuchsia/align.rs",
        "libc-0.2.98/src/fuchsia/mod.rs",
        "libc-0.2.98/src/fuchsia/no_align.rs",
        "libc-0.2.98/src/fuchsia/x86_64.rs",
        "libc-0.2.98/src/hermit/aarch64.rs",
        "libc-0.2.98/src/hermit/mod.rs",
        "libc-0.2.98/src/hermit/x86_64.rs",
        "libc-0.2.98/src/lib.rs",
        "libc-0.2.98/src/macros.rs",
        "libc-0.2.98/src/psp.rs",
        "libc-0.2.98/src/sgx.rs",
        "libc-0.2.98/src/switch.rs",
        "libc-0.2.98/src/unix/align.rs",
        "libc-0.2.98/src/unix/bsd/apple/b32/align.rs",
        "libc-0.2.98/src/unix/bsd/apple/b32/mod.rs",
        "libc-0.2.98/src/unix/bsd/apple/b64/aarch64/align.rs",
        "libc-0.2.98/src/unix/bsd/apple/b64/aarch64/mod.rs",
        "libc-0.2.98/src/unix/bsd/apple/b64/align.rs",
        "libc-0.2.98/src/unix/bsd/apple/b64/mod.rs",
        "libc-0.2.98/src/unix/bsd/apple/b64/x86_64/align.rs",
        "libc-0.2.98/src/unix/bsd/apple/b64/x86_64/mod.rs",
        "libc-0.2.98/src/unix/bsd/apple/mod.rs",
        "libc-0.2.98/src/unix/bsd/freebsdlike/dragonfly/errno.rs",
        "libc-0.2.98/src/unix/bsd/freebsdlike/dragonfly/mod.rs",
        "libc-0.2.98/src/unix/bsd/freebsdlike/freebsd/aarch64.rs",
        "libc-0.2.98/src/unix/bsd/freebsdlike/freebsd/arm.rs",
        "libc-0.2.98/src/unix/bsd/freebsdlike/freebsd/freebsd11/b64.rs",
        "libc-0.2.98/src/unix/bsd/freebsdlike/freebsd/freebsd11/mod.rs",
        "libc-0.2.98/src/unix/bsd/freebsdlike/freebsd/freebsd12/b64.rs",
        "libc-0.2.98/src/unix/bsd/freebsdlike/freebsd/freebsd12/mod.rs",
        "libc-0.2.98/src/unix/bsd/freebsdlike/freebsd/freebsd13/b64.rs",
        "libc-0.2.98/src/unix/bsd/freebsdlike/freebsd/freebsd13/mod.rs",
        "libc-0.2.98/src/unix/bsd/freebsdlike/freebsd/mod.rs",
        "libc-0.2.98/src/unix/bsd/freebsdlike/freebsd/powerpc.rs",
        "libc-0.2.98/src/unix/bsd/freebsdlike/freebsd/powerpc64.rs",
        "libc-0.2.98/src/unix/bsd/freebsdlike/freebsd/x86.rs",
        "libc-0.2.98/src/unix/bsd/freebsdlike/freebsd/x86_64/align.rs",
        "libc-0.2.98/src/unix/bsd/freebsdlike/freebsd/x86_64/mod.rs",
        "libc-0.2.98/src/unix/bsd/freebsdlike/mod.rs",
        "libc-0.2.98/src/unix/bsd/mod.rs",
        "libc-0.2.98/src/unix/bsd/netbsdlike/mod.rs",
        "libc-0.2.98/src/unix/bsd/netbsdlike/netbsd/aarch64.rs",
        "libc-0.2.98/src/unix/bsd/netbsdlike/netbsd/arm.rs",
        "libc-0.2.98/src/unix/bsd/netbsdlike/netbsd/mod.rs",
        "libc-0.2.98/src/unix/bsd/netbsdlike/netbsd/powerpc.rs",
        "libc-0.2.98/src/unix/bsd/netbsdlike/netbsd/sparc64.rs",
        "libc-0.2.98/src/unix/bsd/netbsdlike/netbsd/x86.rs",
        "libc-0.2.98/src/unix/bsd/netbsdlike/netbsd/x86_64.rs",
        "libc-0.2.98/src/unix/bsd/netbsdlike/openbsd/aarch64.rs",
        "libc-0.2.98/src/unix/bsd/netbsdlike/openbsd/mod.rs",
        "libc-0.2.98/src/unix/bsd/netbsdlike/openbsd/sparc64.rs",
        "libc-0.2.98/src/unix/bsd/netbsdlike/openbsd/x86.rs",
        "libc-0.2.98/src/unix/bsd/netbsdlike/openbsd/x86_64.rs",
        "libc-0.2.98/src/unix/haiku/b32.rs",
        "libc-0.2.98/src/unix/haiku/b64.rs",
        "libc-0.2.98/src/unix/haiku/mod.rs",
        "libc-0.2.98/src/unix/haiku/native.rs",
        "libc-0.2.98/src/unix/hermit/aarch64.rs",
        "libc-0.2.98/src/unix/hermit/mod.rs",
        "libc-0.2.98/src/unix/hermit/x86_64.rs",
        "libc-0.2.98/src/unix/linux_like/android/b32/arm.rs",
        "libc-0.2.98/src/unix/linux_like/android/b32/mod.rs",
        "libc-0.2.98/src/unix/linux_like/android/b32/x86/align.rs",
        "libc-0.2.98/src/unix/linux_like/android/b32/x86/mod.rs",
        "libc-0.2.98/src/unix/linux_like/android/b64/aarch64/align.rs",
        "libc-0.2.98/src/unix/linux_like/android/b64/aarch64/mod.rs",
        "libc-0.2.98/src/unix/linux_like/android/b64/mod.rs",
        "libc-0.2.98/src/unix/linux_like/android/b64/x86_64/align.rs",
        "libc-0.2.98/src/unix/linux_like/android/b64/x86_64/mod.rs",
        "libc-0.2.98/src/unix/linux_like/android/mod.rs",
        "libc-0.2.98/src/unix/linux_like/emscripten/align.rs",
        "libc-0.2.98/src/unix/linux_like/emscripten/mod.rs",
        "libc-0.2.98/src/unix/linux_like/emscripten/no_align.rs",
        "libc-0.2.98/src/unix/linux_like/linux/align.rs",
        "libc-0.2.98/src/unix/linux_like/linux/arch/generic/mod.rs",
        "libc-0.2.98/src/unix/linux_like/linux/arch/mips/mod.rs",
        "libc-0.2.98/src/unix/linux_like/linux/arch/mod.rs",
        "libc-0.2.98/src/unix/linux_like/linux/arch/powerpc/mod.rs",
        "libc-0.2.98/src/unix/linux_like/linux/arch/sparc/mod.rs",
        "libc-0.2.98/src/unix/linux_like/linux/gnu/align.rs",
        "libc-0.2.98/src/unix/linux_like/linux/gnu/b32/arm/align.rs",
        "libc-0.2.98/src/unix/linux_like/linux/gnu/b32/arm/mod.rs",
        "libc-0.2.98/src/unix/linux_like/linux/gnu/b32/mips/align.rs",
        "libc-0.2.98/src/unix/linux_like/linux/gnu/b32/mips/mod.rs",
        "libc-0.2.98/src/unix/linux_like/linux/gnu/b32/mod.rs",
        "libc-0.2.98/src/unix/linux_like/linux/gnu/b32/powerpc.rs",
        "libc-0.2.98/src/unix/linux_like/linux/gnu/b32/riscv32/mod.rs",
        "libc-0.2.98/src/unix/linux_like/linux/gnu/b32/sparc/align.rs",
        "libc-0.2.98/src/unix/linux_like/linux/gnu/b32/sparc/mod.rs",
        "libc-0.2.98/src/unix/linux_like/linux/gnu/b32/x86/align.rs",
        "libc-0.2.98/src/unix/linux_like/linux/gnu/b32/x86/mod.rs",
        "libc-0.2.98/src/unix/linux_like/linux/gnu/b64/aarch64/align.rs",
        "libc-0.2.98/src/unix/linux_like/linux/gnu/b64/aarch64/ilp32.rs",
        "libc-0.2.98/src/unix/linux_like/linux/gnu/b64/aarch64/lp64.rs",
        "libc-0.2.98/src/unix/linux_like/linux/gnu/b64/aarch64/mod.rs",
        "libc-0.2.98/src/unix/linux_like/linux/gnu/b64/mips64/align.rs",
        "libc-0.2.98/src/unix/linux_like/linux/gnu/b64/mips64/mod.rs",
        "libc-0.2.98/src/unix/linux_like/linux/gnu/b64/mod.rs",
        "libc-0.2.98/src/unix/linux_like/linux/gnu/b64/powerpc64/align.rs",
        "libc-0.2.98/src/unix/linux_like/linux/gnu/b64/powerpc64/mod.rs",
        "libc-0.2.98/src/unix/linux_like/linux/gnu/b64/riscv64/mod.rs",
        "libc-0.2.98/src/unix/linux_like/linux/gnu/b64/s390x.rs",
        "libc-0.2.98/src/unix/linux_like/linux/gnu/b64/sparc64/align.rs",
        "libc-0.2.98/src/unix/linux_like/linux/gnu/b64/sparc64/mod.rs",
        "libc-0.2.98/src/unix/linux_like/linux/gnu/b64/x86_64/align.rs",
        "libc-0.2.98/src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs",
        "libc-0.2.98/src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs",
        "libc-0.2.98/src/unix/linux_like/linux/gnu/b64/x86_64/x32.rs",
        "libc-0.2.98/src/unix/linux_like/linux/gnu/mod.rs",
        "libc-0.2.98/src/unix/linux_like/linux/gnu/no_align.rs",
        "libc-0.2.98/src/unix/linux_like/linux/mod.rs",
        "libc-0.2.98/src/unix/linux_like/linux/musl/b32/arm/align.rs",
        "libc-0.2.98/src/unix/linux_like/linux/musl/b32/arm/mod.rs",
        "libc-0.2.98/src/unix/linux_like/linux/musl/b32/hexagon.rs",
        "libc-0.2.98/src/unix/linux_like/linux/musl/b32/mips/align.rs",
        "libc-0.2.98/src/unix/linux_like/linux/musl/b32/mips/mod.rs",
        "libc-0.2.98/src/unix/linux_like/linux/musl/b32/mod.rs",
        "libc-0.2.98/src/unix/linux_like/linux/musl/b32/powerpc.rs",
        "libc-0.2.98/src/unix/linux_like/linux/musl/b32/x86/align.rs",
        "libc-0.2.98/src/unix/linux_like/linux/musl/b32/x86/mod.rs",
        "libc-0.2.98/src/unix/linux_like/linux/musl/b64/aarch64/align.rs",
        "libc-0.2.98/src/unix/linux_like/linux/musl/b64/aarch64/mod.rs",
        "libc-0.2.98/src/unix/linux_like/linux/musl/b64/mips64.rs",
        "libc-0.2.98/src/unix/linux_like/linux/musl/b64/mod.rs",
        "libc-0.2.98/src/unix/linux_like/linux/musl/b64/powerpc64.rs",
        "libc-0.2.98/src/unix/linux_like/linux/musl/b64/s390x.rs",
        "libc-0.2.98/src/unix/linux_like/linux/musl/b64/x86_64/align.rs",
        "libc-0.2.98/src/unix/linux_like/linux/musl/b64/x86_64/mod.rs",
        "libc-0.2.98/src/unix/linux_like/linux/musl/mod.rs",
        "libc-0.2.98/src/unix/linux_like/linux/no_align.rs",
        "libc-0.2.98/src/unix/linux_like/linux/uclibc/align.rs",
        "libc-0.2.98/src/unix/linux_like/linux/uclibc/arm/align.rs",
        "libc-0.2.98/src/unix/linux_like/linux/uclibc/arm/mod.rs",
        "libc-0.2.98/src/unix/linux_like/linux/uclibc/arm/no_align.rs",
        "libc-0.2.98/src/unix/linux_like/linux/uclibc/mips/mips32/align.rs",
        "libc-0.2.98/src/unix/linux_like/linux/uclibc/mips/mips32/mod.rs",
        "libc-0.2.98/src/unix/linux_like/linux/uclibc/mips/mips32/no_align.rs",
        "libc-0.2.98/src/unix/linux_like/linux/uclibc/mips/mips64/align.rs",
        "libc-0.2.98/src/unix/linux_like/linux/uclibc/mips/mips64/mod.rs",
        "libc-0.2.98/src/unix/linux_like/linux/uclibc/mips/mips64/no_align.rs",
        "libc-0.2.98/src/unix/linux_like/linux/uclibc/mips/mod.rs",
        "libc-0.2.98/src/unix/linux_like/linux/uclibc/mod.rs",
        "libc-0.2.98/src/unix/linux_like/linux/uclibc/no_align.rs",
        "libc-0.2.98/src/unix/linux_like/linux/uclibc/x86_64/l4re.rs",
        "libc-0.2.98/src/unix/linux_like/linux/uclibc/x86_64/mod.rs",
        "libc-0.2.98/src/unix/linux_like/linux/uclibc/x86_64/other.rs",
        "libc-0.2.98/src/unix/linux_like/mod.rs",
        "libc-0.2.98/src/unix/mod.rs",
        "libc-0.2.98/src/unix/newlib/aarch64/mod.rs",
        "libc-0.2.98/src/unix/newlib/align.rs",
        "libc-0.2.98/src/unix/newlib/arm/mod.rs",
        "libc-0.2.98/src/unix/newlib/mod.rs",
        "libc-0.2.98/src/unix/newlib/no_align.rs",
        "libc-0.2.98/src/unix/newlib/powerpc/mod.rs",
        "libc-0.2.98/src/unix/newlib/xtensa/mod.rs",
        "libc-0.2.98/src/unix/no_align.rs",
        "libc-0.2.98/src/unix/redox/mod.rs",
        "libc-0.2.98/src/unix/solarish/compat.rs",
        "libc-0.2.98/src/unix/solarish/illumos.rs",
        "libc-0.2.98/src/unix/solarish/mod.rs",
        "libc-0.2.98/src/unix/solarish/solaris.rs",
        "libc-0.2.98/src/vxworks/aarch64.rs",
        "libc-0.2.98/src/vxworks/arm.rs",
        "libc-0.2.98/src/vxworks/mod.rs",
        "libc-0.2.98/src/vxworks/powerpc.rs",
        "libc-0.2.98/src/vxworks/powerpc64.rs",
        "libc-0.2.98/src/vxworks/x86.rs",
        "libc-0.2.98/src/vxworks/x86_64.rs",
        "libc-0.2.98/src/wasi.rs",
        "libc-0.2.98/src/windows/gnu/align.rs",
        "libc-0.2.98/src/windows/gnu/mod.rs",
        "libc-0.2.98/src/windows/mod.rs",
        "libc-0.2.98/src/windows/msvc.rs",
    ],
    archive = ":libc-0.2.98--archive",
    crate = "libc",
    crate_root = "libc-0.2.98/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [
        "align",
        "default",
        "extra_traits",
        "std",
        "use_std",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = [
        "--cap-lints=allow",
        "@$(location :libc-0.2.98-build-script-build-args)",
    ],
    deps = [],
)

third_party_rust_binary(
    name = "libc-0.2.98-build-script-build",
    srcs = [
        "libc-0.2.98/build.rs",
        "libc-0.2.98/src/fixed_width_ints.rs",
        "libc-0.2.98/src/fuchsia/aarch64.rs",
        "libc-0.2.98/src/fuchsia/align.rs",
        "libc-0.2.98/src/fuchsia/mod.rs",
        "libc-0.2.98/src/fuchsia/no_align.rs",
        "libc-0.2.98/src/fuchsia/x86_64.rs",
        "libc-0.2.98/src/hermit/aarch64.rs",
        "libc-0.2.98/src/hermit/mod.rs",
        "libc-0.2.98/src/hermit/x86_64.rs",
        "libc-0.2.98/src/lib.rs",
        "libc-0.2.98/src/macros.rs",
        "libc-0.2.98/src/psp.rs",
        "libc-0.2.98/src/sgx.rs",
        "libc-0.2.98/src/switch.rs",
        "libc-0.2.98/src/unix/align.rs",
        "libc-0.2.98/src/unix/bsd/apple/b32/align.rs",
        "libc-0.2.98/src/unix/bsd/apple/b32/mod.rs",
        "libc-0.2.98/src/unix/bsd/apple/b64/aarch64/align.rs",
        "libc-0.2.98/src/unix/bsd/apple/b64/aarch64/mod.rs",
        "libc-0.2.98/src/unix/bsd/apple/b64/align.rs",
        "libc-0.2.98/src/unix/bsd/apple/b64/mod.rs",
        "libc-0.2.98/src/unix/bsd/apple/b64/x86_64/align.rs",
        "libc-0.2.98/src/unix/bsd/apple/b64/x86_64/mod.rs",
        "libc-0.2.98/src/unix/bsd/apple/mod.rs",
        "libc-0.2.98/src/unix/bsd/freebsdlike/dragonfly/errno.rs",
        "libc-0.2.98/src/unix/bsd/freebsdlike/dragonfly/mod.rs",
        "libc-0.2.98/src/unix/bsd/freebsdlike/freebsd/aarch64.rs",
        "libc-0.2.98/src/unix/bsd/freebsdlike/freebsd/arm.rs",
        "libc-0.2.98/src/unix/bsd/freebsdlike/freebsd/freebsd11/b64.rs",
        "libc-0.2.98/src/unix/bsd/freebsdlike/freebsd/freebsd11/mod.rs",
        "libc-0.2.98/src/unix/bsd/freebsdlike/freebsd/freebsd12/b64.rs",
        "libc-0.2.98/src/unix/bsd/freebsdlike/freebsd/freebsd12/mod.rs",
        "libc-0.2.98/src/unix/bsd/freebsdlike/freebsd/freebsd13/b64.rs",
        "libc-0.2.98/src/unix/bsd/freebsdlike/freebsd/freebsd13/mod.rs",
        "libc-0.2.98/src/unix/bsd/freebsdlike/freebsd/mod.rs",
        "libc-0.2.98/src/unix/bsd/freebsdlike/freebsd/powerpc.rs",
        "libc-0.2.98/src/unix/bsd/freebsdlike/freebsd/powerpc64.rs",
        "libc-0.2.98/src/unix/bsd/freebsdlike/freebsd/x86.rs",
        "libc-0.2.98/src/unix/bsd/freebsdlike/freebsd/x86_64/align.rs",
        "libc-0.2.98/src/unix/bsd/freebsdlike/freebsd/x86_64/mod.rs",
        "libc-0.2.98/src/unix/bsd/freebsdlike/mod.rs",
        "libc-0.2.98/src/unix/bsd/mod.rs",
        "libc-0.2.98/src/unix/bsd/netbsdlike/mod.rs",
        "libc-0.2.98/src/unix/bsd/netbsdlike/netbsd/aarch64.rs",
        "libc-0.2.98/src/unix/bsd/netbsdlike/netbsd/arm.rs",
        "libc-0.2.98/src/unix/bsd/netbsdlike/netbsd/mod.rs",
        "libc-0.2.98/src/unix/bsd/netbsdlike/netbsd/powerpc.rs",
        "libc-0.2.98/src/unix/bsd/netbsdlike/netbsd/sparc64.rs",
        "libc-0.2.98/src/unix/bsd/netbsdlike/netbsd/x86.rs",
        "libc-0.2.98/src/unix/bsd/netbsdlike/netbsd/x86_64.rs",
        "libc-0.2.98/src/unix/bsd/netbsdlike/openbsd/aarch64.rs",
        "libc-0.2.98/src/unix/bsd/netbsdlike/openbsd/mod.rs",
        "libc-0.2.98/src/unix/bsd/netbsdlike/openbsd/sparc64.rs",
        "libc-0.2.98/src/unix/bsd/netbsdlike/openbsd/x86.rs",
        "libc-0.2.98/src/unix/bsd/netbsdlike/openbsd/x86_64.rs",
        "libc-0.2.98/src/unix/haiku/b32.rs",
        "libc-0.2.98/src/unix/haiku/b64.rs",
        "libc-0.2.98/src/unix/haiku/mod.rs",
        "libc-0.2.98/src/unix/haiku/native.rs",
        "libc-0.2.98/src/unix/hermit/aarch64.rs",
        "libc-0.2.98/src/unix/hermit/mod.rs",
        "libc-0.2.98/src/unix/hermit/x86_64.rs",
        "libc-0.2.98/src/unix/linux_like/android/b32/arm.rs",
        "libc-0.2.98/src/unix/linux_like/android/b32/mod.rs",
        "libc-0.2.98/src/unix/linux_like/android/b32/x86/align.rs",
        "libc-0.2.98/src/unix/linux_like/android/b32/x86/mod.rs",
        "libc-0.2.98/src/unix/linux_like/android/b64/aarch64/align.rs",
        "libc-0.2.98/src/unix/linux_like/android/b64/aarch64/mod.rs",
        "libc-0.2.98/src/unix/linux_like/android/b64/mod.rs",
        "libc-0.2.98/src/unix/linux_like/android/b64/x86_64/align.rs",
        "libc-0.2.98/src/unix/linux_like/android/b64/x86_64/mod.rs",
        "libc-0.2.98/src/unix/linux_like/android/mod.rs",
        "libc-0.2.98/src/unix/linux_like/emscripten/align.rs",
        "libc-0.2.98/src/unix/linux_like/emscripten/mod.rs",
        "libc-0.2.98/src/unix/linux_like/emscripten/no_align.rs",
        "libc-0.2.98/src/unix/linux_like/linux/align.rs",
        "libc-0.2.98/src/unix/linux_like/linux/arch/generic/mod.rs",
        "libc-0.2.98/src/unix/linux_like/linux/arch/mips/mod.rs",
        "libc-0.2.98/src/unix/linux_like/linux/arch/mod.rs",
        "libc-0.2.98/src/unix/linux_like/linux/arch/powerpc/mod.rs",
        "libc-0.2.98/src/unix/linux_like/linux/arch/sparc/mod.rs",
        "libc-0.2.98/src/unix/linux_like/linux/gnu/align.rs",
        "libc-0.2.98/src/unix/linux_like/linux/gnu/b32/arm/align.rs",
        "libc-0.2.98/src/unix/linux_like/linux/gnu/b32/arm/mod.rs",
        "libc-0.2.98/src/unix/linux_like/linux/gnu/b32/mips/align.rs",
        "libc-0.2.98/src/unix/linux_like/linux/gnu/b32/mips/mod.rs",
        "libc-0.2.98/src/unix/linux_like/linux/gnu/b32/mod.rs",
        "libc-0.2.98/src/unix/linux_like/linux/gnu/b32/powerpc.rs",
        "libc-0.2.98/src/unix/linux_like/linux/gnu/b32/riscv32/mod.rs",
        "libc-0.2.98/src/unix/linux_like/linux/gnu/b32/sparc/align.rs",
        "libc-0.2.98/src/unix/linux_like/linux/gnu/b32/sparc/mod.rs",
        "libc-0.2.98/src/unix/linux_like/linux/gnu/b32/x86/align.rs",
        "libc-0.2.98/src/unix/linux_like/linux/gnu/b32/x86/mod.rs",
        "libc-0.2.98/src/unix/linux_like/linux/gnu/b64/aarch64/align.rs",
        "libc-0.2.98/src/unix/linux_like/linux/gnu/b64/aarch64/ilp32.rs",
        "libc-0.2.98/src/unix/linux_like/linux/gnu/b64/aarch64/lp64.rs",
        "libc-0.2.98/src/unix/linux_like/linux/gnu/b64/aarch64/mod.rs",
        "libc-0.2.98/src/unix/linux_like/linux/gnu/b64/mips64/align.rs",
        "libc-0.2.98/src/unix/linux_like/linux/gnu/b64/mips64/mod.rs",
        "libc-0.2.98/src/unix/linux_like/linux/gnu/b64/mod.rs",
        "libc-0.2.98/src/unix/linux_like/linux/gnu/b64/powerpc64/align.rs",
        "libc-0.2.98/src/unix/linux_like/linux/gnu/b64/powerpc64/mod.rs",
        "libc-0.2.98/src/unix/linux_like/linux/gnu/b64/riscv64/mod.rs",
        "libc-0.2.98/src/unix/linux_like/linux/gnu/b64/s390x.rs",
        "libc-0.2.98/src/unix/linux_like/linux/gnu/b64/sparc64/align.rs",
        "libc-0.2.98/src/unix/linux_like/linux/gnu/b64/sparc64/mod.rs",
        "libc-0.2.98/src/unix/linux_like/linux/gnu/b64/x86_64/align.rs",
        "libc-0.2.98/src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs",
        "libc-0.2.98/src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs",
        "libc-0.2.98/src/unix/linux_like/linux/gnu/b64/x86_64/x32.rs",
        "libc-0.2.98/src/unix/linux_like/linux/gnu/mod.rs",
        "libc-0.2.98/src/unix/linux_like/linux/gnu/no_align.rs",
        "libc-0.2.98/src/unix/linux_like/linux/mod.rs",
        "libc-0.2.98/src/unix/linux_like/linux/musl/b32/arm/align.rs",
        "libc-0.2.98/src/unix/linux_like/linux/musl/b32/arm/mod.rs",
        "libc-0.2.98/src/unix/linux_like/linux/musl/b32/hexagon.rs",
        "libc-0.2.98/src/unix/linux_like/linux/musl/b32/mips/align.rs",
        "libc-0.2.98/src/unix/linux_like/linux/musl/b32/mips/mod.rs",
        "libc-0.2.98/src/unix/linux_like/linux/musl/b32/mod.rs",
        "libc-0.2.98/src/unix/linux_like/linux/musl/b32/powerpc.rs",
        "libc-0.2.98/src/unix/linux_like/linux/musl/b32/x86/align.rs",
        "libc-0.2.98/src/unix/linux_like/linux/musl/b32/x86/mod.rs",
        "libc-0.2.98/src/unix/linux_like/linux/musl/b64/aarch64/align.rs",
        "libc-0.2.98/src/unix/linux_like/linux/musl/b64/aarch64/mod.rs",
        "libc-0.2.98/src/unix/linux_like/linux/musl/b64/mips64.rs",
        "libc-0.2.98/src/unix/linux_like/linux/musl/b64/mod.rs",
        "libc-0.2.98/src/unix/linux_like/linux/musl/b64/powerpc64.rs",
        "libc-0.2.98/src/unix/linux_like/linux/musl/b64/s390x.rs",
        "libc-0.2.98/src/unix/linux_like/linux/musl/b64/x86_64/align.rs",
        "libc-0.2.98/src/unix/linux_like/linux/musl/b64/x86_64/mod.rs",
        "libc-0.2.98/src/unix/linux_like/linux/musl/mod.rs",
        "libc-0.2.98/src/unix/linux_like/linux/no_align.rs",
        "libc-0.2.98/src/unix/linux_like/linux/uclibc/align.rs",
        "libc-0.2.98/src/unix/linux_like/linux/uclibc/arm/align.rs",
        "libc-0.2.98/src/unix/linux_like/linux/uclibc/arm/mod.rs",
        "libc-0.2.98/src/unix/linux_like/linux/uclibc/arm/no_align.rs",
        "libc-0.2.98/src/unix/linux_like/linux/uclibc/mips/mips32/align.rs",
        "libc-0.2.98/src/unix/linux_like/linux/uclibc/mips/mips32/mod.rs",
        "libc-0.2.98/src/unix/linux_like/linux/uclibc/mips/mips32/no_align.rs",
        "libc-0.2.98/src/unix/linux_like/linux/uclibc/mips/mips64/align.rs",
        "libc-0.2.98/src/unix/linux_like/linux/uclibc/mips/mips64/mod.rs",
        "libc-0.2.98/src/unix/linux_like/linux/uclibc/mips/mips64/no_align.rs",
        "libc-0.2.98/src/unix/linux_like/linux/uclibc/mips/mod.rs",
        "libc-0.2.98/src/unix/linux_like/linux/uclibc/mod.rs",
        "libc-0.2.98/src/unix/linux_like/linux/uclibc/no_align.rs",
        "libc-0.2.98/src/unix/linux_like/linux/uclibc/x86_64/l4re.rs",
        "libc-0.2.98/src/unix/linux_like/linux/uclibc/x86_64/mod.rs",
        "libc-0.2.98/src/unix/linux_like/linux/uclibc/x86_64/other.rs",
        "libc-0.2.98/src/unix/linux_like/mod.rs",
        "libc-0.2.98/src/unix/mod.rs",
        "libc-0.2.98/src/unix/newlib/aarch64/mod.rs",
        "libc-0.2.98/src/unix/newlib/align.rs",
        "libc-0.2.98/src/unix/newlib/arm/mod.rs",
        "libc-0.2.98/src/unix/newlib/mod.rs",
        "libc-0.2.98/src/unix/newlib/no_align.rs",
        "libc-0.2.98/src/unix/newlib/powerpc/mod.rs",
        "libc-0.2.98/src/unix/newlib/xtensa/mod.rs",
        "libc-0.2.98/src/unix/no_align.rs",
        "libc-0.2.98/src/unix/redox/mod.rs",
        "libc-0.2.98/src/unix/solarish/compat.rs",
        "libc-0.2.98/src/unix/solarish/illumos.rs",
        "libc-0.2.98/src/unix/solarish/mod.rs",
        "libc-0.2.98/src/unix/solarish/solaris.rs",
        "libc-0.2.98/src/vxworks/aarch64.rs",
        "libc-0.2.98/src/vxworks/arm.rs",
        "libc-0.2.98/src/vxworks/mod.rs",
        "libc-0.2.98/src/vxworks/powerpc.rs",
        "libc-0.2.98/src/vxworks/powerpc64.rs",
        "libc-0.2.98/src/vxworks/x86.rs",
        "libc-0.2.98/src/vxworks/x86_64.rs",
        "libc-0.2.98/src/wasi.rs",
        "libc-0.2.98/src/windows/gnu/align.rs",
        "libc-0.2.98/src/windows/gnu/mod.rs",
        "libc-0.2.98/src/windows/mod.rs",
        "libc-0.2.98/src/windows/msvc.rs",
        "libc-0.2.98/tests/const_fn.rs",
    ],
    archive = ":libc-0.2.98--archive",
    crate = "build_script_build",
    crate_root = "libc-0.2.98/build.rs",
    edition = "2015",
    env = {
    },
    features = [
        "align",
        "default",
        "extra_traits",
        "std",
        "use_std",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "libm",
    srcs = [
        "libm-0.2.1/src/lib.rs",
        "libm-0.2.1/src/math/acos.rs",
        "libm-0.2.1/src/math/acosf.rs",
        "libm-0.2.1/src/math/acosh.rs",
        "libm-0.2.1/src/math/acoshf.rs",
        "libm-0.2.1/src/math/asin.rs",
        "libm-0.2.1/src/math/asinf.rs",
        "libm-0.2.1/src/math/asinh.rs",
        "libm-0.2.1/src/math/asinhf.rs",
        "libm-0.2.1/src/math/atan.rs",
        "libm-0.2.1/src/math/atan2.rs",
        "libm-0.2.1/src/math/atan2f.rs",
        "libm-0.2.1/src/math/atanf.rs",
        "libm-0.2.1/src/math/atanh.rs",
        "libm-0.2.1/src/math/atanhf.rs",
        "libm-0.2.1/src/math/cbrt.rs",
        "libm-0.2.1/src/math/cbrtf.rs",
        "libm-0.2.1/src/math/ceil.rs",
        "libm-0.2.1/src/math/ceilf.rs",
        "libm-0.2.1/src/math/copysign.rs",
        "libm-0.2.1/src/math/copysignf.rs",
        "libm-0.2.1/src/math/cos.rs",
        "libm-0.2.1/src/math/cosf.rs",
        "libm-0.2.1/src/math/cosh.rs",
        "libm-0.2.1/src/math/coshf.rs",
        "libm-0.2.1/src/math/erf.rs",
        "libm-0.2.1/src/math/erff.rs",
        "libm-0.2.1/src/math/exp.rs",
        "libm-0.2.1/src/math/exp10.rs",
        "libm-0.2.1/src/math/exp10f.rs",
        "libm-0.2.1/src/math/exp2.rs",
        "libm-0.2.1/src/math/exp2f.rs",
        "libm-0.2.1/src/math/expf.rs",
        "libm-0.2.1/src/math/expm1.rs",
        "libm-0.2.1/src/math/expm1f.rs",
        "libm-0.2.1/src/math/expo2.rs",
        "libm-0.2.1/src/math/fabs.rs",
        "libm-0.2.1/src/math/fabsf.rs",
        "libm-0.2.1/src/math/fdim.rs",
        "libm-0.2.1/src/math/fdimf.rs",
        "libm-0.2.1/src/math/fenv.rs",
        "libm-0.2.1/src/math/floor.rs",
        "libm-0.2.1/src/math/floorf.rs",
        "libm-0.2.1/src/math/fma.rs",
        "libm-0.2.1/src/math/fmaf.rs",
        "libm-0.2.1/src/math/fmax.rs",
        "libm-0.2.1/src/math/fmaxf.rs",
        "libm-0.2.1/src/math/fmin.rs",
        "libm-0.2.1/src/math/fminf.rs",
        "libm-0.2.1/src/math/fmod.rs",
        "libm-0.2.1/src/math/fmodf.rs",
        "libm-0.2.1/src/math/frexp.rs",
        "libm-0.2.1/src/math/frexpf.rs",
        "libm-0.2.1/src/math/hypot.rs",
        "libm-0.2.1/src/math/hypotf.rs",
        "libm-0.2.1/src/math/ilogb.rs",
        "libm-0.2.1/src/math/ilogbf.rs",
        "libm-0.2.1/src/math/j0.rs",
        "libm-0.2.1/src/math/j0f.rs",
        "libm-0.2.1/src/math/j1.rs",
        "libm-0.2.1/src/math/j1f.rs",
        "libm-0.2.1/src/math/jn.rs",
        "libm-0.2.1/src/math/jnf.rs",
        "libm-0.2.1/src/math/k_cos.rs",
        "libm-0.2.1/src/math/k_cosf.rs",
        "libm-0.2.1/src/math/k_expo2.rs",
        "libm-0.2.1/src/math/k_expo2f.rs",
        "libm-0.2.1/src/math/k_sin.rs",
        "libm-0.2.1/src/math/k_sinf.rs",
        "libm-0.2.1/src/math/k_tan.rs",
        "libm-0.2.1/src/math/k_tanf.rs",
        "libm-0.2.1/src/math/ldexp.rs",
        "libm-0.2.1/src/math/ldexpf.rs",
        "libm-0.2.1/src/math/lgamma.rs",
        "libm-0.2.1/src/math/lgamma_r.rs",
        "libm-0.2.1/src/math/lgammaf.rs",
        "libm-0.2.1/src/math/lgammaf_r.rs",
        "libm-0.2.1/src/math/log.rs",
        "libm-0.2.1/src/math/log10.rs",
        "libm-0.2.1/src/math/log10f.rs",
        "libm-0.2.1/src/math/log1p.rs",
        "libm-0.2.1/src/math/log1pf.rs",
        "libm-0.2.1/src/math/log2.rs",
        "libm-0.2.1/src/math/log2f.rs",
        "libm-0.2.1/src/math/logf.rs",
        "libm-0.2.1/src/math/mod.rs",
        "libm-0.2.1/src/math/modf.rs",
        "libm-0.2.1/src/math/modff.rs",
        "libm-0.2.1/src/math/nextafter.rs",
        "libm-0.2.1/src/math/nextafterf.rs",
        "libm-0.2.1/src/math/pow.rs",
        "libm-0.2.1/src/math/powf.rs",
        "libm-0.2.1/src/math/rem_pio2.rs",
        "libm-0.2.1/src/math/rem_pio2_large.rs",
        "libm-0.2.1/src/math/rem_pio2f.rs",
        "libm-0.2.1/src/math/remainder.rs",
        "libm-0.2.1/src/math/remainderf.rs",
        "libm-0.2.1/src/math/remquo.rs",
        "libm-0.2.1/src/math/remquof.rs",
        "libm-0.2.1/src/math/round.rs",
        "libm-0.2.1/src/math/roundf.rs",
        "libm-0.2.1/src/math/scalbn.rs",
        "libm-0.2.1/src/math/scalbnf.rs",
        "libm-0.2.1/src/math/sin.rs",
        "libm-0.2.1/src/math/sincos.rs",
        "libm-0.2.1/src/math/sincosf.rs",
        "libm-0.2.1/src/math/sinf.rs",
        "libm-0.2.1/src/math/sinh.rs",
        "libm-0.2.1/src/math/sinhf.rs",
        "libm-0.2.1/src/math/sqrt.rs",
        "libm-0.2.1/src/math/sqrtf.rs",
        "libm-0.2.1/src/math/tan.rs",
        "libm-0.2.1/src/math/tanf.rs",
        "libm-0.2.1/src/math/tanh.rs",
        "libm-0.2.1/src/math/tanhf.rs",
        "libm-0.2.1/src/math/tgamma.rs",
        "libm-0.2.1/src/math/tgammaf.rs",
        "libm-0.2.1/src/math/trunc.rs",
        "libm-0.2.1/src/math/truncf.rs",
    ],
    archive = ":libm-0.2.1--archive",
    crate = "libm",
    crate_root = "libm-0.2.1/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = ["default"],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "linked-hash-map",
    srcs = [
        "linked-hash-map-0.5.3/src/heapsize.rs",
        "linked-hash-map-0.5.3/src/lib.rs",
        "linked-hash-map-0.5.3/src/serde.rs",
    ],
    archive = ":linked-hash-map-0.5.3--archive",
    crate = "linked_hash_map",
    crate_root = "linked-hash-map-0.5.3/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [
        "serde",
        "serde_impl",
        "serde_test",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":serde",
        ":serde_test",
    ],
)

third_party_rust_library(
    name = "lock_api-0.4.1",
    srcs = [
        "lock_api-0.4.1/src/lib.rs",
        "lock_api-0.4.1/src/mutex.rs",
        "lock_api-0.4.1/src/remutex.rs",
        "lock_api-0.4.1/src/rwlock.rs",
    ],
    archive = ":lock_api-0.4.1--archive",
    crate = "lock_api",
    crate_root = "lock_api-0.4.1/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [":scopeguard"],
)

third_party_rust_library(
    name = "log",
    srcs = [
        "log-0.4.11/src/kv/error.rs",
        "log-0.4.11/src/kv/key.rs",
        "log-0.4.11/src/kv/mod.rs",
        "log-0.4.11/src/kv/source.rs",
        "log-0.4.11/src/kv/value/fill.rs",
        "log-0.4.11/src/kv/value/impls.rs",
        "log-0.4.11/src/kv/value/internal/cast.rs",
        "log-0.4.11/src/kv/value/internal/fmt.rs",
        "log-0.4.11/src/kv/value/internal/mod.rs",
        "log-0.4.11/src/kv/value/internal/sval.rs",
        "log-0.4.11/src/kv/value/mod.rs",
        "log-0.4.11/src/kv/value/test.rs",
        "log-0.4.11/src/lib.rs",
        "log-0.4.11/src/macros.rs",
        "log-0.4.11/src/serde.rs",
    ],
    archive = ":log-0.4.11--archive",
    crate = "log",
    crate_root = "log-0.4.11/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [
        "kv_unstable",
        "serde",
        "std",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = [
        "--cap-lints=allow",
        "@$(location :log-0.4.11-build-script-build-args)",
    ],
    deps = [
        ":cfg-if",
        ":serde",
    ],
)

third_party_rust_binary(
    name = "log-0.4.11-build-script-build",
    srcs = [
        "log-0.4.11/build.rs",
        "log-0.4.11/src/kv/error.rs",
        "log-0.4.11/src/kv/key.rs",
        "log-0.4.11/src/kv/mod.rs",
        "log-0.4.11/src/kv/source.rs",
        "log-0.4.11/src/kv/value/fill.rs",
        "log-0.4.11/src/kv/value/impls.rs",
        "log-0.4.11/src/kv/value/internal/cast.rs",
        "log-0.4.11/src/kv/value/internal/fmt.rs",
        "log-0.4.11/src/kv/value/internal/mod.rs",
        "log-0.4.11/src/kv/value/internal/sval.rs",
        "log-0.4.11/src/kv/value/mod.rs",
        "log-0.4.11/src/kv/value/test.rs",
        "log-0.4.11/src/lib.rs",
        "log-0.4.11/src/macros.rs",
        "log-0.4.11/src/serde.rs",
        "log-0.4.11/tests/filters.rs",
        "log-0.4.11/tests/macros.rs",
    ],
    archive = ":log-0.4.11--archive",
    crate = "build_script_build",
    crate_root = "log-0.4.11/build.rs",
    edition = "2015",
    env = {
    },
    features = [
        "kv_unstable",
        "serde",
        "std",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "logos",
    srcs = [
        "logos-0.11.4/src/internal.rs",
        "logos-0.11.4/src/lexer.rs",
        "logos-0.11.4/src/lib.rs",
        "logos-0.11.4/src/source.rs",
    ],
    archive = ":logos-0.11.4--archive",
    crate = "logos",
    crate_root = "logos-0.11.4/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [
        "default",
        "export_derive",
        "logos-derive",
        "std",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [":logos-derive-0.11.5"],
)

third_party_rust_library(
    name = "logos-derive-0.11.5",
    srcs = [
        "logos-derive-0.11.5/src/error.rs",
        "logos-derive-0.11.5/src/generator/context.rs",
        "logos-derive-0.11.5/src/generator/fork.rs",
        "logos-derive-0.11.5/src/generator/leaf.rs",
        "logos-derive-0.11.5/src/generator/mod.rs",
        "logos-derive-0.11.5/src/generator/rope.rs",
        "logos-derive-0.11.5/src/generator/tables.rs",
        "logos-derive-0.11.5/src/graph/fork.rs",
        "logos-derive-0.11.5/src/graph/impls.rs",
        "logos-derive-0.11.5/src/graph/meta.rs",
        "logos-derive-0.11.5/src/graph/mod.rs",
        "logos-derive-0.11.5/src/graph/range.rs",
        "logos-derive-0.11.5/src/graph/regex.rs",
        "logos-derive-0.11.5/src/graph/rope.rs",
        "logos-derive-0.11.5/src/leaf.rs",
        "logos-derive-0.11.5/src/lib.rs",
        "logos-derive-0.11.5/src/mir.rs",
        "logos-derive-0.11.5/src/parser/definition.rs",
        "logos-derive-0.11.5/src/parser/mod.rs",
        "logos-derive-0.11.5/src/parser/nested.rs",
        "logos-derive-0.11.5/src/parser/subpattern.rs",
        "logos-derive-0.11.5/src/parser/type_params.rs",
        "logos-derive-0.11.5/src/util.rs",
    ],
    archive = ":logos-derive-0.11.5--archive",
    crate = "logos_derive",
    crate_root = "logos-derive-0.11.5/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = True,
    rustc_flags = [
        "--cap-lints=allow",
        "--extern=proc_macro",
    ],
    deps = [
        ":beef-0.4.4",
        ":fnv",
        ":proc-macro2",
        ":quote",
        ":regex-syntax-0.6.21",
        ":syn",
        ":utf8-ranges-1.0.4",
    ],
)

third_party_rust_library(
    name = "lru-cache",
    srcs = [
        "lru-cache-0.1.2/src/heapsize.rs",
        "lru-cache-0.1.2/src/lib.rs",
    ],
    archive = ":lru-cache-0.1.2--archive",
    crate = "lru_cache",
    crate_root = "lru-cache-0.1.2/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [":linked-hash-map"],
)

third_party_rust_library(
    name = "maplit",
    srcs = ["maplit-1.0.2/src/lib.rs"],
    archive = ":maplit-1.0.2--archive",
    crate = "maplit",
    crate_root = "maplit-1.0.2/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "match_cfg-0.1.0",
    srcs = ["match_cfg-0.1.0/src/lib.rs"],
    archive = ":match_cfg-0.1.0--archive",
    crate = "match_cfg",
    crate_root = "match_cfg-0.1.0/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [
        "default",
        "use_core",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "matches-0.1.8",
    srcs = [
        "matches-0.1.8/lib.rs",
        "matches-0.1.8/tests/macro_use_one.rs",
    ],
    archive = ":matches-0.1.8--archive",
    crate = "matches",
    crate_root = "matches-0.1.8/lib.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "maybe-uninit-2.0.0",
    srcs = [
        "maybe-uninit-2.0.0/src/lib.rs",
        "maybe-uninit-2.0.0/src/maybe_uninit.rs",
    ],
    archive = ":maybe-uninit-2.0.0--archive",
    crate = "maybe_uninit",
    crate_root = "maybe-uninit-2.0.0/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = [
        "--cap-lints=allow",
        "@$(location :maybe-uninit-2.0.0-build-script-build-args)",
    ],
    deps = [],
)

third_party_rust_binary(
    name = "maybe-uninit-2.0.0-build-script-build",
    srcs = [
        "maybe-uninit-2.0.0/build.rs",
        "maybe-uninit-2.0.0/src/lib.rs",
        "maybe-uninit-2.0.0/src/maybe_uninit.rs",
        "maybe-uninit-2.0.0/tests/doesnt_drop.rs",
    ],
    archive = ":maybe-uninit-2.0.0--archive",
    crate = "build_script_build",
    crate_root = "maybe-uninit-2.0.0/build.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "memchr-2.4.0",
    srcs = [
        "memchr-2.4.0/src/cow.rs",
        "memchr-2.4.0/src/lib.rs",
        "memchr-2.4.0/src/memchr/c.rs",
        "memchr-2.4.0/src/memchr/fallback.rs",
        "memchr-2.4.0/src/memchr/iter.rs",
        "memchr-2.4.0/src/memchr/mod.rs",
        "memchr-2.4.0/src/memchr/naive.rs",
        "memchr-2.4.0/src/memchr/x86/avx.rs",
        "memchr-2.4.0/src/memchr/x86/mod.rs",
        "memchr-2.4.0/src/memchr/x86/sse2.rs",
        "memchr-2.4.0/src/memmem/byte_frequencies.rs",
        "memchr-2.4.0/src/memmem/genericsimd.rs",
        "memchr-2.4.0/src/memmem/mod.rs",
        "memchr-2.4.0/src/memmem/prefilter/fallback.rs",
        "memchr-2.4.0/src/memmem/prefilter/genericsimd.rs",
        "memchr-2.4.0/src/memmem/prefilter/mod.rs",
        "memchr-2.4.0/src/memmem/prefilter/x86/avx.rs",
        "memchr-2.4.0/src/memmem/prefilter/x86/mod.rs",
        "memchr-2.4.0/src/memmem/prefilter/x86/sse.rs",
        "memchr-2.4.0/src/memmem/rabinkarp.rs",
        "memchr-2.4.0/src/memmem/rarebytes.rs",
        "memchr-2.4.0/src/memmem/twoway.rs",
        "memchr-2.4.0/src/memmem/util.rs",
        "memchr-2.4.0/src/memmem/vector.rs",
        "memchr-2.4.0/src/memmem/x86/avx.rs",
        "memchr-2.4.0/src/memmem/x86/mod.rs",
        "memchr-2.4.0/src/memmem/x86/sse.rs",
        "memchr-2.4.0/src/tests/memchr/iter.rs",
        "memchr-2.4.0/src/tests/memchr/memchr.rs",
        "memchr-2.4.0/src/tests/memchr/mod.rs",
        "memchr-2.4.0/src/tests/memchr/simple.rs",
        "memchr-2.4.0/src/tests/memchr/testdata.rs",
        "memchr-2.4.0/src/tests/mod.rs",
    ],
    archive = ":memchr-2.4.0--archive",
    crate = "memchr",
    crate_root = "memchr-2.4.0/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [
        "default",
        "std",
        "use_std",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = [
        "--cap-lints=allow",
        "@$(location :memchr-2.4.0-build-script-build-args)",
    ],
    deps = [],
)

third_party_rust_binary(
    name = "memchr-2.4.0-build-script-build",
    srcs = ["memchr-2.4.0/build.rs"],
    archive = ":memchr-2.4.0--archive",
    crate = "build_script_build",
    crate_root = "memchr-2.4.0/build.rs",
    edition = "2018",
    env = {
    },
    features = [
        "default",
        "std",
        "use_std",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "memoffset",
    srcs = [
        "memoffset-0.6.4/src/lib.rs",
        "memoffset-0.6.4/src/offset_of.rs",
        "memoffset-0.6.4/src/raw_field.rs",
        "memoffset-0.6.4/src/span_of.rs",
    ],
    archive = ":memoffset-0.6.4--archive",
    crate = "memoffset",
    crate_root = "memoffset-0.6.4/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = ["default"],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = [
        "--cap-lints=allow",
        "@$(location :memoffset-0.6.4-build-script-build-args)",
    ],
    deps = [],
)

third_party_rust_binary(
    name = "memoffset-0.6.4-build-script-build",
    srcs = [
        "memoffset-0.6.4/build.rs",
        "memoffset-0.6.4/src/lib.rs",
        "memoffset-0.6.4/src/offset_of.rs",
        "memoffset-0.6.4/src/raw_field.rs",
        "memoffset-0.6.4/src/span_of.rs",
    ],
    archive = ":memoffset-0.6.4--archive",
    crate = "build_script_build",
    crate_root = "memoffset-0.6.4/build.rs",
    edition = "2015",
    env = {
    },
    features = ["default"],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [":autocfg-1.0.1"],
)

third_party_rust_library(
    name = "mime",
    srcs = [
        "mime-0.3.16/src/lib.rs",
        "mime-0.3.16/src/parse.rs",
    ],
    archive = ":mime-0.3.16--archive",
    crate = "mime",
    crate_root = "mime-0.3.16/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "mime_guess-2.0.3",
    srcs = [
        "mime_guess-2.0.3/src/impl_bin_search.rs",
        "mime_guess-2.0.3/src/impl_phf.rs",
        "mime_guess-2.0.3/src/lib.rs",
        "mime_guess-2.0.3/src/mime_types.rs",
    ],
    archive = ":mime_guess-2.0.3--archive",
    crate = "mime_guess",
    crate_root = "mime_guess-2.0.3/src/lib.rs",
    edition = "2015",
    env = {
        "OUT_DIR": ".",
    },
    features = [
        "default",
        "rev-mappings",
    ],
    mapped_srcs = {
        "//third-party/rust:mime_guess-2.0.3-build-script-build-srcs=mime_types_generated.rs": "mime_guess-2.0.3/src/mime_types_generated.rs",
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":mime",
        ":unicase",
    ],
)

third_party_rust_binary(
    name = "mime_guess-2.0.3-build-script-build",
    srcs = [
        "mime_guess-2.0.3/benches/benchmark.rs",
        "mime_guess-2.0.3/build.rs",
        "mime_guess-2.0.3/examples/rev_map.rs",
        "mime_guess-2.0.3/src/impl_bin_search.rs",
        "mime_guess-2.0.3/src/impl_phf.rs",
        "mime_guess-2.0.3/src/lib.rs",
        "mime_guess-2.0.3/src/mime_types.rs",
    ],
    archive = ":mime_guess-2.0.3--archive",
    crate = "build_script_build",
    crate_root = "mime_guess-2.0.3/build.rs",
    edition = "2015",
    env = {
        "OUT_DIR": ".",
    },
    features = [
        "default",
        "rev-mappings",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [":unicase"],
)

third_party_rust_library(
    name = "miniz_oxide-0.4.2",
    srcs = [
        "miniz_oxide-0.4.2/src/deflate/buffer.rs",
        "miniz_oxide-0.4.2/src/deflate/core.rs",
        "miniz_oxide-0.4.2/src/deflate/mod.rs",
        "miniz_oxide-0.4.2/src/deflate/stream.rs",
        "miniz_oxide-0.4.2/src/inflate/core.rs",
        "miniz_oxide-0.4.2/src/inflate/mod.rs",
        "miniz_oxide-0.4.2/src/inflate/output_buffer.rs",
        "miniz_oxide-0.4.2/src/inflate/stream.rs",
        "miniz_oxide-0.4.2/src/lib.rs",
        "miniz_oxide-0.4.2/src/shared.rs",
    ],
    archive = ":miniz_oxide-0.4.2--archive",
    crate = "miniz_oxide",
    crate_root = "miniz_oxide-0.4.2/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [":adler-0.2.3"],
)

third_party_rust_library(
    name = "mio",
    srcs = [
        "mio-0.7.7/src/event/event.rs",
        "mio-0.7.7/src/event/events.rs",
        "mio-0.7.7/src/event/mod.rs",
        "mio-0.7.7/src/event/source.rs",
        "mio-0.7.7/src/interest.rs",
        "mio-0.7.7/src/io_source.rs",
        "mio-0.7.7/src/lib.rs",
        "mio-0.7.7/src/macros.rs",
        "mio-0.7.7/src/net/mod.rs",
        "mio-0.7.7/src/net/tcp/listener.rs",
        "mio-0.7.7/src/net/tcp/mod.rs",
        "mio-0.7.7/src/net/tcp/socket.rs",
        "mio-0.7.7/src/net/tcp/stream.rs",
        "mio-0.7.7/src/net/udp.rs",
        "mio-0.7.7/src/net/uds/datagram.rs",
        "mio-0.7.7/src/net/uds/listener.rs",
        "mio-0.7.7/src/net/uds/mod.rs",
        "mio-0.7.7/src/net/uds/stream.rs",
        "mio-0.7.7/src/poll.rs",
        "mio-0.7.7/src/sys/mod.rs",
        "mio-0.7.7/src/sys/shell/mod.rs",
        "mio-0.7.7/src/sys/shell/selector.rs",
        "mio-0.7.7/src/sys/shell/tcp.rs",
        "mio-0.7.7/src/sys/shell/udp.rs",
        "mio-0.7.7/src/sys/shell/uds.rs",
        "mio-0.7.7/src/sys/shell/waker.rs",
        "mio-0.7.7/src/sys/unix/mod.rs",
        "mio-0.7.7/src/sys/unix/net.rs",
        "mio-0.7.7/src/sys/unix/pipe.rs",
        "mio-0.7.7/src/sys/unix/selector/epoll.rs",
        "mio-0.7.7/src/sys/unix/selector/kqueue.rs",
        "mio-0.7.7/src/sys/unix/selector/mod.rs",
        "mio-0.7.7/src/sys/unix/sourcefd.rs",
        "mio-0.7.7/src/sys/unix/tcp.rs",
        "mio-0.7.7/src/sys/unix/udp.rs",
        "mio-0.7.7/src/sys/unix/uds/datagram.rs",
        "mio-0.7.7/src/sys/unix/uds/listener.rs",
        "mio-0.7.7/src/sys/unix/uds/mod.rs",
        "mio-0.7.7/src/sys/unix/uds/socketaddr.rs",
        "mio-0.7.7/src/sys/unix/uds/stream.rs",
        "mio-0.7.7/src/sys/unix/waker.rs",
        "mio-0.7.7/src/sys/windows/afd.rs",
        "mio-0.7.7/src/sys/windows/event.rs",
        "mio-0.7.7/src/sys/windows/io_status_block.rs",
        "mio-0.7.7/src/sys/windows/mod.rs",
        "mio-0.7.7/src/sys/windows/named_pipe.rs",
        "mio-0.7.7/src/sys/windows/net.rs",
        "mio-0.7.7/src/sys/windows/overlapped.rs",
        "mio-0.7.7/src/sys/windows/selector.rs",
        "mio-0.7.7/src/sys/windows/tcp.rs",
        "mio-0.7.7/src/sys/windows/udp.rs",
        "mio-0.7.7/src/sys/windows/waker.rs",
        "mio-0.7.7/src/token.rs",
        "mio-0.7.7/src/waker.rs",
    ],
    archive = ":mio-0.7.7--archive",
    crate = "mio",
    crate_root = "mio-0.7.7/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [
        "default",
        "net",
        "os-ext",
        "os-poll",
        "os-util",
        "tcp",
        "udp",
        "uds",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":libc",
        ":log",
    ],
)

third_party_rust_library(
    name = "multipart-0.17.0",
    srcs = [
        "multipart-0.17.0/src/bin/form_test.rs",
        "multipart-0.17.0/src/bin/read_file.rs",
        "multipart-0.17.0/src/client/hyper.rs",
        "multipart-0.17.0/src/client/lazy.rs",
        "multipart-0.17.0/src/client/mod.rs",
        "multipart-0.17.0/src/client/sized.rs",
        "multipart-0.17.0/src/lib.rs",
        "multipart-0.17.0/src/local_test.rs",
        "multipart-0.17.0/src/mock.rs",
        "multipart-0.17.0/src/server/boundary.rs",
        "multipart-0.17.0/src/server/field.rs",
        "multipart-0.17.0/src/server/hyper.rs",
        "multipart-0.17.0/src/server/iron.rs",
        "multipart-0.17.0/src/server/mod.rs",
        "multipart-0.17.0/src/server/nickel.rs",
        "multipart-0.17.0/src/server/save.rs",
        "multipart-0.17.0/src/server/tiny_http.rs",
    ],
    archive = ":multipart-0.17.0--archive",
    crate = "multipart",
    crate_root = "multipart-0.17.0/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [
        "buf_redux",
        "httparse",
        "quick-error",
        "safemem",
        "server",
        "twoway",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":buf_redux-0.8.4",
        ":httparse-1.4.1",
        ":log",
        ":mime",
        ":mime_guess-2.0.3",
        ":quick-error-1.2.3",
        ":rand-0.6.5",
        ":safemem-0.3.3",
        ":tempfile",
        ":twoway-0.1.8",
    ],
)

third_party_rust_library(
    name = "new_debug_unreachable-1.0.4",
    srcs = ["new_debug_unreachable-1.0.4/src/lib.rs"],
    archive = ":new_debug_unreachable-1.0.4--archive",
    crate = "debug_unreachable",
    crate_root = "new_debug_unreachable-1.0.4/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "nix",
    srcs = [
        "nix-0.20.0/src/dir.rs",
        "nix-0.20.0/src/env.rs",
        "nix-0.20.0/src/errno.rs",
        "nix-0.20.0/src/fcntl.rs",
        "nix-0.20.0/src/features.rs",
        "nix-0.20.0/src/ifaddrs.rs",
        "nix-0.20.0/src/kmod.rs",
        "nix-0.20.0/src/lib.rs",
        "nix-0.20.0/src/macros.rs",
        "nix-0.20.0/src/mount.rs",
        "nix-0.20.0/src/mqueue.rs",
        "nix-0.20.0/src/net/if_.rs",
        "nix-0.20.0/src/net/mod.rs",
        "nix-0.20.0/src/poll.rs",
        "nix-0.20.0/src/pty.rs",
        "nix-0.20.0/src/sched.rs",
        "nix-0.20.0/src/sys/aio.rs",
        "nix-0.20.0/src/sys/epoll.rs",
        "nix-0.20.0/src/sys/event.rs",
        "nix-0.20.0/src/sys/eventfd.rs",
        "nix-0.20.0/src/sys/inotify.rs",
        "nix-0.20.0/src/sys/ioctl/bsd.rs",
        "nix-0.20.0/src/sys/ioctl/linux.rs",
        "nix-0.20.0/src/sys/ioctl/mod.rs",
        "nix-0.20.0/src/sys/memfd.rs",
        "nix-0.20.0/src/sys/mman.rs",
        "nix-0.20.0/src/sys/mod.rs",
        "nix-0.20.0/src/sys/personality.rs",
        "nix-0.20.0/src/sys/pthread.rs",
        "nix-0.20.0/src/sys/ptrace/bsd.rs",
        "nix-0.20.0/src/sys/ptrace/linux.rs",
        "nix-0.20.0/src/sys/ptrace/mod.rs",
        "nix-0.20.0/src/sys/quota.rs",
        "nix-0.20.0/src/sys/reboot.rs",
        "nix-0.20.0/src/sys/select.rs",
        "nix-0.20.0/src/sys/sendfile.rs",
        "nix-0.20.0/src/sys/signal.rs",
        "nix-0.20.0/src/sys/signalfd.rs",
        "nix-0.20.0/src/sys/socket/addr.rs",
        "nix-0.20.0/src/sys/socket/mod.rs",
        "nix-0.20.0/src/sys/socket/sockopt.rs",
        "nix-0.20.0/src/sys/stat.rs",
        "nix-0.20.0/src/sys/statfs.rs",
        "nix-0.20.0/src/sys/statvfs.rs",
        "nix-0.20.0/src/sys/sysinfo.rs",
        "nix-0.20.0/src/sys/termios.rs",
        "nix-0.20.0/src/sys/time.rs",
        "nix-0.20.0/src/sys/timerfd.rs",
        "nix-0.20.0/src/sys/uio.rs",
        "nix-0.20.0/src/sys/utsname.rs",
        "nix-0.20.0/src/sys/wait.rs",
        "nix-0.20.0/src/time.rs",
        "nix-0.20.0/src/ucontext.rs",
        "nix-0.20.0/src/unistd.rs",
    ],
    archive = ":nix-0.20.0--archive",
    crate = "nix",
    crate_root = "nix-0.20.0/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":bitflags",
        ":cfg-if-1.0.0",
        ":libc",
    ],
)

third_party_rust_library(
    name = "nix-0.19.1",
    srcs = [
        "nix-0.19.1/src/dir.rs",
        "nix-0.19.1/src/env.rs",
        "nix-0.19.1/src/errno.rs",
        "nix-0.19.1/src/fcntl.rs",
        "nix-0.19.1/src/features.rs",
        "nix-0.19.1/src/ifaddrs.rs",
        "nix-0.19.1/src/kmod.rs",
        "nix-0.19.1/src/lib.rs",
        "nix-0.19.1/src/macros.rs",
        "nix-0.19.1/src/mount.rs",
        "nix-0.19.1/src/mqueue.rs",
        "nix-0.19.1/src/net/if_.rs",
        "nix-0.19.1/src/net/mod.rs",
        "nix-0.19.1/src/poll.rs",
        "nix-0.19.1/src/pty.rs",
        "nix-0.19.1/src/sched.rs",
        "nix-0.19.1/src/sys/aio.rs",
        "nix-0.19.1/src/sys/epoll.rs",
        "nix-0.19.1/src/sys/event.rs",
        "nix-0.19.1/src/sys/eventfd.rs",
        "nix-0.19.1/src/sys/inotify.rs",
        "nix-0.19.1/src/sys/ioctl/bsd.rs",
        "nix-0.19.1/src/sys/ioctl/linux.rs",
        "nix-0.19.1/src/sys/ioctl/mod.rs",
        "nix-0.19.1/src/sys/memfd.rs",
        "nix-0.19.1/src/sys/mman.rs",
        "nix-0.19.1/src/sys/mod.rs",
        "nix-0.19.1/src/sys/pthread.rs",
        "nix-0.19.1/src/sys/ptrace/bsd.rs",
        "nix-0.19.1/src/sys/ptrace/linux.rs",
        "nix-0.19.1/src/sys/ptrace/mod.rs",
        "nix-0.19.1/src/sys/quota.rs",
        "nix-0.19.1/src/sys/reboot.rs",
        "nix-0.19.1/src/sys/select.rs",
        "nix-0.19.1/src/sys/sendfile.rs",
        "nix-0.19.1/src/sys/signal.rs",
        "nix-0.19.1/src/sys/signalfd.rs",
        "nix-0.19.1/src/sys/socket/addr.rs",
        "nix-0.19.1/src/sys/socket/mod.rs",
        "nix-0.19.1/src/sys/socket/sockopt.rs",
        "nix-0.19.1/src/sys/stat.rs",
        "nix-0.19.1/src/sys/statfs.rs",
        "nix-0.19.1/src/sys/statvfs.rs",
        "nix-0.19.1/src/sys/sysinfo.rs",
        "nix-0.19.1/src/sys/termios.rs",
        "nix-0.19.1/src/sys/time.rs",
        "nix-0.19.1/src/sys/timerfd.rs",
        "nix-0.19.1/src/sys/uio.rs",
        "nix-0.19.1/src/sys/utsname.rs",
        "nix-0.19.1/src/sys/wait.rs",
        "nix-0.19.1/src/time.rs",
        "nix-0.19.1/src/ucontext.rs",
        "nix-0.19.1/src/unistd.rs",
    ],
    archive = ":nix-0.19.1--archive",
    crate = "nix",
    crate_root = "nix-0.19.1/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":bitflags",
        ":cfg-if-1.0.0",
        ":libc",
    ],
)

third_party_rust_library(
    name = "num-integer-0.1.44",
    srcs = [
        "num-integer-0.1.44/src/average.rs",
        "num-integer-0.1.44/src/lib.rs",
        "num-integer-0.1.44/src/roots.rs",
    ],
    archive = ":num-integer-0.1.44--archive",
    crate = "num_integer",
    crate_root = "num-integer-0.1.44/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [
        "default",
        "i128",
        "std",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = [
        "--cap-lints=allow",
        "@$(location :num-integer-0.1.44-build-script-build-args)",
    ],
    deps = [":num-traits"],
)

third_party_rust_binary(
    name = "num-integer-0.1.44-build-script-build",
    srcs = [
        "num-integer-0.1.44/benches/average.rs",
        "num-integer-0.1.44/benches/gcd.rs",
        "num-integer-0.1.44/benches/roots.rs",
        "num-integer-0.1.44/build.rs",
        "num-integer-0.1.44/src/average.rs",
        "num-integer-0.1.44/src/lib.rs",
        "num-integer-0.1.44/src/roots.rs",
        "num-integer-0.1.44/tests/average.rs",
        "num-integer-0.1.44/tests/roots.rs",
    ],
    archive = ":num-integer-0.1.44--archive",
    crate = "build_script_build",
    crate_root = "num-integer-0.1.44/build.rs",
    edition = "2015",
    env = {
    },
    features = [
        "default",
        "i128",
        "std",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [":autocfg-1.0.1"],
)

third_party_rust_library(
    name = "num-traits",
    srcs = [
        "num-traits-0.2.14/src/bounds.rs",
        "num-traits-0.2.14/src/cast.rs",
        "num-traits-0.2.14/src/float.rs",
        "num-traits-0.2.14/src/identities.rs",
        "num-traits-0.2.14/src/int.rs",
        "num-traits-0.2.14/src/lib.rs",
        "num-traits-0.2.14/src/macros.rs",
        "num-traits-0.2.14/src/ops/checked.rs",
        "num-traits-0.2.14/src/ops/inv.rs",
        "num-traits-0.2.14/src/ops/mod.rs",
        "num-traits-0.2.14/src/ops/mul_add.rs",
        "num-traits-0.2.14/src/ops/overflowing.rs",
        "num-traits-0.2.14/src/ops/saturating.rs",
        "num-traits-0.2.14/src/ops/wrapping.rs",
        "num-traits-0.2.14/src/pow.rs",
        "num-traits-0.2.14/src/real.rs",
        "num-traits-0.2.14/src/sign.rs",
    ],
    archive = ":num-traits-0.2.14--archive",
    crate = "num_traits",
    crate_root = "num-traits-0.2.14/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [
        "default",
        "i128",
        "libm",
        "std",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = [
        "--cap-lints=allow",
        "@$(location :num-traits-0.2.14-build-script-build-args)",
    ],
    deps = [":libm"],
)

third_party_rust_binary(
    name = "num-traits-0.2.14-build-script-build",
    srcs = [
        "num-traits-0.2.14/build.rs",
        "num-traits-0.2.14/src/bounds.rs",
        "num-traits-0.2.14/src/cast.rs",
        "num-traits-0.2.14/src/float.rs",
        "num-traits-0.2.14/src/identities.rs",
        "num-traits-0.2.14/src/int.rs",
        "num-traits-0.2.14/src/lib.rs",
        "num-traits-0.2.14/src/macros.rs",
        "num-traits-0.2.14/src/ops/checked.rs",
        "num-traits-0.2.14/src/ops/inv.rs",
        "num-traits-0.2.14/src/ops/mod.rs",
        "num-traits-0.2.14/src/ops/mul_add.rs",
        "num-traits-0.2.14/src/ops/overflowing.rs",
        "num-traits-0.2.14/src/ops/saturating.rs",
        "num-traits-0.2.14/src/ops/wrapping.rs",
        "num-traits-0.2.14/src/pow.rs",
        "num-traits-0.2.14/src/real.rs",
        "num-traits-0.2.14/src/sign.rs",
        "num-traits-0.2.14/tests/cast.rs",
    ],
    archive = ":num-traits-0.2.14--archive",
    crate = "build_script_build",
    crate_root = "num-traits-0.2.14/build.rs",
    edition = "2015",
    env = {
    },
    features = [
        "default",
        "i128",
        "libm",
        "std",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [":autocfg-1.0.1"],
)

third_party_rust_library(
    name = "num_cpus",
    srcs = [
        "num_cpus-1.13.0/src/lib.rs",
        "num_cpus-1.13.0/src/linux.rs",
    ],
    archive = ":num_cpus-1.13.0--archive",
    crate = "num_cpus",
    crate_root = "num_cpus-1.13.0/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [":libc"],
)

third_party_rust_library(
    name = "object-0.20.0",
    srcs = [
        "object-0.20.0/src/common.rs",
        "object-0.20.0/src/elf.rs",
        "object-0.20.0/src/endian.rs",
        "object-0.20.0/src/lib.rs",
        "object-0.20.0/src/macho.rs",
        "object-0.20.0/src/pe.rs",
        "object-0.20.0/src/pod.rs",
        "object-0.20.0/src/read/any.rs",
        "object-0.20.0/src/read/coff/file.rs",
        "object-0.20.0/src/read/coff/mod.rs",
        "object-0.20.0/src/read/coff/relocation.rs",
        "object-0.20.0/src/read/coff/section.rs",
        "object-0.20.0/src/read/coff/symbol.rs",
        "object-0.20.0/src/read/elf/compression.rs",
        "object-0.20.0/src/read/elf/file.rs",
        "object-0.20.0/src/read/elf/mod.rs",
        "object-0.20.0/src/read/elf/note.rs",
        "object-0.20.0/src/read/elf/relocation.rs",
        "object-0.20.0/src/read/elf/section.rs",
        "object-0.20.0/src/read/elf/segment.rs",
        "object-0.20.0/src/read/elf/symbol.rs",
        "object-0.20.0/src/read/macho/file.rs",
        "object-0.20.0/src/read/macho/load_command.rs",
        "object-0.20.0/src/read/macho/mod.rs",
        "object-0.20.0/src/read/macho/relocation.rs",
        "object-0.20.0/src/read/macho/section.rs",
        "object-0.20.0/src/read/macho/segment.rs",
        "object-0.20.0/src/read/macho/symbol.rs",
        "object-0.20.0/src/read/mod.rs",
        "object-0.20.0/src/read/pe/file.rs",
        "object-0.20.0/src/read/pe/mod.rs",
        "object-0.20.0/src/read/pe/section.rs",
        "object-0.20.0/src/read/traits.rs",
        "object-0.20.0/src/read/util.rs",
        "object-0.20.0/src/read/wasm.rs",
        "object-0.20.0/src/write/coff.rs",
        "object-0.20.0/src/write/elf.rs",
        "object-0.20.0/src/write/macho.rs",
        "object-0.20.0/src/write/mod.rs",
        "object-0.20.0/src/write/string.rs",
        "object-0.20.0/src/write/util.rs",
    ],
    archive = ":object-0.20.0--archive",
    crate = "object",
    crate_root = "object-0.20.0/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [
        "coff",
        "elf",
        "macho",
        "pe",
        "read_core",
        "unaligned",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "once_cell",
    srcs = [
        "once_cell-1.7.2/src/imp_pl.rs",
        "once_cell-1.7.2/src/imp_std.rs",
        "once_cell-1.7.2/src/lib.rs",
        "once_cell-1.7.2/src/race.rs",
    ],
    archive = ":once_cell-1.7.2--archive",
    crate = "once_cell",
    crate_root = "once_cell-1.7.2/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [
        "alloc",
        "default",
        "race",
        "std",
        "unstable",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "opaque-debug-0.2.3",
    srcs = ["opaque-debug-0.2.3/src/lib.rs"],
    archive = ":opaque-debug-0.2.3--archive",
    crate = "opaque_debug",
    crate_root = "opaque-debug-0.2.3/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "opaque-debug-0.3.0",
    srcs = ["opaque-debug-0.3.0/src/lib.rs"],
    archive = ":opaque-debug-0.3.0--archive",
    crate = "opaque_debug",
    crate_root = "opaque-debug-0.3.0/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "openssl-probe-0.1.2",
    srcs = ["openssl-probe-0.1.2/src/lib.rs"],
    archive = ":openssl-probe-0.1.2--archive",
    crate = "openssl_probe",
    crate_root = "openssl-probe-0.1.2/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "parking_lot-0.11.0",
    srcs = [
        "parking_lot-0.11.0/src/condvar.rs",
        "parking_lot-0.11.0/src/deadlock.rs",
        "parking_lot-0.11.0/src/elision.rs",
        "parking_lot-0.11.0/src/fair_mutex.rs",
        "parking_lot-0.11.0/src/lib.rs",
        "parking_lot-0.11.0/src/mutex.rs",
        "parking_lot-0.11.0/src/once.rs",
        "parking_lot-0.11.0/src/raw_fair_mutex.rs",
        "parking_lot-0.11.0/src/raw_mutex.rs",
        "parking_lot-0.11.0/src/raw_rwlock.rs",
        "parking_lot-0.11.0/src/remutex.rs",
        "parking_lot-0.11.0/src/rwlock.rs",
        "parking_lot-0.11.0/src/util.rs",
    ],
    archive = ":parking_lot-0.11.0--archive",
    crate = "parking_lot",
    crate_root = "parking_lot-0.11.0/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = ["default"],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":instant-0.1.7",
        ":lock_api-0.4.1",
        ":parking_lot_core-0.8.0",
    ],
)

third_party_rust_library(
    name = "parking_lot_core-0.8.0",
    srcs = [
        "parking_lot_core-0.8.0/src/lib.rs",
        "parking_lot_core-0.8.0/src/parking_lot.rs",
        "parking_lot_core-0.8.0/src/spinwait.rs",
        "parking_lot_core-0.8.0/src/thread_parker/cloudabi.rs",
        "parking_lot_core-0.8.0/src/thread_parker/generic.rs",
        "parking_lot_core-0.8.0/src/thread_parker/linux.rs",
        "parking_lot_core-0.8.0/src/thread_parker/mod.rs",
        "parking_lot_core-0.8.0/src/thread_parker/redox.rs",
        "parking_lot_core-0.8.0/src/thread_parker/sgx.rs",
        "parking_lot_core-0.8.0/src/thread_parker/unix.rs",
        "parking_lot_core-0.8.0/src/thread_parker/wasm.rs",
        "parking_lot_core-0.8.0/src/thread_parker/wasm_atomic.rs",
        "parking_lot_core-0.8.0/src/thread_parker/windows/keyed_event.rs",
        "parking_lot_core-0.8.0/src/thread_parker/windows/mod.rs",
        "parking_lot_core-0.8.0/src/thread_parker/windows/waitaddress.rs",
        "parking_lot_core-0.8.0/src/util.rs",
        "parking_lot_core-0.8.0/src/word_lock.rs",
    ],
    archive = ":parking_lot_core-0.8.0--archive",
    crate = "parking_lot_core",
    crate_root = "parking_lot_core-0.8.0/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":cfg-if",
        ":instant-0.1.7",
        ":libc",
        ":smallvec",
    ],
)

third_party_rust_library(
    name = "paste",
    srcs = [
        "paste-1.0.2/src/doc.rs",
        "paste-1.0.2/src/error.rs",
        "paste-1.0.2/src/lib.rs",
        "paste-1.0.2/src/segment.rs",
    ],
    archive = ":paste-1.0.2--archive",
    crate = "paste",
    crate_root = "paste-1.0.2/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = True,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "percent-encoding",
    srcs = ["percent-encoding-2.1.0/lib.rs"],
    archive = ":percent-encoding-2.1.0--archive",
    crate = "percent_encoding",
    crate_root = "percent-encoding-2.1.0/lib.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "pest",
    srcs = [
        "pest-2.1.3/src/error.rs",
        "pest-2.1.3/src/iterators/flat_pairs.rs",
        "pest-2.1.3/src/iterators/mod.rs",
        "pest-2.1.3/src/iterators/pair.rs",
        "pest-2.1.3/src/iterators/pairs.rs",
        "pest-2.1.3/src/iterators/queueable_token.rs",
        "pest-2.1.3/src/iterators/tokens.rs",
        "pest-2.1.3/src/lib.rs",
        "pest-2.1.3/src/macros.rs",
        "pest-2.1.3/src/parser.rs",
        "pest-2.1.3/src/parser_state.rs",
        "pest-2.1.3/src/position.rs",
        "pest-2.1.3/src/prec_climber.rs",
        "pest-2.1.3/src/span.rs",
        "pest-2.1.3/src/stack.rs",
        "pest-2.1.3/src/token.rs",
        "pest-2.1.3/src/unicode/binary.rs",
        "pest-2.1.3/src/unicode/category.rs",
        "pest-2.1.3/src/unicode/mod.rs",
    ],
    archive = ":pest-2.1.3--archive",
    crate = "pest",
    crate_root = "pest-2.1.3/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = ["//third-party/rust:ucd-trie-0.1.3"],
)

third_party_rust_library(
    name = "pest_derive",
    srcs = ["pest_derive-2.1.0/src/lib.rs"],
    archive = ":pest_derive-2.1.0--archive",
    crate = "pest_derive",
    crate_root = "pest_derive-2.1.0/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = True,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        "//third-party/rust:pest",
        "//third-party/rust:pest_generator-2.1.3",
    ],
)

third_party_rust_library(
    name = "pest_generator-2.1.3",
    srcs = [
        "pest_generator-2.1.3/src/generator.rs",
        "pest_generator-2.1.3/src/lib.rs",
        "pest_generator-2.1.3/src/macros.rs",
    ],
    archive = ":pest_generator-2.1.3--archive",
    crate = "pest_generator",
    crate_root = "pest_generator-2.1.3/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        "//third-party/rust:pest",
        "//third-party/rust:pest_meta-2.1.3",
        "//third-party/rust:proc-macro2",
        "//third-party/rust:quote",
        "//third-party/rust:syn",
    ],
)

third_party_rust_library(
    name = "pest_meta-2.1.3",
    srcs = [
        "pest_meta-2.1.3/src/ast.rs",
        "pest_meta-2.1.3/src/grammar.rs",
        "pest_meta-2.1.3/src/lib.rs",
        "pest_meta-2.1.3/src/optimizer/concatenator.rs",
        "pest_meta-2.1.3/src/optimizer/factorizer.rs",
        "pest_meta-2.1.3/src/optimizer/mod.rs",
        "pest_meta-2.1.3/src/optimizer/restorer.rs",
        "pest_meta-2.1.3/src/optimizer/rotater.rs",
        "pest_meta-2.1.3/src/optimizer/skipper.rs",
        "pest_meta-2.1.3/src/optimizer/unroller.rs",
        "pest_meta-2.1.3/src/parser.rs",
        "pest_meta-2.1.3/src/validator.rs",
    ],
    archive = ":pest_meta-2.1.3--archive",
    crate = "pest_meta",
    crate_root = "pest_meta-2.1.3/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        "//third-party/rust:maplit",
        "//third-party/rust:pest",
    ],
)

third_party_rust_library(
    name = "petgraph-0.5.1",
    srcs = [
        "petgraph-0.5.1/src/algo/dominators.rs",
        "petgraph-0.5.1/src/algo/mod.rs",
        "petgraph-0.5.1/src/astar.rs",
        "petgraph-0.5.1/src/csr.rs",
        "petgraph-0.5.1/src/data.rs",
        "petgraph-0.5.1/src/dijkstra.rs",
        "petgraph-0.5.1/src/dot.rs",
        "petgraph-0.5.1/src/generate.rs",
        "petgraph-0.5.1/src/graph_impl/frozen.rs",
        "petgraph-0.5.1/src/graph_impl/mod.rs",
        "petgraph-0.5.1/src/graph_impl/serialization.rs",
        "petgraph-0.5.1/src/graph_impl/stable_graph/mod.rs",
        "petgraph-0.5.1/src/graph_impl/stable_graph/serialization.rs",
        "petgraph-0.5.1/src/graphmap.rs",
        "petgraph-0.5.1/src/isomorphism.rs",
        "petgraph-0.5.1/src/iter_format.rs",
        "petgraph-0.5.1/src/iter_utils.rs",
        "petgraph-0.5.1/src/lib.rs",
        "petgraph-0.5.1/src/macros.rs",
        "petgraph-0.5.1/src/matrix_graph.rs",
        "petgraph-0.5.1/src/prelude.rs",
        "petgraph-0.5.1/src/quickcheck.rs",
        "petgraph-0.5.1/src/scored.rs",
        "petgraph-0.5.1/src/serde_utils.rs",
        "petgraph-0.5.1/src/simple_paths.rs",
        "petgraph-0.5.1/src/traits_graph.rs",
        "petgraph-0.5.1/src/unionfind.rs",
        "petgraph-0.5.1/src/util.rs",
        "petgraph-0.5.1/src/visit/dfsvisit.rs",
        "petgraph-0.5.1/src/visit/filter.rs",
        "petgraph-0.5.1/src/visit/macros.rs",
        "petgraph-0.5.1/src/visit/mod.rs",
        "petgraph-0.5.1/src/visit/reversed.rs",
        "petgraph-0.5.1/src/visit/traversal.rs",
    ],
    archive = ":petgraph-0.5.1--archive",
    crate = "petgraph",
    crate_root = "petgraph-0.5.1/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [
        "default",
        "graphmap",
        "matrix_graph",
        "stable_graph",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":fixedbitset-0.2.0",
        ":indexmap",
    ],
)

third_party_rust_library(
    name = "phf_shared-0.8.0",
    srcs = ["phf_shared-0.8.0/src/lib.rs"],
    archive = ":phf_shared-0.8.0--archive",
    crate = "phf_shared",
    crate_root = "phf_shared-0.8.0/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [
        "default",
        "std",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [":siphasher"],
)

third_party_rust_library(
    name = "pin-project",
    srcs = ["pin-project-0.4.24/src/lib.rs"],
    archive = ":pin-project-0.4.24--archive",
    crate = "pin_project",
    crate_root = "pin-project-0.4.24/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [":pin-project-internal-0.4.24"],
)

third_party_rust_library(
    name = "pin-project-1.0.2",
    srcs = ["pin-project-1.0.2/src/lib.rs"],
    archive = ":pin-project-1.0.2--archive",
    crate = "pin_project",
    crate_root = "pin-project-1.0.2/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [":pin-project-internal-1.0.2"],
)

third_party_rust_library(
    name = "pin-project-internal-0.4.24",
    srcs = [
        "pin-project-internal-0.4.24/src/lib.rs",
        "pin-project-internal-0.4.24/src/pin_project/attribute.rs",
        "pin-project-internal-0.4.24/src/pin_project/derive.rs",
        "pin-project-internal-0.4.24/src/pin_project/mod.rs",
        "pin-project-internal-0.4.24/src/pinned_drop.rs",
        "pin-project-internal-0.4.24/src/project.rs",
        "pin-project-internal-0.4.24/src/utils.rs",
    ],
    archive = ":pin-project-internal-0.4.24--archive",
    crate = "pin_project_internal",
    crate_root = "pin-project-internal-0.4.24/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = True,
    rustc_flags = [
        "--cap-lints=allow",
        "@$(location :pin-project-internal-0.4.24-build-script-build-args)",
    ],
    deps = [
        ":proc-macro2",
        ":quote",
        ":syn",
    ],
)

third_party_rust_binary(
    name = "pin-project-internal-0.4.24-build-script-build",
    srcs = ["pin-project-internal-0.4.24/build.rs"],
    archive = ":pin-project-internal-0.4.24--archive",
    crate = "build_script_build",
    crate_root = "pin-project-internal-0.4.24/build.rs",
    edition = "2018",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "pin-project-internal-1.0.2",
    srcs = [
        "pin-project-internal-1.0.2/src/lib.rs",
        "pin-project-internal-1.0.2/src/pin_project/args.rs",
        "pin-project-internal-1.0.2/src/pin_project/attribute.rs",
        "pin-project-internal-1.0.2/src/pin_project/derive.rs",
        "pin-project-internal-1.0.2/src/pin_project/mod.rs",
        "pin-project-internal-1.0.2/src/pinned_drop.rs",
        "pin-project-internal-1.0.2/src/utils.rs",
    ],
    archive = ":pin-project-internal-1.0.2--archive",
    crate = "pin_project_internal",
    crate_root = "pin-project-internal-1.0.2/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = True,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":proc-macro2",
        ":quote",
        ":syn",
    ],
)

third_party_rust_library(
    name = "pin-project-lite-0.2.6",
    srcs = ["pin-project-lite-0.2.6/src/lib.rs"],
    archive = ":pin-project-lite-0.2.6--archive",
    crate = "pin_project_lite",
    crate_root = "pin-project-lite-0.2.6/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "pin-utils-0.1.0",
    srcs = [
        "pin-utils-0.1.0/src/lib.rs",
        "pin-utils-0.1.0/src/projection.rs",
        "pin-utils-0.1.0/src/stack_pin.rs",
    ],
    archive = ":pin-utils-0.1.0--archive",
    crate = "pin_utils",
    crate_root = "pin-utils-0.1.0/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "plain",
    srcs = [
        "plain-0.2.3/src/error.rs",
        "plain-0.2.3/src/lib.rs",
        "plain-0.2.3/src/methods.rs",
        "plain-0.2.3/src/plain.rs",
        "plain-0.2.3/src/tests.rs",
    ],
    archive = ":plain-0.2.3--archive",
    crate = "plain",
    crate_root = "plain-0.2.3/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "ppv-lite86-0.2.9",
    srcs = [
        "ppv-lite86-0.2.9/src/generic.rs",
        "ppv-lite86-0.2.9/src/lib.rs",
        "ppv-lite86-0.2.9/src/soft.rs",
        "ppv-lite86-0.2.9/src/types.rs",
        "ppv-lite86-0.2.9/src/x86_64/mod.rs",
        "ppv-lite86-0.2.9/src/x86_64/sse2.rs",
    ],
    archive = ":ppv-lite86-0.2.9--archive",
    crate = "ppv_lite86",
    crate_root = "ppv-lite86-0.2.9/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [
        "simd",
        "std",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "precomputed-hash-0.1.1",
    srcs = ["precomputed-hash-0.1.1/src/lib.rs"],
    archive = ":precomputed-hash-0.1.1--archive",
    crate = "precomputed_hash",
    crate_root = "precomputed-hash-0.1.1/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "proc-macro-error",
    srcs = [
        "proc-macro-error-1.0.4/src/diagnostic.rs",
        "proc-macro-error-1.0.4/src/dummy.rs",
        "proc-macro-error-1.0.4/src/imp/delegate.rs",
        "proc-macro-error-1.0.4/src/imp/fallback.rs",
        "proc-macro-error-1.0.4/src/lib.rs",
        "proc-macro-error-1.0.4/src/macros.rs",
        "proc-macro-error-1.0.4/src/sealed.rs",
    ],
    archive = ":proc-macro-error-1.0.4--archive",
    crate = "proc_macro_error",
    crate_root = "proc-macro-error-1.0.4/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [
        "default",
        "syn",
        "syn-error",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":proc-macro-error-attr-1.0.4",
        ":proc-macro2",
        ":quote",
        ":syn",
    ],
)

third_party_rust_library(
    name = "proc-macro-error-attr-1.0.4",
    srcs = [
        "proc-macro-error-attr-1.0.4/src/lib.rs",
        "proc-macro-error-attr-1.0.4/src/parse.rs",
        "proc-macro-error-attr-1.0.4/src/settings.rs",
    ],
    archive = ":proc-macro-error-attr-1.0.4--archive",
    crate = "proc_macro_error_attr",
    crate_root = "proc-macro-error-attr-1.0.4/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = True,
    rustc_flags = [
        "--cap-lints=allow",
        "@$(location :proc-macro-error-attr-1.0.4-build-script-build-args)",
    ],
    deps = [
        ":proc-macro2",
        ":quote",
    ],
)

third_party_rust_binary(
    name = "proc-macro-error-attr-1.0.4-build-script-build",
    srcs = ["proc-macro-error-attr-1.0.4/build.rs"],
    archive = ":proc-macro-error-attr-1.0.4--archive",
    crate = "build_script_build",
    crate_root = "proc-macro-error-attr-1.0.4/build.rs",
    edition = "2018",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [":version_check-0.9.2"],
)

third_party_rust_library(
    name = "proc-macro-hack",
    srcs = [
        "proc-macro-hack-0.5.19/src/error.rs",
        "proc-macro-hack-0.5.19/src/iter.rs",
        "proc-macro-hack-0.5.19/src/lib.rs",
        "proc-macro-hack-0.5.19/src/parse.rs",
        "proc-macro-hack-0.5.19/src/quote.rs",
    ],
    archive = ":proc-macro-hack-0.5.19--archive",
    crate = "proc_macro_hack",
    crate_root = "proc-macro-hack-0.5.19/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = True,
    rustc_flags = [
        "--cap-lints=allow",
        "@$(location :proc-macro-hack-0.5.19-build-script-build-args)",
    ],
    deps = [],
)

third_party_rust_binary(
    name = "proc-macro-hack-0.5.19-build-script-build",
    srcs = ["proc-macro-hack-0.5.19/build.rs"],
    archive = ":proc-macro-hack-0.5.19--archive",
    crate = "build_script_build",
    crate_root = "proc-macro-hack-0.5.19/build.rs",
    edition = "2018",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "proc-macro-nested-0.1.6",
    srcs = ["proc-macro-nested-0.1.6/src/lib.rs"],
    archive = ":proc-macro-nested-0.1.6--archive",
    crate = "proc_macro_nested",
    crate_root = "proc-macro-nested-0.1.6/src/lib.rs",
    edition = "2015",
    env = {
        "OUT_DIR": ".",
    },
    features = [],
    mapped_srcs = {
        "//third-party/rust:proc-macro-nested-0.1.6-build-script-build-srcs=count.rs": "proc-macro-nested-0.1.6/src/count.rs",
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_binary(
    name = "proc-macro-nested-0.1.6-build-script-build",
    srcs = [
        "proc-macro-nested-0.1.6/build.rs",
        "proc-macro-nested-0.1.6/src/lib.rs",
    ],
    archive = ":proc-macro-nested-0.1.6--archive",
    crate = "build_script_build",
    crate_root = "proc-macro-nested-0.1.6/build.rs",
    edition = "2015",
    env = {
        "OUT_DIR": ".",
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "proc-macro2",
    srcs = [
        "proc-macro2-1.0.26/src/detection.rs",
        "proc-macro2-1.0.26/src/fallback.rs",
        "proc-macro2-1.0.26/src/lib.rs",
        "proc-macro2-1.0.26/src/marker.rs",
        "proc-macro2-1.0.26/src/parse.rs",
        "proc-macro2-1.0.26/src/wrapper.rs",
    ],
    archive = ":proc-macro2-1.0.26--archive",
    crate = "proc_macro2",
    crate_root = "proc-macro2-1.0.26/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [
        "default",
        "proc-macro",
        "span-locations",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = [
        "--cap-lints=allow",
        "@$(location :proc-macro2-1.0.26-build-script-build-args)",
    ],
    deps = [":unicode-xid-0.2.1"],
)

third_party_rust_binary(
    name = "proc-macro2-1.0.26-build-script-build",
    srcs = ["proc-macro2-1.0.26/build.rs"],
    archive = ":proc-macro2-1.0.26--archive",
    crate = "build_script_build",
    crate_root = "proc-macro2-1.0.26/build.rs",
    edition = "2018",
    env = {
    },
    features = [
        "default",
        "proc-macro",
        "span-locations",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "quick-error-1.2.3",
    srcs = ["quick-error-1.2.3/src/lib.rs"],
    archive = ":quick-error-1.2.3--archive",
    crate = "quick_error",
    crate_root = "quick-error-1.2.3/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "quick-error-2.0.0",
    srcs = ["quick-error-2.0.0/src/lib.rs"],
    archive = ":quick-error-2.0.0--archive",
    crate = "quick_error",
    crate_root = "quick-error-2.0.0/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "quote",
    srcs = [
        "quote-1.0.9/src/ext.rs",
        "quote-1.0.9/src/format.rs",
        "quote-1.0.9/src/ident_fragment.rs",
        "quote-1.0.9/src/lib.rs",
        "quote-1.0.9/src/runtime.rs",
        "quote-1.0.9/src/spanned.rs",
        "quote-1.0.9/src/to_tokens.rs",
    ],
    archive = ":quote-1.0.9--archive",
    crate = "quote",
    crate_root = "quote-1.0.9/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [
        "default",
        "proc-macro",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [":proc-macro2"],
)

third_party_rust_library(
    name = "rand",
    srcs = [
        "rand-0.7.3/src/distributions/bernoulli.rs",
        "rand-0.7.3/src/distributions/binomial.rs",
        "rand-0.7.3/src/distributions/cauchy.rs",
        "rand-0.7.3/src/distributions/dirichlet.rs",
        "rand-0.7.3/src/distributions/exponential.rs",
        "rand-0.7.3/src/distributions/float.rs",
        "rand-0.7.3/src/distributions/gamma.rs",
        "rand-0.7.3/src/distributions/integer.rs",
        "rand-0.7.3/src/distributions/mod.rs",
        "rand-0.7.3/src/distributions/normal.rs",
        "rand-0.7.3/src/distributions/other.rs",
        "rand-0.7.3/src/distributions/pareto.rs",
        "rand-0.7.3/src/distributions/poisson.rs",
        "rand-0.7.3/src/distributions/triangular.rs",
        "rand-0.7.3/src/distributions/uniform.rs",
        "rand-0.7.3/src/distributions/unit_circle.rs",
        "rand-0.7.3/src/distributions/unit_sphere.rs",
        "rand-0.7.3/src/distributions/utils.rs",
        "rand-0.7.3/src/distributions/weibull.rs",
        "rand-0.7.3/src/distributions/weighted/alias_method.rs",
        "rand-0.7.3/src/distributions/weighted/mod.rs",
        "rand-0.7.3/src/distributions/ziggurat_tables.rs",
        "rand-0.7.3/src/lib.rs",
        "rand-0.7.3/src/prelude.rs",
        "rand-0.7.3/src/rngs/adapter/mod.rs",
        "rand-0.7.3/src/rngs/adapter/read.rs",
        "rand-0.7.3/src/rngs/adapter/reseeding.rs",
        "rand-0.7.3/src/rngs/entropy.rs",
        "rand-0.7.3/src/rngs/mock.rs",
        "rand-0.7.3/src/rngs/mod.rs",
        "rand-0.7.3/src/rngs/small.rs",
        "rand-0.7.3/src/rngs/std.rs",
        "rand-0.7.3/src/rngs/thread.rs",
        "rand-0.7.3/src/seq/index.rs",
        "rand-0.7.3/src/seq/mod.rs",
    ],
    archive = ":rand-0.7.3--archive",
    crate = "rand",
    crate_root = "rand-0.7.3/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [
        "alloc",
        "default",
        "getrandom",
        "getrandom_package",
        "libc",
        "rand_pcg",
        "small_rng",
        "std",
    ],
    mapped_srcs = {
    },
    named_deps = {
        "getrandom_package": ":getrandom-0.1.15",
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":libc",
        ":rand_chacha",
        ":rand_core",
        ":rand_pcg",
    ],
)

third_party_rust_library(
    name = "rand-0.6.5",
    srcs = [
        "rand-0.6.5/src/deprecated.rs",
        "rand-0.6.5/src/distributions/bernoulli.rs",
        "rand-0.6.5/src/distributions/binomial.rs",
        "rand-0.6.5/src/distributions/cauchy.rs",
        "rand-0.6.5/src/distributions/dirichlet.rs",
        "rand-0.6.5/src/distributions/exponential.rs",
        "rand-0.6.5/src/distributions/float.rs",
        "rand-0.6.5/src/distributions/gamma.rs",
        "rand-0.6.5/src/distributions/integer.rs",
        "rand-0.6.5/src/distributions/mod.rs",
        "rand-0.6.5/src/distributions/normal.rs",
        "rand-0.6.5/src/distributions/other.rs",
        "rand-0.6.5/src/distributions/pareto.rs",
        "rand-0.6.5/src/distributions/poisson.rs",
        "rand-0.6.5/src/distributions/triangular.rs",
        "rand-0.6.5/src/distributions/uniform.rs",
        "rand-0.6.5/src/distributions/unit_circle.rs",
        "rand-0.6.5/src/distributions/unit_sphere.rs",
        "rand-0.6.5/src/distributions/utils.rs",
        "rand-0.6.5/src/distributions/weibull.rs",
        "rand-0.6.5/src/distributions/weighted.rs",
        "rand-0.6.5/src/distributions/ziggurat_tables.rs",
        "rand-0.6.5/src/lib.rs",
        "rand-0.6.5/src/prelude.rs",
        "rand-0.6.5/src/prng/mod.rs",
        "rand-0.6.5/src/rngs/adapter/mod.rs",
        "rand-0.6.5/src/rngs/adapter/read.rs",
        "rand-0.6.5/src/rngs/adapter/reseeding.rs",
        "rand-0.6.5/src/rngs/entropy.rs",
        "rand-0.6.5/src/rngs/mock.rs",
        "rand-0.6.5/src/rngs/mod.rs",
        "rand-0.6.5/src/rngs/small.rs",
        "rand-0.6.5/src/rngs/std.rs",
        "rand-0.6.5/src/rngs/thread.rs",
        "rand-0.6.5/src/seq/index.rs",
        "rand-0.6.5/src/seq/mod.rs",
    ],
    archive = ":rand-0.6.5--archive",
    crate = "rand",
    crate_root = "rand-0.6.5/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [
        "alloc",
        "default",
        "rand_os",
        "std",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = [
        "--cap-lints=allow",
        "@$(location :rand-0.6.5-build-script-build-args)",
    ],
    deps = [
        ":libc",
        ":rand_chacha-0.1.1",
        ":rand_core-0.4.2",
        ":rand_hc-0.1.0",
        ":rand_isaac-0.1.1",
        ":rand_jitter-0.1.4",
        ":rand_os-0.1.3",
        ":rand_pcg-0.1.2",
        ":rand_xorshift-0.1.1",
    ],
)

third_party_rust_binary(
    name = "rand-0.6.5-build-script-build",
    srcs = [
        "rand-0.6.5/benches/distributions.rs",
        "rand-0.6.5/benches/generators.rs",
        "rand-0.6.5/benches/misc.rs",
        "rand-0.6.5/benches/seq.rs",
        "rand-0.6.5/build.rs",
        "rand-0.6.5/examples/monte-carlo.rs",
        "rand-0.6.5/examples/monty-hall.rs",
        "rand-0.6.5/src/deprecated.rs",
        "rand-0.6.5/src/distributions/bernoulli.rs",
        "rand-0.6.5/src/distributions/binomial.rs",
        "rand-0.6.5/src/distributions/cauchy.rs",
        "rand-0.6.5/src/distributions/dirichlet.rs",
        "rand-0.6.5/src/distributions/exponential.rs",
        "rand-0.6.5/src/distributions/float.rs",
        "rand-0.6.5/src/distributions/gamma.rs",
        "rand-0.6.5/src/distributions/integer.rs",
        "rand-0.6.5/src/distributions/mod.rs",
        "rand-0.6.5/src/distributions/normal.rs",
        "rand-0.6.5/src/distributions/other.rs",
        "rand-0.6.5/src/distributions/pareto.rs",
        "rand-0.6.5/src/distributions/poisson.rs",
        "rand-0.6.5/src/distributions/triangular.rs",
        "rand-0.6.5/src/distributions/uniform.rs",
        "rand-0.6.5/src/distributions/unit_circle.rs",
        "rand-0.6.5/src/distributions/unit_sphere.rs",
        "rand-0.6.5/src/distributions/utils.rs",
        "rand-0.6.5/src/distributions/weibull.rs",
        "rand-0.6.5/src/distributions/weighted.rs",
        "rand-0.6.5/src/distributions/ziggurat_tables.rs",
        "rand-0.6.5/src/lib.rs",
        "rand-0.6.5/src/prelude.rs",
        "rand-0.6.5/src/prng/mod.rs",
        "rand-0.6.5/src/rngs/adapter/mod.rs",
        "rand-0.6.5/src/rngs/adapter/read.rs",
        "rand-0.6.5/src/rngs/adapter/reseeding.rs",
        "rand-0.6.5/src/rngs/entropy.rs",
        "rand-0.6.5/src/rngs/mock.rs",
        "rand-0.6.5/src/rngs/mod.rs",
        "rand-0.6.5/src/rngs/small.rs",
        "rand-0.6.5/src/rngs/std.rs",
        "rand-0.6.5/src/rngs/thread.rs",
        "rand-0.6.5/src/seq/index.rs",
        "rand-0.6.5/src/seq/mod.rs",
        "rand-0.6.5/tests/uniformity.rs",
    ],
    archive = ":rand-0.6.5--archive",
    crate = "build_script_build",
    crate_root = "rand-0.6.5/build.rs",
    edition = "2015",
    env = {
    },
    features = [
        "alloc",
        "default",
        "rand_os",
        "std",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [":autocfg-0.1.7"],
)

third_party_rust_library(
    name = "rand-0.8.3",
    srcs = [
        "rand-0.8.3/src/distributions/bernoulli.rs",
        "rand-0.8.3/src/distributions/float.rs",
        "rand-0.8.3/src/distributions/integer.rs",
        "rand-0.8.3/src/distributions/mod.rs",
        "rand-0.8.3/src/distributions/other.rs",
        "rand-0.8.3/src/distributions/uniform.rs",
        "rand-0.8.3/src/distributions/utils.rs",
        "rand-0.8.3/src/distributions/weighted.rs",
        "rand-0.8.3/src/distributions/weighted_index.rs",
        "rand-0.8.3/src/lib.rs",
        "rand-0.8.3/src/prelude.rs",
        "rand-0.8.3/src/rng.rs",
        "rand-0.8.3/src/rngs/adapter/mod.rs",
        "rand-0.8.3/src/rngs/adapter/read.rs",
        "rand-0.8.3/src/rngs/adapter/reseeding.rs",
        "rand-0.8.3/src/rngs/mock.rs",
        "rand-0.8.3/src/rngs/mod.rs",
        "rand-0.8.3/src/rngs/small.rs",
        "rand-0.8.3/src/rngs/std.rs",
        "rand-0.8.3/src/rngs/thread.rs",
        "rand-0.8.3/src/rngs/xoshiro128plusplus.rs",
        "rand-0.8.3/src/rngs/xoshiro256plusplus.rs",
        "rand-0.8.3/src/seq/index.rs",
        "rand-0.8.3/src/seq/mod.rs",
    ],
    archive = ":rand-0.8.3--archive",
    crate = "rand",
    crate_root = "rand-0.8.3/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [
        "alloc",
        "default",
        "getrandom",
        "libc",
        "rand_chacha",
        "rand_hc",
        "small_rng",
        "std",
        "std_rng",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":libc",
        ":rand_chacha-0.3.0",
        ":rand_core-0.6.1",
    ],
)

third_party_rust_library(
    name = "rand_chacha",
    srcs = [
        "rand_chacha-0.2.2/src/chacha.rs",
        "rand_chacha-0.2.2/src/guts.rs",
        "rand_chacha-0.2.2/src/lib.rs",
    ],
    archive = ":rand_chacha-0.2.2--archive",
    crate = "rand_chacha",
    crate_root = "rand_chacha-0.2.2/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [
        "default",
        "simd",
        "std",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":ppv-lite86-0.2.9",
        ":rand_core",
    ],
)

third_party_rust_library(
    name = "rand_chacha-0.1.1",
    srcs = [
        "rand_chacha-0.1.1/src/chacha.rs",
        "rand_chacha-0.1.1/src/lib.rs",
    ],
    archive = ":rand_chacha-0.1.1--archive",
    crate = "rand_chacha",
    crate_root = "rand_chacha-0.1.1/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = [
        "--cap-lints=allow",
        "@$(location :rand_chacha-0.1.1-build-script-build-args)",
    ],
    deps = [":rand_core-0.3.1"],
)

third_party_rust_binary(
    name = "rand_chacha-0.1.1-build-script-build",
    srcs = [
        "rand_chacha-0.1.1/build.rs",
        "rand_chacha-0.1.1/src/chacha.rs",
        "rand_chacha-0.1.1/src/lib.rs",
    ],
    archive = ":rand_chacha-0.1.1--archive",
    crate = "build_script_build",
    crate_root = "rand_chacha-0.1.1/build.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [":autocfg-0.1.7"],
)

third_party_rust_library(
    name = "rand_chacha-0.3.0",
    srcs = [
        "rand_chacha-0.3.0/src/chacha.rs",
        "rand_chacha-0.3.0/src/guts.rs",
        "rand_chacha-0.3.0/src/lib.rs",
    ],
    archive = ":rand_chacha-0.3.0--archive",
    crate = "rand_chacha",
    crate_root = "rand_chacha-0.3.0/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [
        "default",
        "std",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":ppv-lite86-0.2.9",
        ":rand_core-0.6.1",
    ],
)

third_party_rust_library(
    name = "rand_core",
    srcs = [
        "rand_core-0.5.1/src/block.rs",
        "rand_core-0.5.1/src/error.rs",
        "rand_core-0.5.1/src/impls.rs",
        "rand_core-0.5.1/src/le.rs",
        "rand_core-0.5.1/src/lib.rs",
        "rand_core-0.5.1/src/os.rs",
    ],
    archive = ":rand_core-0.5.1--archive",
    crate = "rand_core",
    crate_root = "rand_core-0.5.1/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [
        "alloc",
        "getrandom",
        "std",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [":getrandom-0.1.15"],
)

third_party_rust_library(
    name = "rand_core-0.3.1",
    srcs = [
        "rand_core-0.3.1/src/block.rs",
        "rand_core-0.3.1/src/error.rs",
        "rand_core-0.3.1/src/impls.rs",
        "rand_core-0.3.1/src/le.rs",
        "rand_core-0.3.1/src/lib.rs",
    ],
    archive = ":rand_core-0.3.1--archive",
    crate = "rand_core",
    crate_root = "rand_core-0.3.1/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [
        "alloc",
        "std",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [":rand_core-0.4.2"],
)

third_party_rust_library(
    name = "rand_core-0.4.2",
    srcs = [
        "rand_core-0.4.2/src/block.rs",
        "rand_core-0.4.2/src/error.rs",
        "rand_core-0.4.2/src/impls.rs",
        "rand_core-0.4.2/src/le.rs",
        "rand_core-0.4.2/src/lib.rs",
    ],
    archive = ":rand_core-0.4.2--archive",
    crate = "rand_core",
    crate_root = "rand_core-0.4.2/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [
        "alloc",
        "std",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "rand_core-0.6.1",
    srcs = [
        "rand_core-0.6.1/src/block.rs",
        "rand_core-0.6.1/src/error.rs",
        "rand_core-0.6.1/src/impls.rs",
        "rand_core-0.6.1/src/le.rs",
        "rand_core-0.6.1/src/lib.rs",
        "rand_core-0.6.1/src/os.rs",
    ],
    archive = ":rand_core-0.6.1--archive",
    crate = "rand_core",
    crate_root = "rand_core-0.6.1/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [
        "alloc",
        "getrandom",
        "std",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [":getrandom-0.2.2"],
)

third_party_rust_library(
    name = "rand_hc-0.1.0",
    srcs = [
        "rand_hc-0.1.0/src/hc128.rs",
        "rand_hc-0.1.0/src/lib.rs",
    ],
    archive = ":rand_hc-0.1.0--archive",
    crate = "rand_hc",
    crate_root = "rand_hc-0.1.0/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [":rand_core-0.3.1"],
)

third_party_rust_library(
    name = "rand_isaac-0.1.1",
    srcs = [
        "rand_isaac-0.1.1/src/isaac.rs",
        "rand_isaac-0.1.1/src/isaac64.rs",
        "rand_isaac-0.1.1/src/isaac_array.rs",
        "rand_isaac-0.1.1/src/lib.rs",
    ],
    archive = ":rand_isaac-0.1.1--archive",
    crate = "rand_isaac",
    crate_root = "rand_isaac-0.1.1/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [":rand_core-0.3.1"],
)

third_party_rust_library(
    name = "rand_jitter-0.1.4",
    srcs = [
        "rand_jitter-0.1.4/src/dummy_log.rs",
        "rand_jitter-0.1.4/src/error.rs",
        "rand_jitter-0.1.4/src/lib.rs",
        "rand_jitter-0.1.4/src/platform.rs",
    ],
    archive = ":rand_jitter-0.1.4--archive",
    crate = "rand_jitter",
    crate_root = "rand_jitter-0.1.4/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = ["std"],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [":rand_core-0.4.2"],
)

third_party_rust_library(
    name = "rand_os-0.1.3",
    srcs = [
        "rand_os-0.1.3/src/cloudabi.rs",
        "rand_os-0.1.3/src/dragonfly_haiku_emscripten.rs",
        "rand_os-0.1.3/src/dummy_log.rs",
        "rand_os-0.1.3/src/freebsd.rs",
        "rand_os-0.1.3/src/fuchsia.rs",
        "rand_os-0.1.3/src/lib.rs",
        "rand_os-0.1.3/src/linux_android.rs",
        "rand_os-0.1.3/src/macos.rs",
        "rand_os-0.1.3/src/netbsd.rs",
        "rand_os-0.1.3/src/openbsd_bitrig.rs",
        "rand_os-0.1.3/src/random_device.rs",
        "rand_os-0.1.3/src/redox.rs",
        "rand_os-0.1.3/src/sgx.rs",
        "rand_os-0.1.3/src/solarish.rs",
        "rand_os-0.1.3/src/wasm32_bindgen.rs",
        "rand_os-0.1.3/src/wasm32_stdweb.rs",
        "rand_os-0.1.3/src/windows.rs",
    ],
    archive = ":rand_os-0.1.3--archive",
    crate = "rand_os",
    crate_root = "rand_os-0.1.3/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":libc",
        ":rand_core-0.4.2",
    ],
)

third_party_rust_library(
    name = "rand_pcg",
    srcs = [
        "rand_pcg-0.2.1/src/lib.rs",
        "rand_pcg-0.2.1/src/pcg128.rs",
        "rand_pcg-0.2.1/src/pcg64.rs",
    ],
    archive = ":rand_pcg-0.2.1--archive",
    crate = "rand_pcg",
    crate_root = "rand_pcg-0.2.1/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [
        "serde",
        "serde1",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":rand_core",
        ":serde",
    ],
)

third_party_rust_library(
    name = "rand_pcg-0.1.2",
    srcs = [
        "rand_pcg-0.1.2/src/lib.rs",
        "rand_pcg-0.1.2/src/pcg128.rs",
        "rand_pcg-0.1.2/src/pcg64.rs",
    ],
    archive = ":rand_pcg-0.1.2--archive",
    crate = "rand_pcg",
    crate_root = "rand_pcg-0.1.2/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = [
        "--cap-lints=allow",
        "@$(location :rand_pcg-0.1.2-build-script-build-args)",
    ],
    deps = [":rand_core-0.4.2"],
)

third_party_rust_binary(
    name = "rand_pcg-0.1.2-build-script-build",
    srcs = [
        "rand_pcg-0.1.2/build.rs",
        "rand_pcg-0.1.2/src/lib.rs",
        "rand_pcg-0.1.2/src/pcg128.rs",
        "rand_pcg-0.1.2/src/pcg64.rs",
        "rand_pcg-0.1.2/tests/lcg64xsh32.rs",
        "rand_pcg-0.1.2/tests/mcg128xsl64.rs",
    ],
    archive = ":rand_pcg-0.1.2--archive",
    crate = "build_script_build",
    crate_root = "rand_pcg-0.1.2/build.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [":autocfg-0.1.7"],
)

third_party_rust_library(
    name = "rand_xorshift-0.1.1",
    srcs = ["rand_xorshift-0.1.1/src/lib.rs"],
    archive = ":rand_xorshift-0.1.1--archive",
    crate = "rand_xorshift",
    crate_root = "rand_xorshift-0.1.1/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [":rand_core-0.3.1"],
)

third_party_rust_library(
    name = "rayon",
    srcs = [
        "rayon-1.5.0/src/collections/binary_heap.rs",
        "rayon-1.5.0/src/collections/btree_map.rs",
        "rayon-1.5.0/src/collections/btree_set.rs",
        "rayon-1.5.0/src/collections/hash_map.rs",
        "rayon-1.5.0/src/collections/hash_set.rs",
        "rayon-1.5.0/src/collections/linked_list.rs",
        "rayon-1.5.0/src/collections/mod.rs",
        "rayon-1.5.0/src/collections/vec_deque.rs",
        "rayon-1.5.0/src/compile_fail/cannot_collect_filtermap_data.rs",
        "rayon-1.5.0/src/compile_fail/cannot_zip_filtered_data.rs",
        "rayon-1.5.0/src/compile_fail/cell_par_iter.rs",
        "rayon-1.5.0/src/compile_fail/mod.rs",
        "rayon-1.5.0/src/compile_fail/must_use.rs",
        "rayon-1.5.0/src/compile_fail/no_send_par_iter.rs",
        "rayon-1.5.0/src/compile_fail/rc_par_iter.rs",
        "rayon-1.5.0/src/delegate.rs",
        "rayon-1.5.0/src/iter/chain.rs",
        "rayon-1.5.0/src/iter/chunks.rs",
        "rayon-1.5.0/src/iter/cloned.rs",
        "rayon-1.5.0/src/iter/collect/consumer.rs",
        "rayon-1.5.0/src/iter/collect/mod.rs",
        "rayon-1.5.0/src/iter/collect/test.rs",
        "rayon-1.5.0/src/iter/copied.rs",
        "rayon-1.5.0/src/iter/empty.rs",
        "rayon-1.5.0/src/iter/enumerate.rs",
        "rayon-1.5.0/src/iter/extend.rs",
        "rayon-1.5.0/src/iter/filter.rs",
        "rayon-1.5.0/src/iter/filter_map.rs",
        "rayon-1.5.0/src/iter/find.rs",
        "rayon-1.5.0/src/iter/find_first_last/mod.rs",
        "rayon-1.5.0/src/iter/find_first_last/test.rs",
        "rayon-1.5.0/src/iter/flat_map.rs",
        "rayon-1.5.0/src/iter/flat_map_iter.rs",
        "rayon-1.5.0/src/iter/flatten.rs",
        "rayon-1.5.0/src/iter/flatten_iter.rs",
        "rayon-1.5.0/src/iter/fold.rs",
        "rayon-1.5.0/src/iter/for_each.rs",
        "rayon-1.5.0/src/iter/from_par_iter.rs",
        "rayon-1.5.0/src/iter/inspect.rs",
        "rayon-1.5.0/src/iter/interleave.rs",
        "rayon-1.5.0/src/iter/interleave_shortest.rs",
        "rayon-1.5.0/src/iter/intersperse.rs",
        "rayon-1.5.0/src/iter/len.rs",
        "rayon-1.5.0/src/iter/map.rs",
        "rayon-1.5.0/src/iter/map_with.rs",
        "rayon-1.5.0/src/iter/mod.rs",
        "rayon-1.5.0/src/iter/multizip.rs",
        "rayon-1.5.0/src/iter/noop.rs",
        "rayon-1.5.0/src/iter/once.rs",
        "rayon-1.5.0/src/iter/panic_fuse.rs",
        "rayon-1.5.0/src/iter/par_bridge.rs",
        "rayon-1.5.0/src/iter/plumbing/mod.rs",
        "rayon-1.5.0/src/iter/positions.rs",
        "rayon-1.5.0/src/iter/product.rs",
        "rayon-1.5.0/src/iter/reduce.rs",
        "rayon-1.5.0/src/iter/repeat.rs",
        "rayon-1.5.0/src/iter/rev.rs",
        "rayon-1.5.0/src/iter/skip.rs",
        "rayon-1.5.0/src/iter/splitter.rs",
        "rayon-1.5.0/src/iter/step_by.rs",
        "rayon-1.5.0/src/iter/sum.rs",
        "rayon-1.5.0/src/iter/take.rs",
        "rayon-1.5.0/src/iter/test.rs",
        "rayon-1.5.0/src/iter/try_fold.rs",
        "rayon-1.5.0/src/iter/try_reduce.rs",
        "rayon-1.5.0/src/iter/try_reduce_with.rs",
        "rayon-1.5.0/src/iter/unzip.rs",
        "rayon-1.5.0/src/iter/update.rs",
        "rayon-1.5.0/src/iter/while_some.rs",
        "rayon-1.5.0/src/iter/zip.rs",
        "rayon-1.5.0/src/iter/zip_eq.rs",
        "rayon-1.5.0/src/lib.rs",
        "rayon-1.5.0/src/math.rs",
        "rayon-1.5.0/src/option.rs",
        "rayon-1.5.0/src/par_either.rs",
        "rayon-1.5.0/src/prelude.rs",
        "rayon-1.5.0/src/private.rs",
        "rayon-1.5.0/src/range.rs",
        "rayon-1.5.0/src/range_inclusive.rs",
        "rayon-1.5.0/src/result.rs",
        "rayon-1.5.0/src/slice/mergesort.rs",
        "rayon-1.5.0/src/slice/mod.rs",
        "rayon-1.5.0/src/slice/quicksort.rs",
        "rayon-1.5.0/src/slice/test.rs",
        "rayon-1.5.0/src/split_producer.rs",
        "rayon-1.5.0/src/str.rs",
        "rayon-1.5.0/src/string.rs",
        "rayon-1.5.0/src/vec.rs",
    ],
    archive = ":rayon-1.5.0--archive",
    crate = "rayon",
    crate_root = "rayon-1.5.0/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = [
        "--cap-lints=allow",
        "@$(location :rayon-1.5.0-build-script-build-args)",
    ],
    deps = [
        ":crossbeam-deque-0.8.0",
        ":either",
        ":rayon-core-1.9.0",
    ],
)

third_party_rust_binary(
    name = "rayon-1.5.0-build-script-build",
    srcs = ["rayon-1.5.0/build.rs"],
    archive = ":rayon-1.5.0--archive",
    crate = "build_script_build",
    crate_root = "rayon-1.5.0/build.rs",
    edition = "2018",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [":autocfg-1.0.1"],
)

third_party_rust_library(
    name = "rayon-core-1.9.0",
    srcs = [
        "rayon-core-1.9.0/src/compile_fail/mod.rs",
        "rayon-core-1.9.0/src/compile_fail/quicksort_race1.rs",
        "rayon-core-1.9.0/src/compile_fail/quicksort_race2.rs",
        "rayon-core-1.9.0/src/compile_fail/quicksort_race3.rs",
        "rayon-core-1.9.0/src/compile_fail/rc_return.rs",
        "rayon-core-1.9.0/src/compile_fail/rc_upvar.rs",
        "rayon-core-1.9.0/src/compile_fail/scope_join_bad.rs",
        "rayon-core-1.9.0/src/job.rs",
        "rayon-core-1.9.0/src/join/mod.rs",
        "rayon-core-1.9.0/src/join/test.rs",
        "rayon-core-1.9.0/src/latch.rs",
        "rayon-core-1.9.0/src/lib.rs",
        "rayon-core-1.9.0/src/log.rs",
        "rayon-core-1.9.0/src/private.rs",
        "rayon-core-1.9.0/src/registry.rs",
        "rayon-core-1.9.0/src/scope/mod.rs",
        "rayon-core-1.9.0/src/scope/test.rs",
        "rayon-core-1.9.0/src/sleep/counters.rs",
        "rayon-core-1.9.0/src/sleep/mod.rs",
        "rayon-core-1.9.0/src/spawn/mod.rs",
        "rayon-core-1.9.0/src/spawn/test.rs",
        "rayon-core-1.9.0/src/test.rs",
        "rayon-core-1.9.0/src/thread_pool/mod.rs",
        "rayon-core-1.9.0/src/thread_pool/test.rs",
        "rayon-core-1.9.0/src/unwind.rs",
        "rayon-core-1.9.0/src/util.rs",
    ],
    archive = ":rayon-core-1.9.0--archive",
    crate = "rayon_core",
    crate_root = "rayon-core-1.9.0/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":crossbeam-channel",
        ":crossbeam-deque-0.8.0",
        ":crossbeam-utils-0.8.0",
        ":lazy_static",
        ":num_cpus",
    ],
)

third_party_rust_library(
    name = "regex",
    srcs = [
        "regex-1.4.2/src/backtrack.rs",
        "regex-1.4.2/src/cache.rs",
        "regex-1.4.2/src/compile.rs",
        "regex-1.4.2/src/dfa.rs",
        "regex-1.4.2/src/error.rs",
        "regex-1.4.2/src/exec.rs",
        "regex-1.4.2/src/expand.rs",
        "regex-1.4.2/src/find_byte.rs",
        "regex-1.4.2/src/freqs.rs",
        "regex-1.4.2/src/input.rs",
        "regex-1.4.2/src/lib.rs",
        "regex-1.4.2/src/literal/imp.rs",
        "regex-1.4.2/src/literal/mod.rs",
        "regex-1.4.2/src/pattern.rs",
        "regex-1.4.2/src/pikevm.rs",
        "regex-1.4.2/src/prog.rs",
        "regex-1.4.2/src/re_builder.rs",
        "regex-1.4.2/src/re_bytes.rs",
        "regex-1.4.2/src/re_set.rs",
        "regex-1.4.2/src/re_trait.rs",
        "regex-1.4.2/src/re_unicode.rs",
        "regex-1.4.2/src/sparse.rs",
        "regex-1.4.2/src/utf8.rs",
    ],
    archive = ":regex-1.4.2--archive",
    crate = "regex",
    crate_root = "regex-1.4.2/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [
        "aho-corasick",
        "default",
        "memchr",
        "perf",
        "perf-cache",
        "perf-dfa",
        "perf-inline",
        "perf-literal",
        "std",
        "thread_local",
        "unicode",
        "unicode-age",
        "unicode-bool",
        "unicode-case",
        "unicode-gencat",
        "unicode-perl",
        "unicode-script",
        "unicode-segment",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":aho-corasick",
        ":memchr-2.4.0",
        ":regex-syntax-0.6.21",
        ":thread_local-1.0.1",
    ],
)

third_party_rust_library(
    name = "regex-syntax-0.6.21",
    srcs = [
        "regex-syntax-0.6.21/src/ast/mod.rs",
        "regex-syntax-0.6.21/src/ast/parse.rs",
        "regex-syntax-0.6.21/src/ast/print.rs",
        "regex-syntax-0.6.21/src/ast/visitor.rs",
        "regex-syntax-0.6.21/src/either.rs",
        "regex-syntax-0.6.21/src/error.rs",
        "regex-syntax-0.6.21/src/hir/interval.rs",
        "regex-syntax-0.6.21/src/hir/literal/mod.rs",
        "regex-syntax-0.6.21/src/hir/mod.rs",
        "regex-syntax-0.6.21/src/hir/print.rs",
        "regex-syntax-0.6.21/src/hir/translate.rs",
        "regex-syntax-0.6.21/src/hir/visitor.rs",
        "regex-syntax-0.6.21/src/lib.rs",
        "regex-syntax-0.6.21/src/parser.rs",
        "regex-syntax-0.6.21/src/unicode.rs",
        "regex-syntax-0.6.21/src/unicode_tables/age.rs",
        "regex-syntax-0.6.21/src/unicode_tables/case_folding_simple.rs",
        "regex-syntax-0.6.21/src/unicode_tables/general_category.rs",
        "regex-syntax-0.6.21/src/unicode_tables/grapheme_cluster_break.rs",
        "regex-syntax-0.6.21/src/unicode_tables/mod.rs",
        "regex-syntax-0.6.21/src/unicode_tables/perl_decimal.rs",
        "regex-syntax-0.6.21/src/unicode_tables/perl_space.rs",
        "regex-syntax-0.6.21/src/unicode_tables/perl_word.rs",
        "regex-syntax-0.6.21/src/unicode_tables/property_bool.rs",
        "regex-syntax-0.6.21/src/unicode_tables/property_names.rs",
        "regex-syntax-0.6.21/src/unicode_tables/property_values.rs",
        "regex-syntax-0.6.21/src/unicode_tables/script.rs",
        "regex-syntax-0.6.21/src/unicode_tables/script_extension.rs",
        "regex-syntax-0.6.21/src/unicode_tables/sentence_break.rs",
        "regex-syntax-0.6.21/src/unicode_tables/word_break.rs",
        "regex-syntax-0.6.21/src/utf8.rs",
    ],
    archive = ":regex-syntax-0.6.21--archive",
    crate = "regex_syntax",
    crate_root = "regex-syntax-0.6.21/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [
        "default",
        "unicode",
        "unicode-age",
        "unicode-bool",
        "unicode-case",
        "unicode-gencat",
        "unicode-perl",
        "unicode-script",
        "unicode-segment",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "remove_dir_all-0.5.3",
    srcs = [
        "remove_dir_all-0.5.3/src/fs.rs",
        "remove_dir_all-0.5.3/src/lib.rs",
    ],
    archive = ":remove_dir_all-0.5.3--archive",
    crate = "remove_dir_all",
    crate_root = "remove_dir_all-0.5.3/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "resolv-conf-0.7.0",
    srcs = [
        "resolv-conf-0.7.0/src/config.rs",
        "resolv-conf-0.7.0/src/grammar.rs",
        "resolv-conf-0.7.0/src/ip.rs",
        "resolv-conf-0.7.0/src/lib.rs",
    ],
    archive = ":resolv-conf-0.7.0--archive",
    crate = "resolv_conf",
    crate_root = "resolv-conf-0.7.0/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [
        "hostname",
        "system",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":hostname",
        ":quick-error-1.2.3",
    ],
)

third_party_rust_library(
    name = "ring-0.16.20",
    srcs = [
        "ring-0.16.20/src/aead.rs",
        "ring-0.16.20/src/aead/aes.rs",
        "ring-0.16.20/src/aead/aes_gcm.rs",
        "ring-0.16.20/src/aead/block.rs",
        "ring-0.16.20/src/aead/chacha.rs",
        "ring-0.16.20/src/aead/chacha20_poly1305.rs",
        "ring-0.16.20/src/aead/chacha20_poly1305_openssh.rs",
        "ring-0.16.20/src/aead/counter.rs",
        "ring-0.16.20/src/aead/gcm.rs",
        "ring-0.16.20/src/aead/gcm/gcm_nohw.rs",
        "ring-0.16.20/src/aead/iv.rs",
        "ring-0.16.20/src/aead/nonce.rs",
        "ring-0.16.20/src/aead/poly1305.rs",
        "ring-0.16.20/src/aead/quic.rs",
        "ring-0.16.20/src/aead/shift.rs",
        "ring-0.16.20/src/agreement.rs",
        "ring-0.16.20/src/arithmetic.rs",
        "ring-0.16.20/src/arithmetic/bigint.rs",
        "ring-0.16.20/src/arithmetic/constant.rs",
        "ring-0.16.20/src/arithmetic/montgomery.rs",
        "ring-0.16.20/src/bits.rs",
        "ring-0.16.20/src/bssl.rs",
        "ring-0.16.20/src/c.rs",
        "ring-0.16.20/src/constant_time.rs",
        "ring-0.16.20/src/cpu.rs",
        "ring-0.16.20/src/data/alg-rsa-encryption.der",
        "ring-0.16.20/src/debug.rs",
        "ring-0.16.20/src/digest.rs",
        "ring-0.16.20/src/digest/sha1.rs",
        "ring-0.16.20/src/digest/sha2.rs",
        "ring-0.16.20/src/ec.rs",
        "ring-0.16.20/src/ec/curve25519.rs",
        "ring-0.16.20/src/ec/curve25519/ed25519.rs",
        "ring-0.16.20/src/ec/curve25519/ed25519/ed25519_pkcs8_v2_template.der",
        "ring-0.16.20/src/ec/curve25519/ed25519/signing.rs",
        "ring-0.16.20/src/ec/curve25519/ed25519/verification.rs",
        "ring-0.16.20/src/ec/curve25519/ops.rs",
        "ring-0.16.20/src/ec/curve25519/scalar.rs",
        "ring-0.16.20/src/ec/curve25519/x25519.rs",
        "ring-0.16.20/src/ec/keys.rs",
        "ring-0.16.20/src/ec/suite_b.rs",
        "ring-0.16.20/src/ec/suite_b/curve.rs",
        "ring-0.16.20/src/ec/suite_b/ecdh.rs",
        "ring-0.16.20/src/ec/suite_b/ecdsa.rs",
        "ring-0.16.20/src/ec/suite_b/ecdsa/digest_scalar.rs",
        "ring-0.16.20/src/ec/suite_b/ecdsa/ecPublicKey_p256_pkcs8_v1_template.der",
        "ring-0.16.20/src/ec/suite_b/ecdsa/ecPublicKey_p384_pkcs8_v1_template.der",
        "ring-0.16.20/src/ec/suite_b/ecdsa/signing.rs",
        "ring-0.16.20/src/ec/suite_b/ecdsa/verification.rs",
        "ring-0.16.20/src/ec/suite_b/ops.rs",
        "ring-0.16.20/src/ec/suite_b/ops/elem.rs",
        "ring-0.16.20/src/ec/suite_b/ops/p256.rs",
        "ring-0.16.20/src/ec/suite_b/ops/p384.rs",
        "ring-0.16.20/src/ec/suite_b/private_key.rs",
        "ring-0.16.20/src/ec/suite_b/public_key.rs",
        "ring-0.16.20/src/endian.rs",
        "ring-0.16.20/src/error.rs",
        "ring-0.16.20/src/hkdf.rs",
        "ring-0.16.20/src/hmac.rs",
        "ring-0.16.20/src/io.rs",
        "ring-0.16.20/src/io/der.rs",
        "ring-0.16.20/src/io/der_writer.rs",
        "ring-0.16.20/src/io/positive.rs",
        "ring-0.16.20/src/io/writer.rs",
        "ring-0.16.20/src/lib.rs",
        "ring-0.16.20/src/limb.rs",
        "ring-0.16.20/src/pbkdf2.rs",
        "ring-0.16.20/src/pkcs8.rs",
        "ring-0.16.20/src/polyfill.rs",
        "ring-0.16.20/src/rand.rs",
        "ring-0.16.20/src/rsa.rs",
        "ring-0.16.20/src/rsa/padding.rs",
        "ring-0.16.20/src/rsa/signature_rsa_example_private_key.der",
        "ring-0.16.20/src/rsa/signing.rs",
        "ring-0.16.20/src/rsa/verification.rs",
        "ring-0.16.20/src/signature.rs",
        "ring-0.16.20/src/test.rs",
    ],
    archive = ":ring-0.16.20--archive",
    crate = "ring",
    crate_root = "ring-0.16.20/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [
        "alloc",
        "default",
        "dev_urandom_fallback",
        "once_cell",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":libc",
        ":once_cell",
        ":ring-0.16.20-ring-c-asm-elf",
        ":spin-0.5.2",
        ":untrusted-0.7.1",
    ],
)

third_party_rust_library(
    name = "rustc-demangle",
    srcs = [
        "rustc-demangle-0.1.20/src/legacy.rs",
        "rustc-demangle-0.1.20/src/lib.rs",
        "rustc-demangle-0.1.20/src/v0.rs",
    ],
    archive = ":rustc-demangle-0.1.20--archive",
    crate = "rustc_demangle",
    crate_root = "rustc-demangle-0.1.20/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "rustls",
    srcs = [
        "rustls-0.19.1/src/anchors.rs",
        "rustls-0.19.1/src/bs_debug.rs",
        "rustls-0.19.1/src/check.rs",
        "rustls-0.19.1/src/cipher.rs",
        "rustls-0.19.1/src/client/common.rs",
        "rustls-0.19.1/src/client/handy.rs",
        "rustls-0.19.1/src/client/hs.rs",
        "rustls-0.19.1/src/client/mod.rs",
        "rustls-0.19.1/src/client/tls12.rs",
        "rustls-0.19.1/src/client/tls13.rs",
        "rustls-0.19.1/src/error.rs",
        "rustls-0.19.1/src/hash_hs.rs",
        "rustls-0.19.1/src/key.rs",
        "rustls-0.19.1/src/key_schedule.rs",
        "rustls-0.19.1/src/keylog.rs",
        "rustls-0.19.1/src/lib.rs",
        "rustls-0.19.1/src/manual/features.rs",
        "rustls-0.19.1/src/manual/howto.rs",
        "rustls-0.19.1/src/manual/implvulns.rs",
        "rustls-0.19.1/src/manual/mod.rs",
        "rustls-0.19.1/src/manual/tlsvulns.rs",
        "rustls-0.19.1/src/msgs/alert.rs",
        "rustls-0.19.1/src/msgs/base.rs",
        "rustls-0.19.1/src/msgs/ccs.rs",
        "rustls-0.19.1/src/msgs/codec.rs",
        "rustls-0.19.1/src/msgs/deframer.rs",
        "rustls-0.19.1/src/msgs/enums.rs",
        "rustls-0.19.1/src/msgs/enums_test.rs",
        "rustls-0.19.1/src/msgs/fragmenter.rs",
        "rustls-0.19.1/src/msgs/handshake.rs",
        "rustls-0.19.1/src/msgs/handshake-test.1.bin",
        "rustls-0.19.1/src/msgs/handshake_test.rs",
        "rustls-0.19.1/src/msgs/hsjoiner.rs",
        "rustls-0.19.1/src/msgs/macros.rs",
        "rustls-0.19.1/src/msgs/message.rs",
        "rustls-0.19.1/src/msgs/message_test.rs",
        "rustls-0.19.1/src/msgs/mod.rs",
        "rustls-0.19.1/src/msgs/persist.rs",
        "rustls-0.19.1/src/msgs/persist_test.rs",
        "rustls-0.19.1/src/pemfile.rs",
        "rustls-0.19.1/src/prf.rs",
        "rustls-0.19.1/src/quic.rs",
        "rustls-0.19.1/src/rand.rs",
        "rustls-0.19.1/src/record_layer.rs",
        "rustls-0.19.1/src/server/common.rs",
        "rustls-0.19.1/src/server/handy.rs",
        "rustls-0.19.1/src/server/hs.rs",
        "rustls-0.19.1/src/server/mod.rs",
        "rustls-0.19.1/src/server/tls12.rs",
        "rustls-0.19.1/src/server/tls13.rs",
        "rustls-0.19.1/src/session.rs",
        "rustls-0.19.1/src/sign.rs",
        "rustls-0.19.1/src/stream.rs",
        "rustls-0.19.1/src/suites.rs",
        "rustls-0.19.1/src/testdata/cert-arstechnica.0.der",
        "rustls-0.19.1/src/testdata/cert-arstechnica.1.der",
        "rustls-0.19.1/src/testdata/cert-arstechnica.2.der",
        "rustls-0.19.1/src/testdata/cert-duckduckgo.0.der",
        "rustls-0.19.1/src/testdata/cert-duckduckgo.1.der",
        "rustls-0.19.1/src/testdata/cert-github.0.der",
        "rustls-0.19.1/src/testdata/cert-github.1.der",
        "rustls-0.19.1/src/testdata/cert-google.0.der",
        "rustls-0.19.1/src/testdata/cert-google.1.der",
        "rustls-0.19.1/src/testdata/cert-google.2.der",
        "rustls-0.19.1/src/testdata/cert-hn.0.der",
        "rustls-0.19.1/src/testdata/cert-hn.1.der",
        "rustls-0.19.1/src/testdata/cert-hn.2.der",
        "rustls-0.19.1/src/testdata/cert-reddit.0.der",
        "rustls-0.19.1/src/testdata/cert-reddit.1.der",
        "rustls-0.19.1/src/testdata/cert-rustlang.0.der",
        "rustls-0.19.1/src/testdata/cert-rustlang.1.der",
        "rustls-0.19.1/src/testdata/cert-rustlang.2.der",
        "rustls-0.19.1/src/testdata/cert-servo.0.der",
        "rustls-0.19.1/src/testdata/cert-servo.1.der",
        "rustls-0.19.1/src/testdata/cert-servo.2.der",
        "rustls-0.19.1/src/testdata/cert-stackoverflow.0.der",
        "rustls-0.19.1/src/testdata/cert-stackoverflow.1.der",
        "rustls-0.19.1/src/testdata/cert-twitter.0.der",
        "rustls-0.19.1/src/testdata/cert-twitter.1.der",
        "rustls-0.19.1/src/testdata/cert-wapo.0.der",
        "rustls-0.19.1/src/testdata/cert-wapo.1.der",
        "rustls-0.19.1/src/testdata/cert-wapo.2.der",
        "rustls-0.19.1/src/testdata/cert-wikipedia.0.der",
        "rustls-0.19.1/src/testdata/cert-wikipedia.1.der",
        "rustls-0.19.1/src/testdata/deframer-test.1.bin",
        "rustls-0.19.1/src/testdata/deframer-test.2.bin",
        "rustls-0.19.1/src/testdata/prf-result.1.bin",
        "rustls-0.19.1/src/testdata/prf-result.2.bin",
        "rustls-0.19.1/src/ticketer.rs",
        "rustls-0.19.1/src/vecbuf.rs",
        "rustls-0.19.1/src/verify.rs",
        "rustls-0.19.1/src/verifybench.rs",
        "rustls-0.19.1/src/x509.rs",
    ],
    archive = ":rustls-0.19.1--archive",
    crate = "rustls",
    crate_root = "rustls-0.19.1/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [
        "dangerous_configuration",
        "default",
        "log",
        "logging",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":base64-0.13.0",
        ":log",
        ":ring-0.16.20",
        ":sct-0.6.0",
        ":webpki-0.21.3",
    ],
)

third_party_rust_library(
    name = "rustls-native-certs",
    srcs = [
        "rustls-native-certs-0.5.0/src/lib.rs",
        "rustls-native-certs-0.5.0/src/macos.rs",
        "rustls-native-certs-0.5.0/src/rustls.rs",
        "rustls-native-certs-0.5.0/src/unix.rs",
        "rustls-native-certs-0.5.0/src/windows.rs",
    ],
    archive = ":rustls-native-certs-0.5.0--archive",
    crate = "rustls_native_certs",
    crate_root = "rustls-native-certs-0.5.0/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [
        "default",
        "rustls",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":openssl-probe-0.1.2",
        ":rustls",
    ],
)

third_party_rust_library(
    name = "rustyline",
    srcs = [
        "rustyline-7.1.0/src/command.rs",
        "rustyline-7.1.0/src/completion.rs",
        "rustyline-7.1.0/src/config.rs",
        "rustyline-7.1.0/src/edit.rs",
        "rustyline-7.1.0/src/error.rs",
        "rustyline-7.1.0/src/highlight.rs",
        "rustyline-7.1.0/src/hint.rs",
        "rustyline-7.1.0/src/history.rs",
        "rustyline-7.1.0/src/keymap.rs",
        "rustyline-7.1.0/src/keys.rs",
        "rustyline-7.1.0/src/kill_ring.rs",
        "rustyline-7.1.0/src/layout.rs",
        "rustyline-7.1.0/src/lib.rs",
        "rustyline-7.1.0/src/line_buffer.rs",
        "rustyline-7.1.0/src/test/common.rs",
        "rustyline-7.1.0/src/test/emacs.rs",
        "rustyline-7.1.0/src/test/history.rs",
        "rustyline-7.1.0/src/test/mod.rs",
        "rustyline-7.1.0/src/test/vi_cmd.rs",
        "rustyline-7.1.0/src/test/vi_insert.rs",
        "rustyline-7.1.0/src/tty/mod.rs",
        "rustyline-7.1.0/src/tty/test.rs",
        "rustyline-7.1.0/src/tty/unix.rs",
        "rustyline-7.1.0/src/tty/windows.rs",
        "rustyline-7.1.0/src/undo.rs",
        "rustyline-7.1.0/src/validate.rs",
    ],
    archive = ":rustyline-7.1.0--archive",
    crate = "rustyline",
    crate_root = "rustyline-7.1.0/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [
        "default",
        "dirs-next",
        "with-dirs",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":bitflags",
        ":cfg-if-1.0.0",
        ":dirs-next-2.0.0",
        ":fs2",
        ":libc",
        ":log",
        ":memchr-2.4.0",
        ":nix-0.19.1",
        ":unicode-segmentation",
        ":unicode-width",
        ":utf8parse-0.2.0",
    ],
)

third_party_rust_library(
    name = "ryu-1.0.5",
    srcs = [
        "ryu-1.0.5/src/buffer/mod.rs",
        "ryu-1.0.5/src/common.rs",
        "ryu-1.0.5/src/d2s.rs",
        "ryu-1.0.5/src/d2s_full_table.rs",
        "ryu-1.0.5/src/d2s_intrinsics.rs",
        "ryu-1.0.5/src/d2s_small_table.rs",
        "ryu-1.0.5/src/digit_table.rs",
        "ryu-1.0.5/src/f2s.rs",
        "ryu-1.0.5/src/f2s_intrinsics.rs",
        "ryu-1.0.5/src/lib.rs",
        "ryu-1.0.5/src/pretty/exponent.rs",
        "ryu-1.0.5/src/pretty/mantissa.rs",
        "ryu-1.0.5/src/pretty/mod.rs",
    ],
    archive = ":ryu-1.0.5--archive",
    crate = "ryu",
    crate_root = "ryu-1.0.5/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = [
        "--cap-lints=allow",
        "@$(location :ryu-1.0.5-build-script-build-args)",
    ],
    deps = [],
)

third_party_rust_binary(
    name = "ryu-1.0.5-build-script-build",
    srcs = ["ryu-1.0.5/build.rs"],
    archive = ":ryu-1.0.5--archive",
    crate = "build_script_build",
    crate_root = "ryu-1.0.5/build.rs",
    edition = "2018",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "safemem-0.3.3",
    srcs = ["safemem-0.3.3/src/lib.rs"],
    archive = ":safemem-0.3.3--archive",
    crate = "safemem",
    crate_root = "safemem-0.3.3/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [
        "default",
        "std",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "scoped-tls-1.0.0",
    srcs = ["scoped-tls-1.0.0/src/lib.rs"],
    archive = ":scoped-tls-1.0.0--archive",
    crate = "scoped_tls",
    crate_root = "scoped-tls-1.0.0/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "scopeguard",
    srcs = ["scopeguard-1.1.0/src/lib.rs"],
    archive = ":scopeguard-1.1.0--archive",
    crate = "scopeguard",
    crate_root = "scopeguard-1.1.0/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [
        "default",
        "use_std",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "scroll",
    srcs = [
        "scroll-0.10.1/src/ctx.rs",
        "scroll-0.10.1/src/endian.rs",
        "scroll-0.10.1/src/error.rs",
        "scroll-0.10.1/src/greater.rs",
        "scroll-0.10.1/src/leb128.rs",
        "scroll-0.10.1/src/lesser.rs",
        "scroll-0.10.1/src/lib.rs",
        "scroll-0.10.1/src/pread.rs",
        "scroll-0.10.1/src/pwrite.rs",
    ],
    archive = ":scroll-0.10.1--archive",
    crate = "scroll",
    crate_root = "scroll-0.10.1/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [
        "default",
        "derive",
        "scroll_derive",
        "std",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [":scroll_derive-0.10.2"],
)

third_party_rust_library(
    name = "scroll_derive-0.10.2",
    srcs = ["scroll_derive-0.10.2/src/lib.rs"],
    archive = ":scroll_derive-0.10.2--archive",
    crate = "scroll_derive",
    crate_root = "scroll_derive-0.10.2/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = True,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":proc-macro2",
        ":quote",
        ":syn",
    ],
)

third_party_rust_library(
    name = "sct-0.6.0",
    srcs = [
        "sct-0.6.0/src/lib.rs",
        "sct-0.6.0/src/testdata/ecdsa-prime256v1-pub.raw",
        "sct-0.6.0/src/testdata/ecdsa-secp384r1-pub.raw",
        "sct-0.6.0/src/testdata/ecdsa_p256-badsigalg-sct.bin",
        "sct-0.6.0/src/testdata/ecdsa_p256-basic-sct.bin",
        "sct-0.6.0/src/testdata/ecdsa_p256-future-sct.bin",
        "sct-0.6.0/src/testdata/ecdsa_p256-junk-sct.bin",
        "sct-0.6.0/src/testdata/ecdsa_p256-short-sct.bin",
        "sct-0.6.0/src/testdata/ecdsa_p256-version-sct.bin",
        "sct-0.6.0/src/testdata/ecdsa_p256-wrongcert-sct.bin",
        "sct-0.6.0/src/testdata/ecdsa_p256-wrongext-sct.bin",
        "sct-0.6.0/src/testdata/ecdsa_p256-wrongid-sct.bin",
        "sct-0.6.0/src/testdata/ecdsa_p256-wrongtime-sct.bin",
        "sct-0.6.0/src/testdata/ecdsa_p384-basic-sct.bin",
        "sct-0.6.0/src/testdata/ecdsa_p384-wrongcert-sct.bin",
        "sct-0.6.0/src/testdata/ecdsa_p384-wrongtime-sct.bin",
        "sct-0.6.0/src/testdata/google-cert.bin",
        "sct-0.6.0/src/testdata/google-pilot-pubkey.bin",
        "sct-0.6.0/src/testdata/google-sct0.bin",
        "sct-0.6.0/src/testdata/google-sct1.bin",
        "sct-0.6.0/src/testdata/rsa-2048-pub.raw",
        "sct-0.6.0/src/testdata/rsa-3072-pub.raw",
        "sct-0.6.0/src/testdata/rsa-4096-pub.raw",
        "sct-0.6.0/src/testdata/rsa2048-basic-sct.bin",
        "sct-0.6.0/src/testdata/rsa2048-wrongcert-sct.bin",
        "sct-0.6.0/src/testdata/rsa2048-wrongtime-sct.bin",
        "sct-0.6.0/src/testdata/rsa3072-basic-sct.bin",
        "sct-0.6.0/src/testdata/rsa3072-wrongcert-sct.bin",
        "sct-0.6.0/src/testdata/rsa3072-wrongtime-sct.bin",
        "sct-0.6.0/src/testdata/rsa4096-basic-sct.bin",
        "sct-0.6.0/src/testdata/rsa4096-wrongcert-sct.bin",
        "sct-0.6.0/src/testdata/rsa4096-wrongtime-sct.bin",
        "sct-0.6.0/src/testdata/symantec-log-pubkey.bin",
        "sct-0.6.0/src/tests.rs",
        "sct-0.6.0/src/tests_generated.rs",
        "sct-0.6.0/src/tests_google.rs",
    ],
    archive = ":sct-0.6.0--archive",
    crate = "sct",
    crate_root = "sct-0.6.0/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":ring-0.16.20",
        ":untrusted-0.7.1",
    ],
)

third_party_rust_library(
    name = "serde",
    srcs = [
        "serde-1.0.126/src/de/ignored_any.rs",
        "serde-1.0.126/src/de/impls.rs",
        "serde-1.0.126/src/de/mod.rs",
        "serde-1.0.126/src/de/seed.rs",
        "serde-1.0.126/src/de/utf8.rs",
        "serde-1.0.126/src/de/value.rs",
        "serde-1.0.126/src/integer128.rs",
        "serde-1.0.126/src/lib.rs",
        "serde-1.0.126/src/macros.rs",
        "serde-1.0.126/src/private/de.rs",
        "serde-1.0.126/src/private/doc.rs",
        "serde-1.0.126/src/private/mod.rs",
        "serde-1.0.126/src/private/ser.rs",
        "serde-1.0.126/src/private/size_hint.rs",
        "serde-1.0.126/src/ser/fmt.rs",
        "serde-1.0.126/src/ser/impls.rs",
        "serde-1.0.126/src/ser/impossible.rs",
        "serde-1.0.126/src/ser/mod.rs",
        "serde-1.0.126/src/std_error.rs",
    ],
    archive = ":serde-1.0.126--archive",
    crate = "serde",
    crate_root = "serde-1.0.126/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [
        "alloc",
        "default",
        "derive",
        "rc",
        "serde_derive",
        "std",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = [
        "--cap-lints=allow",
        "@$(location :serde-1.0.126-build-script-build-args)",
    ],
    deps = [":serde_derive"],
)

third_party_rust_binary(
    name = "serde-1.0.126-build-script-build",
    srcs = [
        "serde-1.0.126/build.rs",
        "serde-1.0.126/src/de/ignored_any.rs",
        "serde-1.0.126/src/de/impls.rs",
        "serde-1.0.126/src/de/mod.rs",
        "serde-1.0.126/src/de/seed.rs",
        "serde-1.0.126/src/de/utf8.rs",
        "serde-1.0.126/src/de/value.rs",
        "serde-1.0.126/src/integer128.rs",
        "serde-1.0.126/src/lib.rs",
        "serde-1.0.126/src/macros.rs",
        "serde-1.0.126/src/private/de.rs",
        "serde-1.0.126/src/private/doc.rs",
        "serde-1.0.126/src/private/mod.rs",
        "serde-1.0.126/src/private/ser.rs",
        "serde-1.0.126/src/private/size_hint.rs",
        "serde-1.0.126/src/ser/fmt.rs",
        "serde-1.0.126/src/ser/impls.rs",
        "serde-1.0.126/src/ser/impossible.rs",
        "serde-1.0.126/src/ser/mod.rs",
        "serde-1.0.126/src/std_error.rs",
    ],
    archive = ":serde-1.0.126--archive",
    crate = "build_script_build",
    crate_root = "serde-1.0.126/build.rs",
    edition = "2015",
    env = {
    },
    features = [
        "alloc",
        "default",
        "derive",
        "rc",
        "serde_derive",
        "std",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "serde_derive",
    srcs = [
        "serde_derive-1.0.126/src/bound.rs",
        "serde_derive-1.0.126/src/de.rs",
        "serde_derive-1.0.126/src/dummy.rs",
        "serde_derive-1.0.126/src/fragment.rs",
        "serde_derive-1.0.126/src/internals/ast.rs",
        "serde_derive-1.0.126/src/internals/attr.rs",
        "serde_derive-1.0.126/src/internals/case.rs",
        "serde_derive-1.0.126/src/internals/check.rs",
        "serde_derive-1.0.126/src/internals/ctxt.rs",
        "serde_derive-1.0.126/src/internals/mod.rs",
        "serde_derive-1.0.126/src/internals/receiver.rs",
        "serde_derive-1.0.126/src/internals/respan.rs",
        "serde_derive-1.0.126/src/internals/symbol.rs",
        "serde_derive-1.0.126/src/lib.rs",
        "serde_derive-1.0.126/src/pretend.rs",
        "serde_derive-1.0.126/src/ser.rs",
        "serde_derive-1.0.126/src/try.rs",
    ],
    archive = ":serde_derive-1.0.126--archive",
    crate = "serde_derive",
    crate_root = "serde_derive-1.0.126/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = ["default"],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = True,
    rustc_flags = [
        "--cap-lints=allow",
        "@$(location :serde_derive-1.0.126-build-script-build-args)",
    ],
    deps = [
        ":proc-macro2",
        ":quote",
        ":syn",
    ],
)

third_party_rust_binary(
    name = "serde_derive-1.0.126-build-script-build",
    srcs = [
        "serde_derive-1.0.126/build.rs",
        "serde_derive-1.0.126/src/bound.rs",
        "serde_derive-1.0.126/src/de.rs",
        "serde_derive-1.0.126/src/dummy.rs",
        "serde_derive-1.0.126/src/fragment.rs",
        "serde_derive-1.0.126/src/internals/ast.rs",
        "serde_derive-1.0.126/src/internals/attr.rs",
        "serde_derive-1.0.126/src/internals/case.rs",
        "serde_derive-1.0.126/src/internals/check.rs",
        "serde_derive-1.0.126/src/internals/ctxt.rs",
        "serde_derive-1.0.126/src/internals/mod.rs",
        "serde_derive-1.0.126/src/internals/receiver.rs",
        "serde_derive-1.0.126/src/internals/respan.rs",
        "serde_derive-1.0.126/src/internals/symbol.rs",
        "serde_derive-1.0.126/src/lib.rs",
        "serde_derive-1.0.126/src/pretend.rs",
        "serde_derive-1.0.126/src/ser.rs",
        "serde_derive-1.0.126/src/try.rs",
    ],
    archive = ":serde_derive-1.0.126--archive",
    crate = "build_script_build",
    crate_root = "serde_derive-1.0.126/build.rs",
    edition = "2015",
    env = {
    },
    features = ["default"],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "serde_json",
    srcs = [
        "serde_json-1.0.59/src/de.rs",
        "serde_json-1.0.59/src/error.rs",
        "serde_json-1.0.59/src/features_check/mod.rs",
        "serde_json-1.0.59/src/io/core.rs",
        "serde_json-1.0.59/src/io/mod.rs",
        "serde_json-1.0.59/src/iter.rs",
        "serde_json-1.0.59/src/lexical/algorithm.rs",
        "serde_json-1.0.59/src/lexical/bhcomp.rs",
        "serde_json-1.0.59/src/lexical/bignum.rs",
        "serde_json-1.0.59/src/lexical/cached.rs",
        "serde_json-1.0.59/src/lexical/cached_float80.rs",
        "serde_json-1.0.59/src/lexical/digit.rs",
        "serde_json-1.0.59/src/lexical/errors.rs",
        "serde_json-1.0.59/src/lexical/exponent.rs",
        "serde_json-1.0.59/src/lexical/float.rs",
        "serde_json-1.0.59/src/lexical/large_powers.rs",
        "serde_json-1.0.59/src/lexical/large_powers32.rs",
        "serde_json-1.0.59/src/lexical/large_powers64.rs",
        "serde_json-1.0.59/src/lexical/math.rs",
        "serde_json-1.0.59/src/lexical/mod.rs",
        "serde_json-1.0.59/src/lexical/num.rs",
        "serde_json-1.0.59/src/lexical/parse.rs",
        "serde_json-1.0.59/src/lexical/rounding.rs",
        "serde_json-1.0.59/src/lexical/shift.rs",
        "serde_json-1.0.59/src/lexical/small_powers.rs",
        "serde_json-1.0.59/src/lib.rs",
        "serde_json-1.0.59/src/macros.rs",
        "serde_json-1.0.59/src/map.rs",
        "serde_json-1.0.59/src/number.rs",
        "serde_json-1.0.59/src/raw.rs",
        "serde_json-1.0.59/src/read.rs",
        "serde_json-1.0.59/src/ser.rs",
        "serde_json-1.0.59/src/value/de.rs",
        "serde_json-1.0.59/src/value/from.rs",
        "serde_json-1.0.59/src/value/index.rs",
        "serde_json-1.0.59/src/value/mod.rs",
        "serde_json-1.0.59/src/value/partial_eq.rs",
        "serde_json-1.0.59/src/value/ser.rs",
    ],
    archive = ":serde_json-1.0.59--archive",
    crate = "serde_json",
    crate_root = "serde_json-1.0.59/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [
        "default",
        "float_roundtrip",
        "raw_value",
        "std",
        "unbounded_depth",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = [
        "--cap-lints=allow",
        "--cfg=limb_width_64",
    ],
    deps = [
        ":itoa-0.4.6",
        ":ryu-1.0.5",
        ":serde",
    ],
)

third_party_rust_library(
    name = "serde_test",
    srcs = [
        "serde_test-1.0.116/src/assert.rs",
        "serde_test-1.0.116/src/configure.rs",
        "serde_test-1.0.116/src/de.rs",
        "serde_test-1.0.116/src/error.rs",
        "serde_test-1.0.116/src/lib.rs",
        "serde_test-1.0.116/src/ser.rs",
        "serde_test-1.0.116/src/token.rs",
    ],
    archive = ":serde_test-1.0.116--archive",
    crate = "serde_test",
    crate_root = "serde_test-1.0.116/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [":serde"],
)

third_party_rust_library(
    name = "serde_urlencoded-0.7.0",
    srcs = [
        "serde_urlencoded-0.7.0/src/de.rs",
        "serde_urlencoded-0.7.0/src/lib.rs",
        "serde_urlencoded-0.7.0/src/ser/key.rs",
        "serde_urlencoded-0.7.0/src/ser/mod.rs",
        "serde_urlencoded-0.7.0/src/ser/pair.rs",
        "serde_urlencoded-0.7.0/src/ser/part.rs",
        "serde_urlencoded-0.7.0/src/ser/value.rs",
    ],
    archive = ":serde_urlencoded-0.7.0--archive",
    crate = "serde_urlencoded",
    crate_root = "serde_urlencoded-0.7.0/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":form_urlencoded-1.0.0",
        ":itoa-0.4.6",
        ":ryu-1.0.5",
        ":serde",
    ],
)

third_party_rust_library(
    name = "sha-1",
    srcs = [
        "sha-1-0.8.2/src/aarch64.rs",
        "sha-1-0.8.2/src/consts.rs",
        "sha-1-0.8.2/src/lib.rs",
        "sha-1-0.8.2/src/utils.rs",
    ],
    archive = ":sha-1-0.8.2--archive",
    crate = "sha1",
    crate_root = "sha-1-0.8.2/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [
        "default",
        "std",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":block-buffer-0.7.3",
        ":digest",
        ":fake-simd-0.1.2",
        ":opaque-debug-0.2.3",
    ],
)

third_party_rust_library(
    name = "sha-1-0.9.4",
    srcs = [
        "sha-1-0.9.4/src/compress.rs",
        "sha-1-0.9.4/src/compress/aarch64.rs",
        "sha-1-0.9.4/src/compress/soft.rs",
        "sha-1-0.9.4/src/compress/x86.rs",
        "sha-1-0.9.4/src/consts.rs",
        "sha-1-0.9.4/src/lib.rs",
    ],
    archive = ":sha-1-0.9.4--archive",
    crate = "sha1",
    crate_root = "sha-1-0.9.4/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [
        "default",
        "std",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":block-buffer-0.9.0",
        ":cfg-if-1.0.0",
        ":cpuid-bool-0.1.2",
        ":digest-0.9.0",
        ":opaque-debug-0.3.0",
    ],
)

third_party_rust_library(
    name = "sha2",
    srcs = [
        "sha2-0.8.2/src/aarch64.rs",
        "sha2-0.8.2/src/consts.rs",
        "sha2-0.8.2/src/lib.rs",
        "sha2-0.8.2/src/sha256.rs",
        "sha2-0.8.2/src/sha256_utils.rs",
        "sha2-0.8.2/src/sha512.rs",
        "sha2-0.8.2/src/sha512_utils.rs",
    ],
    archive = ":sha2-0.8.2--archive",
    crate = "sha2",
    crate_root = "sha2-0.8.2/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [
        "default",
        "std",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":block-buffer-0.7.3",
        ":digest",
        ":fake-simd-0.1.2",
        ":opaque-debug-0.2.3",
    ],
)

third_party_rust_library(
    name = "signal-hook-registry-1.4.0",
    srcs = [
        "signal-hook-registry-1.4.0/src/half_lock.rs",
        "signal-hook-registry-1.4.0/src/lib.rs",
    ],
    archive = ":signal-hook-registry-1.4.0--archive",
    crate = "signal_hook_registry",
    crate_root = "signal-hook-registry-1.4.0/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [":libc"],
)

third_party_rust_library(
    name = "siphasher",
    srcs = [
        "siphasher-0.3.3/src/lib.rs",
        "siphasher-0.3.3/src/sip.rs",
        "siphasher-0.3.3/src/sip128.rs",
        "siphasher-0.3.3/src/tests.rs",
        "siphasher-0.3.3/src/tests128.rs",
    ],
    archive = ":siphasher-0.3.3--archive",
    crate = "siphasher",
    crate_root = "siphasher-0.3.3/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [
        "default",
        "std",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "slab-0.4.2",
    srcs = ["slab-0.4.2/src/lib.rs"],
    archive = ":slab-0.4.2--archive",
    crate = "slab",
    crate_root = "slab-0.4.2/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "slog",
    srcs = [
        "slog-2.5.2/src/key/dynamic.rs",
        "slog-2.5.2/src/key/dynamic_nostd.rs",
        "slog-2.5.2/src/key/mod.rs",
        "slog-2.5.2/src/key/static.rs",
        "slog-2.5.2/src/lib.rs",
        "slog-2.5.2/src/tests.rs",
    ],
    archive = ":slog-2.5.2--archive",
    crate = "slog",
    crate_root = "slog-2.5.2/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [
        "default",
        "erased-serde",
        "max_level_trace",
        "nested-values",
        "std",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = [
        "--cap-lints=allow",
        "@$(location :slog-2.5.2-build-script-build-args)",
    ],
    deps = [":erased-serde"],
)

third_party_rust_binary(
    name = "slog-2.5.2-build-script-build",
    srcs = [
        "slog-2.5.2/build.rs",
        "slog-2.5.2/examples/common/mod.rs",
        "slog-2.5.2/examples/named.rs",
        "slog-2.5.2/examples/singlethread.rs",
        "slog-2.5.2/examples/struct-log-self.rs",
        "slog-2.5.2/src/key/dynamic.rs",
        "slog-2.5.2/src/key/dynamic_nostd.rs",
        "slog-2.5.2/src/key/mod.rs",
        "slog-2.5.2/src/key/static.rs",
        "slog-2.5.2/src/lib.rs",
        "slog-2.5.2/src/tests.rs",
    ],
    archive = ":slog-2.5.2--archive",
    crate = "build_script_build",
    crate_root = "slog-2.5.2/build.rs",
    edition = "2015",
    env = {
    },
    features = [
        "default",
        "erased-serde",
        "max_level_trace",
        "nested-values",
        "std",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "slog-async",
    srcs = ["slog-async-2.5.0/lib.rs"],
    archive = ":slog-async-2.5.0--archive",
    crate = "slog_async",
    crate_root = "slog-async-2.5.0/lib.rs",
    edition = "2015",
    env = {
    },
    features = ["default"],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":crossbeam-channel-0.4.4",
        ":slog",
        ":take_mut",
        ":thread_local-1.0.1",
    ],
)

third_party_rust_library(
    name = "slog-term",
    srcs = ["slog-term-2.6.0/src/lib.rs"],
    archive = ":slog-term-2.6.0--archive",
    crate = "slog_term",
    crate_root = "slog-term-2.6.0/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":atty",
        ":chrono",
        ":slog",
        ":term-0.6.1",
        ":thread_local-1.0.1",
    ],
)

third_party_rust_library(
    name = "slog_glog_fmt",
    srcs = [
        "shed/slog_glog_fmt/src/collector_serializer.rs",
        "shed/slog_glog_fmt/src/glog_format.rs",
        "shed/slog_glog_fmt/src/kv_categorizer.rs",
        "shed/slog_glog_fmt/src/kv_defaults.rs",
        "shed/slog_glog_fmt/src/lib.rs",
    ],
    archive = None,
    crate = None,
    crate_root = "shed/slog_glog_fmt/src/lib.rs",
    edition = None,
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = [
        "-Aunused_braces",
        "-Wbare_trait_objects",
        "-Wellipsis_inclusive_range_patterns",
        "-Dnon_fmt_panic",
        "-Dunconditional_recursion",
    ],
    deps = [
        ":anyhow",
        ":chrono",
        ":failure_ext",
        ":hostname",
        ":itertools",
        ":nix",
        ":slog",
        ":slog-term",
    ],
)

third_party_rust_library(
    name = "smallvec",
    srcs = [
        "smallvec-1.6.1/src/lib.rs",
        "smallvec-1.6.1/src/specialization.rs",
        "smallvec-1.6.1/src/tests.rs",
    ],
    archive = ":smallvec-1.6.1--archive",
    crate = "smallvec",
    crate_root = "smallvec-1.6.1/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [
        "const_generics",
        "serde",
        "specialization",
        "union",
        "write",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [":serde"],
)

third_party_rust_library(
    name = "socket2-0.4.0",
    srcs = [
        "socket2-0.4.0/src/lib.rs",
        "socket2-0.4.0/src/sockaddr.rs",
        "socket2-0.4.0/src/socket.rs",
        "socket2-0.4.0/src/sockref.rs",
        "socket2-0.4.0/src/sys/unix.rs",
        "socket2-0.4.0/src/sys/windows.rs",
    ],
    archive = ":socket2-0.4.0--archive",
    crate = "socket2",
    crate_root = "socket2-0.4.0/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = ["all"],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [":libc"],
)

third_party_rust_library(
    name = "spin-0.5.2",
    srcs = [
        "spin-0.5.2/src/lib.rs",
        "spin-0.5.2/src/mutex.rs",
        "spin-0.5.2/src/once.rs",
        "spin-0.5.2/src/rw_lock.rs",
    ],
    archive = ":spin-0.5.2--archive",
    crate = "spin",
    crate_root = "spin-0.5.2/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "stable_deref_trait",
    srcs = ["stable_deref_trait-1.2.0/src/lib.rs"],
    archive = ":stable_deref_trait-1.2.0--archive",
    crate = "stable_deref_trait",
    crate_root = "stable_deref_trait-1.2.0/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [
        "alloc",
        "default",
        "std",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "static_assertions",
    srcs = [
        "static_assertions-1.1.0/src/assert_cfg.rs",
        "static_assertions-1.1.0/src/assert_eq_align.rs",
        "static_assertions-1.1.0/src/assert_eq_size.rs",
        "static_assertions-1.1.0/src/assert_fields.rs",
        "static_assertions-1.1.0/src/assert_impl.rs",
        "static_assertions-1.1.0/src/assert_obj_safe.rs",
        "static_assertions-1.1.0/src/assert_trait.rs",
        "static_assertions-1.1.0/src/assert_type.rs",
        "static_assertions-1.1.0/src/const_assert.rs",
        "static_assertions-1.1.0/src/lib.rs",
    ],
    archive = ":static_assertions-1.1.0--archive",
    crate = "static_assertions",
    crate_root = "static_assertions-1.1.0/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "string_cache",
    srcs = [
        "string_cache-0.8.0/src/atom.rs",
        "string_cache-0.8.0/src/dynamic_set.rs",
        "string_cache-0.8.0/src/lib.rs",
        "string_cache-0.8.0/src/static_sets.rs",
        "string_cache-0.8.0/src/trivial_impls.rs",
    ],
    archive = ":string_cache-0.8.0--archive",
    crate = "string_cache",
    crate_root = "string_cache-0.8.0/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":lazy_static",
        ":new_debug_unreachable-1.0.4",
        ":phf_shared-0.8.0",
        ":precomputed-hash-0.1.1",
        ":serde",
    ],
)

third_party_rust_library(
    name = "strsim-0.8.0",
    srcs = ["strsim-0.8.0/src/lib.rs"],
    archive = ":strsim-0.8.0--archive",
    crate = "strsim",
    crate_root = "strsim-0.8.0/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "strsim-0.9.3",
    srcs = ["strsim-0.9.3/src/lib.rs"],
    archive = ":strsim-0.9.3--archive",
    crate = "strsim",
    crate_root = "strsim-0.9.3/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "structopt",
    srcs = ["structopt-0.3.21/src/lib.rs"],
    archive = ":structopt-0.3.21--archive",
    crate = "structopt",
    crate_root = "structopt-0.3.21/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = ["default"],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":clap",
        ":lazy_static",
        ":structopt-derive",
    ],
)

third_party_rust_library(
    name = "structopt-derive",
    srcs = [
        "structopt-derive-0.4.14/src/attrs.rs",
        "structopt-derive-0.4.14/src/doc_comments.rs",
        "structopt-derive-0.4.14/src/lib.rs",
        "structopt-derive-0.4.14/src/parse.rs",
        "structopt-derive-0.4.14/src/spanned.rs",
        "structopt-derive-0.4.14/src/ty.rs",
    ],
    archive = ":structopt-derive-0.4.14--archive",
    crate = "structopt_derive",
    crate_root = "structopt-derive-0.4.14/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = True,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":heck",
        ":proc-macro-error",
        ":proc-macro2",
        ":quote",
        ":syn",
    ],
)

third_party_rust_library(
    name = "syn",
    srcs = [
        "syn-1.0.73/src/attr.rs",
        "syn-1.0.73/src/await.rs",
        "syn-1.0.73/src/bigint.rs",
        "syn-1.0.73/src/buffer.rs",
        "syn-1.0.73/src/custom_keyword.rs",
        "syn-1.0.73/src/custom_punctuation.rs",
        "syn-1.0.73/src/data.rs",
        "syn-1.0.73/src/derive.rs",
        "syn-1.0.73/src/discouraged.rs",
        "syn-1.0.73/src/error.rs",
        "syn-1.0.73/src/export.rs",
        "syn-1.0.73/src/expr.rs",
        "syn-1.0.73/src/ext.rs",
        "syn-1.0.73/src/file.rs",
        "syn-1.0.73/src/gen/clone.rs",
        "syn-1.0.73/src/gen/debug.rs",
        "syn-1.0.73/src/gen/eq.rs",
        "syn-1.0.73/src/gen/fold.rs",
        "syn-1.0.73/src/gen/hash.rs",
        "syn-1.0.73/src/gen/visit.rs",
        "syn-1.0.73/src/gen/visit_mut.rs",
        "syn-1.0.73/src/gen_helper.rs",
        "syn-1.0.73/src/generics.rs",
        "syn-1.0.73/src/group.rs",
        "syn-1.0.73/src/ident.rs",
        "syn-1.0.73/src/item.rs",
        "syn-1.0.73/src/lib.rs",
        "syn-1.0.73/src/lifetime.rs",
        "syn-1.0.73/src/lit.rs",
        "syn-1.0.73/src/lookahead.rs",
        "syn-1.0.73/src/mac.rs",
        "syn-1.0.73/src/macros.rs",
        "syn-1.0.73/src/op.rs",
        "syn-1.0.73/src/parse.rs",
        "syn-1.0.73/src/parse_macro_input.rs",
        "syn-1.0.73/src/parse_quote.rs",
        "syn-1.0.73/src/pat.rs",
        "syn-1.0.73/src/path.rs",
        "syn-1.0.73/src/print.rs",
        "syn-1.0.73/src/punctuated.rs",
        "syn-1.0.73/src/reserved.rs",
        "syn-1.0.73/src/sealed.rs",
        "syn-1.0.73/src/span.rs",
        "syn-1.0.73/src/spanned.rs",
        "syn-1.0.73/src/stmt.rs",
        "syn-1.0.73/src/thread.rs",
        "syn-1.0.73/src/token.rs",
        "syn-1.0.73/src/tt.rs",
        "syn-1.0.73/src/ty.rs",
        "syn-1.0.73/src/verbatim.rs",
        "syn-1.0.73/src/whitespace.rs",
    ],
    archive = ":syn-1.0.73--archive",
    crate = "syn",
    crate_root = "syn-1.0.73/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [
        "clone-impls",
        "default",
        "derive",
        "extra-traits",
        "fold",
        "full",
        "parsing",
        "printing",
        "proc-macro",
        "quote",
        "visit",
        "visit-mut",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = [
        "--cap-lints=allow",
        "@$(location :syn-1.0.73-build-script-build-args)",
    ],
    deps = [
        ":proc-macro2",
        ":quote",
        ":unicode-xid-0.2.1",
    ],
)

third_party_rust_binary(
    name = "syn-1.0.73-build-script-build",
    srcs = ["syn-1.0.73/build.rs"],
    archive = ":syn-1.0.73--archive",
    crate = "build_script_build",
    crate_root = "syn-1.0.73/build.rs",
    edition = "2018",
    env = {
    },
    features = [
        "clone-impls",
        "default",
        "derive",
        "extra-traits",
        "fold",
        "full",
        "parsing",
        "printing",
        "proc-macro",
        "quote",
        "visit",
        "visit-mut",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "synstructure",
    srcs = [
        "synstructure-0.12.4/src/lib.rs",
        "synstructure-0.12.4/src/macros.rs",
    ],
    archive = ":synstructure-0.12.4--archive",
    crate = "synstructure",
    crate_root = "synstructure-0.12.4/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [
        "default",
        "proc-macro",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":proc-macro2",
        ":quote",
        ":syn",
        ":unicode-xid-0.2.1",
    ],
)

third_party_rust_library(
    name = "take_mut",
    srcs = [
        "take_mut-0.2.2/src/lib.rs",
        "take_mut-0.2.2/src/scoped.rs",
    ],
    archive = ":take_mut-0.2.2--archive",
    crate = "take_mut",
    crate_root = "take_mut-0.2.2/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "tempfile",
    srcs = [
        "tempfile-3.1.0/src/dir.rs",
        "tempfile-3.1.0/src/error.rs",
        "tempfile-3.1.0/src/file/imp/mod.rs",
        "tempfile-3.1.0/src/file/imp/other.rs",
        "tempfile-3.1.0/src/file/imp/unix.rs",
        "tempfile-3.1.0/src/file/imp/windows.rs",
        "tempfile-3.1.0/src/file/mod.rs",
        "tempfile-3.1.0/src/lib.rs",
        "tempfile-3.1.0/src/spooled.rs",
        "tempfile-3.1.0/src/util.rs",
    ],
    archive = ":tempfile-3.1.0--archive",
    crate = "tempfile",
    crate_root = "tempfile-3.1.0/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":cfg-if",
        ":libc",
        ":rand",
        ":remove_dir_all-0.5.3",
    ],
)

third_party_rust_library(
    name = "term-0.5.2",
    srcs = [
        "term-0.5.2/src/lib.rs",
        "term-0.5.2/src/terminfo/mod.rs",
        "term-0.5.2/src/terminfo/parm.rs",
        "term-0.5.2/src/terminfo/parser/compiled.rs",
        "term-0.5.2/src/terminfo/parser/names.rs",
        "term-0.5.2/src/terminfo/searcher.rs",
        "term-0.5.2/src/win.rs",
    ],
    archive = ":term-0.5.2--archive",
    crate = "term",
    crate_root = "term-0.5.2/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = ["default"],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":byteorder",
        ":dirs-1.0.5",
    ],
)

third_party_rust_library(
    name = "term-0.6.1",
    srcs = [
        "term-0.6.1/src/lib.rs",
        "term-0.6.1/src/terminfo/mod.rs",
        "term-0.6.1/src/terminfo/parm.rs",
        "term-0.6.1/src/terminfo/parser/compiled.rs",
        "term-0.6.1/src/terminfo/parser/names.rs",
        "term-0.6.1/src/terminfo/searcher.rs",
        "term-0.6.1/src/win.rs",
    ],
    archive = ":term-0.6.1--archive",
    crate = "term",
    crate_root = "term-0.6.1/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = ["default"],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [":dirs"],
)

third_party_rust_library(
    name = "term_size",
    srcs = [
        "term_size-0.3.2/src/lib.rs",
        "term_size-0.3.2/src/platform/mod.rs",
        "term_size-0.3.2/src/platform/unix.rs",
        "term_size-0.3.2/src/platform/unsupported.rs",
        "term_size-0.3.2/src/platform/windows.rs",
    ],
    archive = ":term_size-0.3.2--archive",
    crate = "term_size",
    crate_root = "term_size-0.3.2/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = ["default"],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [":libc"],
)

third_party_rust_library(
    name = "textwrap",
    srcs = [
        "textwrap-0.11.0/src/indentation.rs",
        "textwrap-0.11.0/src/lib.rs",
        "textwrap-0.11.0/src/splitting.rs",
    ],
    archive = ":textwrap-0.11.0--archive",
    crate = "textwrap",
    crate_root = "textwrap-0.11.0/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = ["term_size"],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":term_size",
        ":unicode-width",
    ],
)

third_party_rust_library(
    name = "thiserror",
    srcs = [
        "thiserror-1.0.23/src/aserror.rs",
        "thiserror-1.0.23/src/display.rs",
        "thiserror-1.0.23/src/lib.rs",
    ],
    archive = ":thiserror-1.0.23--archive",
    crate = "thiserror",
    crate_root = "thiserror-1.0.23/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [":thiserror-impl-1.0.23"],
)

third_party_rust_library(
    name = "thiserror-impl-1.0.23",
    srcs = [
        "thiserror-impl-1.0.23/src/ast.rs",
        "thiserror-impl-1.0.23/src/attr.rs",
        "thiserror-impl-1.0.23/src/expand.rs",
        "thiserror-impl-1.0.23/src/fmt.rs",
        "thiserror-impl-1.0.23/src/lib.rs",
        "thiserror-impl-1.0.23/src/prop.rs",
        "thiserror-impl-1.0.23/src/valid.rs",
    ],
    archive = ":thiserror-impl-1.0.23--archive",
    crate = "thiserror_impl",
    crate_root = "thiserror-impl-1.0.23/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = True,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":proc-macro2",
        ":quote",
        ":syn",
    ],
)

third_party_rust_library(
    name = "thread_local-1.0.1",
    srcs = [
        "thread_local-1.0.1/src/cached.rs",
        "thread_local-1.0.1/src/lib.rs",
        "thread_local-1.0.1/src/thread_id.rs",
        "thread_local-1.0.1/src/unreachable.rs",
    ],
    archive = ":thread_local-1.0.1--archive",
    crate = "thread_local",
    crate_root = "thread_local-1.0.1/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [":lazy_static"],
)

third_party_rust_library(
    name = "time-01",
    srcs = [
        "time-0.1.44/src/display.rs",
        "time-0.1.44/src/duration.rs",
        "time-0.1.44/src/lib.rs",
        "time-0.1.44/src/parse.rs",
        "time-0.1.44/src/sys.rs",
    ],
    archive = ":time-0.1.44--archive",
    crate = "time",
    crate_root = "time-0.1.44/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [":libc"],
)

third_party_rust_library(
    name = "tinyvec-0.3.4",
    srcs = [
        "tinyvec-0.3.4/src/array.rs",
        "tinyvec-0.3.4/src/arrayvec.rs",
        "tinyvec-0.3.4/src/lib.rs",
        "tinyvec-0.3.4/src/tinyvec.rs",
    ],
    archive = ":tinyvec-0.3.4--archive",
    crate = "tinyvec",
    crate_root = "tinyvec-0.3.4/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [
        "alloc",
        "default",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "tokio",
    srcs = [
        "tokio-1.7.1/src/blocking.rs",
        "tokio-1.7.1/src/coop.rs",
        "tokio-1.7.1/src/doc/mod.rs",
        "tokio-1.7.1/src/doc/os.rs",
        "tokio-1.7.1/src/doc/winapi.rs",
        "tokio-1.7.1/src/fs/canonicalize.rs",
        "tokio-1.7.1/src/fs/copy.rs",
        "tokio-1.7.1/src/fs/create_dir.rs",
        "tokio-1.7.1/src/fs/create_dir_all.rs",
        "tokio-1.7.1/src/fs/dir_builder.rs",
        "tokio-1.7.1/src/fs/file.rs",
        "tokio-1.7.1/src/fs/hard_link.rs",
        "tokio-1.7.1/src/fs/metadata.rs",
        "tokio-1.7.1/src/fs/mod.rs",
        "tokio-1.7.1/src/fs/open_options.rs",
        "tokio-1.7.1/src/fs/read.rs",
        "tokio-1.7.1/src/fs/read_dir.rs",
        "tokio-1.7.1/src/fs/read_link.rs",
        "tokio-1.7.1/src/fs/read_to_string.rs",
        "tokio-1.7.1/src/fs/remove_dir.rs",
        "tokio-1.7.1/src/fs/remove_dir_all.rs",
        "tokio-1.7.1/src/fs/remove_file.rs",
        "tokio-1.7.1/src/fs/rename.rs",
        "tokio-1.7.1/src/fs/set_permissions.rs",
        "tokio-1.7.1/src/fs/symlink.rs",
        "tokio-1.7.1/src/fs/symlink_dir.rs",
        "tokio-1.7.1/src/fs/symlink_file.rs",
        "tokio-1.7.1/src/fs/symlink_metadata.rs",
        "tokio-1.7.1/src/fs/write.rs",
        "tokio-1.7.1/src/future/block_on.rs",
        "tokio-1.7.1/src/future/maybe_done.rs",
        "tokio-1.7.1/src/future/mod.rs",
        "tokio-1.7.1/src/future/poll_fn.rs",
        "tokio-1.7.1/src/future/ready.rs",
        "tokio-1.7.1/src/future/trace.rs",
        "tokio-1.7.1/src/future/try_join.rs",
        "tokio-1.7.1/src/io/async_buf_read.rs",
        "tokio-1.7.1/src/io/async_fd.rs",
        "tokio-1.7.1/src/io/async_read.rs",
        "tokio-1.7.1/src/io/async_seek.rs",
        "tokio-1.7.1/src/io/async_write.rs",
        "tokio-1.7.1/src/io/blocking.rs",
        "tokio-1.7.1/src/io/driver/interest.rs",
        "tokio-1.7.1/src/io/driver/mod.rs",
        "tokio-1.7.1/src/io/driver/platform.rs",
        "tokio-1.7.1/src/io/driver/ready.rs",
        "tokio-1.7.1/src/io/driver/registration.rs",
        "tokio-1.7.1/src/io/driver/scheduled_io.rs",
        "tokio-1.7.1/src/io/mod.rs",
        "tokio-1.7.1/src/io/poll_evented.rs",
        "tokio-1.7.1/src/io/read_buf.rs",
        "tokio-1.7.1/src/io/seek.rs",
        "tokio-1.7.1/src/io/split.rs",
        "tokio-1.7.1/src/io/stderr.rs",
        "tokio-1.7.1/src/io/stdin.rs",
        "tokio-1.7.1/src/io/stdio_common.rs",
        "tokio-1.7.1/src/io/stdout.rs",
        "tokio-1.7.1/src/io/util/async_buf_read_ext.rs",
        "tokio-1.7.1/src/io/util/async_read_ext.rs",
        "tokio-1.7.1/src/io/util/async_seek_ext.rs",
        "tokio-1.7.1/src/io/util/async_write_ext.rs",
        "tokio-1.7.1/src/io/util/buf_reader.rs",
        "tokio-1.7.1/src/io/util/buf_stream.rs",
        "tokio-1.7.1/src/io/util/buf_writer.rs",
        "tokio-1.7.1/src/io/util/chain.rs",
        "tokio-1.7.1/src/io/util/copy.rs",
        "tokio-1.7.1/src/io/util/copy_bidirectional.rs",
        "tokio-1.7.1/src/io/util/copy_buf.rs",
        "tokio-1.7.1/src/io/util/empty.rs",
        "tokio-1.7.1/src/io/util/flush.rs",
        "tokio-1.7.1/src/io/util/lines.rs",
        "tokio-1.7.1/src/io/util/mem.rs",
        "tokio-1.7.1/src/io/util/mod.rs",
        "tokio-1.7.1/src/io/util/read.rs",
        "tokio-1.7.1/src/io/util/read_buf.rs",
        "tokio-1.7.1/src/io/util/read_exact.rs",
        "tokio-1.7.1/src/io/util/read_int.rs",
        "tokio-1.7.1/src/io/util/read_line.rs",
        "tokio-1.7.1/src/io/util/read_to_end.rs",
        "tokio-1.7.1/src/io/util/read_to_string.rs",
        "tokio-1.7.1/src/io/util/read_until.rs",
        "tokio-1.7.1/src/io/util/repeat.rs",
        "tokio-1.7.1/src/io/util/shutdown.rs",
        "tokio-1.7.1/src/io/util/sink.rs",
        "tokio-1.7.1/src/io/util/split.rs",
        "tokio-1.7.1/src/io/util/take.rs",
        "tokio-1.7.1/src/io/util/vec_with_initialized.rs",
        "tokio-1.7.1/src/io/util/write.rs",
        "tokio-1.7.1/src/io/util/write_all.rs",
        "tokio-1.7.1/src/io/util/write_all_buf.rs",
        "tokio-1.7.1/src/io/util/write_buf.rs",
        "tokio-1.7.1/src/io/util/write_int.rs",
        "tokio-1.7.1/src/io/util/write_vectored.rs",
        "tokio-1.7.1/src/lib.rs",
        "tokio-1.7.1/src/loom/mocked.rs",
        "tokio-1.7.1/src/loom/mod.rs",
        "tokio-1.7.1/src/loom/std/atomic_ptr.rs",
        "tokio-1.7.1/src/loom/std/atomic_u16.rs",
        "tokio-1.7.1/src/loom/std/atomic_u32.rs",
        "tokio-1.7.1/src/loom/std/atomic_u64.rs",
        "tokio-1.7.1/src/loom/std/atomic_u8.rs",
        "tokio-1.7.1/src/loom/std/atomic_usize.rs",
        "tokio-1.7.1/src/loom/std/mod.rs",
        "tokio-1.7.1/src/loom/std/mutex.rs",
        "tokio-1.7.1/src/loom/std/parking_lot.rs",
        "tokio-1.7.1/src/loom/std/unsafe_cell.rs",
        "tokio-1.7.1/src/macros/cfg.rs",
        "tokio-1.7.1/src/macros/join.rs",
        "tokio-1.7.1/src/macros/loom.rs",
        "tokio-1.7.1/src/macros/mod.rs",
        "tokio-1.7.1/src/macros/pin.rs",
        "tokio-1.7.1/src/macros/ready.rs",
        "tokio-1.7.1/src/macros/scoped_tls.rs",
        "tokio-1.7.1/src/macros/select.rs",
        "tokio-1.7.1/src/macros/support.rs",
        "tokio-1.7.1/src/macros/thread_local.rs",
        "tokio-1.7.1/src/macros/try_join.rs",
        "tokio-1.7.1/src/net/addr.rs",
        "tokio-1.7.1/src/net/lookup_host.rs",
        "tokio-1.7.1/src/net/mod.rs",
        "tokio-1.7.1/src/net/tcp/listener.rs",
        "tokio-1.7.1/src/net/tcp/mod.rs",
        "tokio-1.7.1/src/net/tcp/socket.rs",
        "tokio-1.7.1/src/net/tcp/split.rs",
        "tokio-1.7.1/src/net/tcp/split_owned.rs",
        "tokio-1.7.1/src/net/tcp/stream.rs",
        "tokio-1.7.1/src/net/udp.rs",
        "tokio-1.7.1/src/net/unix/datagram/mod.rs",
        "tokio-1.7.1/src/net/unix/datagram/socket.rs",
        "tokio-1.7.1/src/net/unix/listener.rs",
        "tokio-1.7.1/src/net/unix/mod.rs",
        "tokio-1.7.1/src/net/unix/socketaddr.rs",
        "tokio-1.7.1/src/net/unix/split.rs",
        "tokio-1.7.1/src/net/unix/split_owned.rs",
        "tokio-1.7.1/src/net/unix/stream.rs",
        "tokio-1.7.1/src/net/unix/ucred.rs",
        "tokio-1.7.1/src/net/windows/mod.rs",
        "tokio-1.7.1/src/net/windows/named_pipe.rs",
        "tokio-1.7.1/src/park/either.rs",
        "tokio-1.7.1/src/park/mod.rs",
        "tokio-1.7.1/src/park/thread.rs",
        "tokio-1.7.1/src/process/kill.rs",
        "tokio-1.7.1/src/process/mod.rs",
        "tokio-1.7.1/src/process/unix/driver.rs",
        "tokio-1.7.1/src/process/unix/mod.rs",
        "tokio-1.7.1/src/process/unix/orphan.rs",
        "tokio-1.7.1/src/process/unix/reap.rs",
        "tokio-1.7.1/src/process/windows.rs",
        "tokio-1.7.1/src/runtime/basic_scheduler.rs",
        "tokio-1.7.1/src/runtime/blocking/mod.rs",
        "tokio-1.7.1/src/runtime/blocking/pool.rs",
        "tokio-1.7.1/src/runtime/blocking/schedule.rs",
        "tokio-1.7.1/src/runtime/blocking/shutdown.rs",
        "tokio-1.7.1/src/runtime/blocking/task.rs",
        "tokio-1.7.1/src/runtime/builder.rs",
        "tokio-1.7.1/src/runtime/context.rs",
        "tokio-1.7.1/src/runtime/driver.rs",
        "tokio-1.7.1/src/runtime/enter.rs",
        "tokio-1.7.1/src/runtime/handle.rs",
        "tokio-1.7.1/src/runtime/mod.rs",
        "tokio-1.7.1/src/runtime/park.rs",
        "tokio-1.7.1/src/runtime/queue.rs",
        "tokio-1.7.1/src/runtime/shell.rs",
        "tokio-1.7.1/src/runtime/spawner.rs",
        "tokio-1.7.1/src/runtime/task/core.rs",
        "tokio-1.7.1/src/runtime/task/error.rs",
        "tokio-1.7.1/src/runtime/task/harness.rs",
        "tokio-1.7.1/src/runtime/task/join.rs",
        "tokio-1.7.1/src/runtime/task/mod.rs",
        "tokio-1.7.1/src/runtime/task/raw.rs",
        "tokio-1.7.1/src/runtime/task/stack.rs",
        "tokio-1.7.1/src/runtime/task/state.rs",
        "tokio-1.7.1/src/runtime/task/waker.rs",
        "tokio-1.7.1/src/runtime/tests/loom_basic_scheduler.rs",
        "tokio-1.7.1/src/runtime/tests/loom_blocking.rs",
        "tokio-1.7.1/src/runtime/tests/loom_oneshot.rs",
        "tokio-1.7.1/src/runtime/tests/loom_pool.rs",
        "tokio-1.7.1/src/runtime/tests/loom_queue.rs",
        "tokio-1.7.1/src/runtime/tests/loom_shutdown_join.rs",
        "tokio-1.7.1/src/runtime/tests/mod.rs",
        "tokio-1.7.1/src/runtime/tests/queue.rs",
        "tokio-1.7.1/src/runtime/tests/task.rs",
        "tokio-1.7.1/src/runtime/thread_pool/atomic_cell.rs",
        "tokio-1.7.1/src/runtime/thread_pool/idle.rs",
        "tokio-1.7.1/src/runtime/thread_pool/mod.rs",
        "tokio-1.7.1/src/runtime/thread_pool/worker.rs",
        "tokio-1.7.1/src/signal/ctrl_c.rs",
        "tokio-1.7.1/src/signal/mod.rs",
        "tokio-1.7.1/src/signal/registry.rs",
        "tokio-1.7.1/src/signal/reusable_box.rs",
        "tokio-1.7.1/src/signal/unix.rs",
        "tokio-1.7.1/src/signal/unix/driver.rs",
        "tokio-1.7.1/src/signal/windows.rs",
        "tokio-1.7.1/src/sync/barrier.rs",
        "tokio-1.7.1/src/sync/batch_semaphore.rs",
        "tokio-1.7.1/src/sync/broadcast.rs",
        "tokio-1.7.1/src/sync/mod.rs",
        "tokio-1.7.1/src/sync/mpsc/block.rs",
        "tokio-1.7.1/src/sync/mpsc/bounded.rs",
        "tokio-1.7.1/src/sync/mpsc/chan.rs",
        "tokio-1.7.1/src/sync/mpsc/error.rs",
        "tokio-1.7.1/src/sync/mpsc/list.rs",
        "tokio-1.7.1/src/sync/mpsc/mod.rs",
        "tokio-1.7.1/src/sync/mpsc/unbounded.rs",
        "tokio-1.7.1/src/sync/mutex.rs",
        "tokio-1.7.1/src/sync/notify.rs",
        "tokio-1.7.1/src/sync/once_cell.rs",
        "tokio-1.7.1/src/sync/oneshot.rs",
        "tokio-1.7.1/src/sync/rwlock.rs",
        "tokio-1.7.1/src/sync/rwlock/owned_read_guard.rs",
        "tokio-1.7.1/src/sync/rwlock/owned_write_guard.rs",
        "tokio-1.7.1/src/sync/rwlock/owned_write_guard_mapped.rs",
        "tokio-1.7.1/src/sync/rwlock/read_guard.rs",
        "tokio-1.7.1/src/sync/rwlock/write_guard.rs",
        "tokio-1.7.1/src/sync/rwlock/write_guard_mapped.rs",
        "tokio-1.7.1/src/sync/semaphore.rs",
        "tokio-1.7.1/src/sync/task/atomic_waker.rs",
        "tokio-1.7.1/src/sync/task/mod.rs",
        "tokio-1.7.1/src/sync/tests/atomic_waker.rs",
        "tokio-1.7.1/src/sync/tests/loom_atomic_waker.rs",
        "tokio-1.7.1/src/sync/tests/loom_broadcast.rs",
        "tokio-1.7.1/src/sync/tests/loom_list.rs",
        "tokio-1.7.1/src/sync/tests/loom_mpsc.rs",
        "tokio-1.7.1/src/sync/tests/loom_notify.rs",
        "tokio-1.7.1/src/sync/tests/loom_oneshot.rs",
        "tokio-1.7.1/src/sync/tests/loom_rwlock.rs",
        "tokio-1.7.1/src/sync/tests/loom_semaphore_batch.rs",
        "tokio-1.7.1/src/sync/tests/loom_watch.rs",
        "tokio-1.7.1/src/sync/tests/mod.rs",
        "tokio-1.7.1/src/sync/tests/semaphore_batch.rs",
        "tokio-1.7.1/src/sync/watch.rs",
        "tokio-1.7.1/src/task/blocking.rs",
        "tokio-1.7.1/src/task/local.rs",
        "tokio-1.7.1/src/task/mod.rs",
        "tokio-1.7.1/src/task/spawn.rs",
        "tokio-1.7.1/src/task/task_local.rs",
        "tokio-1.7.1/src/task/unconstrained.rs",
        "tokio-1.7.1/src/task/yield_now.rs",
        "tokio-1.7.1/src/time/clock.rs",
        "tokio-1.7.1/src/time/driver/entry.rs",
        "tokio-1.7.1/src/time/driver/handle.rs",
        "tokio-1.7.1/src/time/driver/mod.rs",
        "tokio-1.7.1/src/time/driver/sleep.rs",
        "tokio-1.7.1/src/time/driver/tests/mod.rs",
        "tokio-1.7.1/src/time/driver/wheel/level.rs",
        "tokio-1.7.1/src/time/driver/wheel/mod.rs",
        "tokio-1.7.1/src/time/driver/wheel/stack.rs",
        "tokio-1.7.1/src/time/error.rs",
        "tokio-1.7.1/src/time/instant.rs",
        "tokio-1.7.1/src/time/interval.rs",
        "tokio-1.7.1/src/time/mod.rs",
        "tokio-1.7.1/src/time/tests/mod.rs",
        "tokio-1.7.1/src/time/tests/test_sleep.rs",
        "tokio-1.7.1/src/time/timeout.rs",
        "tokio-1.7.1/src/util/bit.rs",
        "tokio-1.7.1/src/util/error.rs",
        "tokio-1.7.1/src/util/linked_list.rs",
        "tokio-1.7.1/src/util/mod.rs",
        "tokio-1.7.1/src/util/pad.rs",
        "tokio-1.7.1/src/util/rand.rs",
        "tokio-1.7.1/src/util/slab.rs",
        "tokio-1.7.1/src/util/trace.rs",
        "tokio-1.7.1/src/util/try_lock.rs",
        "tokio-1.7.1/src/util/wake.rs",
    ],
    archive = ":tokio-1.7.1--archive",
    crate = "tokio",
    crate_root = "tokio-1.7.1/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [
        "bytes",
        "default",
        "fs",
        "full",
        "io-std",
        "io-util",
        "libc",
        "macros",
        "memchr",
        "mio",
        "net",
        "num_cpus",
        "once_cell",
        "parking_lot",
        "process",
        "rt",
        "rt-multi-thread",
        "signal",
        "signal-hook-registry",
        "sync",
        "test-util",
        "time",
        "tokio-macros",
        "tokio_track_caller",
        "winapi",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":bytes",
        ":libc",
        ":memchr-2.4.0",
        ":mio",
        ":num_cpus",
        ":once_cell",
        ":parking_lot-0.11.0",
        ":pin-project-lite-0.2.6",
        ":signal-hook-registry-1.4.0",
        ":tokio-macros-1.1.0",
    ],
)

third_party_rust_library(
    name = "tokio-macros-1.1.0",
    srcs = [
        "tokio-macros-1.1.0/src/entry.rs",
        "tokio-macros-1.1.0/src/lib.rs",
        "tokio-macros-1.1.0/src/select.rs",
    ],
    archive = ":tokio-macros-1.1.0--archive",
    crate = "tokio_macros",
    crate_root = "tokio-macros-1.1.0/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = True,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":proc-macro2",
        ":quote",
        ":syn",
    ],
)

third_party_rust_library(
    name = "tokio-rustls",
    srcs = [
        "tokio-rustls-0.22.0/README.md",
        "tokio-rustls-0.22.0/src/client.rs",
        "tokio-rustls-0.22.0/src/common/handshake.rs",
        "tokio-rustls-0.22.0/src/common/mod.rs",
        "tokio-rustls-0.22.0/src/common/test_stream.rs",
        "tokio-rustls-0.22.0/src/lib.rs",
        "tokio-rustls-0.22.0/src/server.rs",
        "tokio-rustls-0.22.0/tests/end.cert",
        "tokio-rustls-0.22.0/tests/end.chain",
        "tokio-rustls-0.22.0/tests/end.rsa",
    ],
    archive = ":tokio-rustls-0.22.0--archive",
    crate = "tokio_rustls",
    crate_root = "tokio-rustls-0.22.0/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":rustls",
        ":tokio",
        ":webpki-0.21.3",
    ],
)

third_party_rust_library(
    name = "tokio-stream",
    srcs = [
        "tokio-stream-0.1.4/src/empty.rs",
        "tokio-stream-0.1.4/src/iter.rs",
        "tokio-stream-0.1.4/src/lib.rs",
        "tokio-stream-0.1.4/src/macros.rs",
        "tokio-stream-0.1.4/src/once.rs",
        "tokio-stream-0.1.4/src/pending.rs",
        "tokio-stream-0.1.4/src/stream_ext.rs",
        "tokio-stream-0.1.4/src/stream_ext/all.rs",
        "tokio-stream-0.1.4/src/stream_ext/any.rs",
        "tokio-stream-0.1.4/src/stream_ext/chain.rs",
        "tokio-stream-0.1.4/src/stream_ext/collect.rs",
        "tokio-stream-0.1.4/src/stream_ext/filter.rs",
        "tokio-stream-0.1.4/src/stream_ext/filter_map.rs",
        "tokio-stream-0.1.4/src/stream_ext/fold.rs",
        "tokio-stream-0.1.4/src/stream_ext/fuse.rs",
        "tokio-stream-0.1.4/src/stream_ext/map.rs",
        "tokio-stream-0.1.4/src/stream_ext/merge.rs",
        "tokio-stream-0.1.4/src/stream_ext/next.rs",
        "tokio-stream-0.1.4/src/stream_ext/skip.rs",
        "tokio-stream-0.1.4/src/stream_ext/skip_while.rs",
        "tokio-stream-0.1.4/src/stream_ext/take.rs",
        "tokio-stream-0.1.4/src/stream_ext/take_while.rs",
        "tokio-stream-0.1.4/src/stream_ext/throttle.rs",
        "tokio-stream-0.1.4/src/stream_ext/timeout.rs",
        "tokio-stream-0.1.4/src/stream_ext/try_next.rs",
        "tokio-stream-0.1.4/src/stream_map.rs",
        "tokio-stream-0.1.4/src/wrappers.rs",
        "tokio-stream-0.1.4/src/wrappers/broadcast.rs",
        "tokio-stream-0.1.4/src/wrappers/interval.rs",
        "tokio-stream-0.1.4/src/wrappers/lines.rs",
        "tokio-stream-0.1.4/src/wrappers/mpsc_bounded.rs",
        "tokio-stream-0.1.4/src/wrappers/mpsc_unbounded.rs",
        "tokio-stream-0.1.4/src/wrappers/read_dir.rs",
        "tokio-stream-0.1.4/src/wrappers/signal_unix.rs",
        "tokio-stream-0.1.4/src/wrappers/signal_windows.rs",
        "tokio-stream-0.1.4/src/wrappers/split.rs",
        "tokio-stream-0.1.4/src/wrappers/tcp_listener.rs",
        "tokio-stream-0.1.4/src/wrappers/unix_listener.rs",
        "tokio-stream-0.1.4/src/wrappers/watch.rs",
    ],
    archive = ":tokio-stream-0.1.4--archive",
    crate = "tokio_stream",
    crate_root = "tokio-stream-0.1.4/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [
        "default",
        "fs",
        "io-util",
        "net",
        "signal",
        "sync",
        "time",
        "tokio-util",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":futures-core",
        ":pin-project-lite-0.2.6",
        ":tokio",
        ":tokio-util",
    ],
)

third_party_rust_library(
    name = "tokio-tungstenite-0.13.0",
    srcs = [
        "tokio-tungstenite-0.13.0/src/compat.rs",
        "tokio-tungstenite-0.13.0/src/connect.rs",
        "tokio-tungstenite-0.13.0/src/handshake.rs",
        "tokio-tungstenite-0.13.0/src/lib.rs",
        "tokio-tungstenite-0.13.0/src/stream.rs",
    ],
    archive = ":tokio-tungstenite-0.13.0--archive",
    crate = "tokio_tungstenite",
    crate_root = "tokio-tungstenite-0.13.0/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":futures-util",
        ":log",
        ":pin-project-1.0.2",
        ":tokio",
        ":tungstenite-0.12.0",
    ],
)

third_party_rust_library(
    name = "tokio-util",
    srcs = [
        "tokio-util-0.6.3/src/cfg.rs",
        "tokio-util-0.6.3/src/codec/bytes_codec.rs",
        "tokio-util-0.6.3/src/codec/decoder.rs",
        "tokio-util-0.6.3/src/codec/encoder.rs",
        "tokio-util-0.6.3/src/codec/framed.rs",
        "tokio-util-0.6.3/src/codec/framed_impl.rs",
        "tokio-util-0.6.3/src/codec/framed_read.rs",
        "tokio-util-0.6.3/src/codec/framed_write.rs",
        "tokio-util-0.6.3/src/codec/length_delimited.rs",
        "tokio-util-0.6.3/src/codec/lines_codec.rs",
        "tokio-util-0.6.3/src/codec/mod.rs",
        "tokio-util-0.6.3/src/compat.rs",
        "tokio-util-0.6.3/src/context.rs",
        "tokio-util-0.6.3/src/either.rs",
        "tokio-util-0.6.3/src/io/mod.rs",
        "tokio-util-0.6.3/src/io/read_buf.rs",
        "tokio-util-0.6.3/src/io/reader_stream.rs",
        "tokio-util-0.6.3/src/io/stream_reader.rs",
        "tokio-util-0.6.3/src/lib.rs",
        "tokio-util-0.6.3/src/loom.rs",
        "tokio-util-0.6.3/src/sync/cancellation_token.rs",
        "tokio-util-0.6.3/src/sync/intrusive_double_linked_list.rs",
        "tokio-util-0.6.3/src/sync/mod.rs",
        "tokio-util-0.6.3/src/sync/poll_semaphore.rs",
        "tokio-util-0.6.3/src/sync/reusable_box.rs",
        "tokio-util-0.6.3/src/sync/tests/loom_cancellation_token.rs",
        "tokio-util-0.6.3/src/sync/tests/mod.rs",
        "tokio-util-0.6.3/src/time/delay_queue.rs",
        "tokio-util-0.6.3/src/time/mod.rs",
        "tokio-util-0.6.3/src/time/wheel/level.rs",
        "tokio-util-0.6.3/src/time/wheel/mod.rs",
        "tokio-util-0.6.3/src/time/wheel/stack.rs",
        "tokio-util-0.6.3/src/udp/frame.rs",
        "tokio-util-0.6.3/src/udp/mod.rs",
    ],
    archive = ":tokio-util-0.6.3--archive",
    crate = "tokio_util",
    crate_root = "tokio-util-0.6.3/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [
        "codec",
        "compat",
        "default",
        "full",
        "futures-io",
        "io",
        "net",
        "rt",
        "slab",
        "time",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":bytes",
        ":futures-core",
        ":futures-io-0.3.13",
        ":futures-sink",
        ":log",
        ":pin-project-lite-0.2.6",
        ":slab-0.4.2",
        ":tokio",
    ],
)

third_party_rust_library(
    name = "toml",
    srcs = [
        "toml-0.5.7/src/datetime.rs",
        "toml-0.5.7/src/de.rs",
        "toml-0.5.7/src/lib.rs",
        "toml-0.5.7/src/macros.rs",
        "toml-0.5.7/src/map.rs",
        "toml-0.5.7/src/ser.rs",
        "toml-0.5.7/src/spanned.rs",
        "toml-0.5.7/src/tokens.rs",
        "toml-0.5.7/src/value.rs",
    ],
    archive = ":toml-0.5.7--archive",
    crate = "toml",
    crate_root = "toml-0.5.7/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = ["default"],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [":serde"],
)

third_party_rust_library(
    name = "tower",
    srcs = [
        "tower-0.4.6/src/balance/error.rs",
        "tower-0.4.6/src/balance/mod.rs",
        "tower-0.4.6/src/balance/p2c/layer.rs",
        "tower-0.4.6/src/balance/p2c/make.rs",
        "tower-0.4.6/src/balance/p2c/mod.rs",
        "tower-0.4.6/src/balance/p2c/service.rs",
        "tower-0.4.6/src/balance/p2c/test.rs",
        "tower-0.4.6/src/balance/pool/mod.rs",
        "tower-0.4.6/src/balance/pool/test.rs",
        "tower-0.4.6/src/buffer/error.rs",
        "tower-0.4.6/src/buffer/future.rs",
        "tower-0.4.6/src/buffer/layer.rs",
        "tower-0.4.6/src/buffer/message.rs",
        "tower-0.4.6/src/buffer/mod.rs",
        "tower-0.4.6/src/buffer/service.rs",
        "tower-0.4.6/src/buffer/worker.rs",
        "tower-0.4.6/src/builder/mod.rs",
        "tower-0.4.6/src/discover/error.rs",
        "tower-0.4.6/src/discover/list.rs",
        "tower-0.4.6/src/discover/mod.rs",
        "tower-0.4.6/src/filter/future.rs",
        "tower-0.4.6/src/filter/layer.rs",
        "tower-0.4.6/src/filter/mod.rs",
        "tower-0.4.6/src/filter/predicate.rs",
        "tower-0.4.6/src/hedge/delay.rs",
        "tower-0.4.6/src/hedge/latency.rs",
        "tower-0.4.6/src/hedge/mod.rs",
        "tower-0.4.6/src/hedge/rotating_histogram.rs",
        "tower-0.4.6/src/hedge/select.rs",
        "tower-0.4.6/src/layer.rs",
        "tower-0.4.6/src/lib.rs",
        "tower-0.4.6/src/limit/concurrency/future.rs",
        "tower-0.4.6/src/limit/concurrency/layer.rs",
        "tower-0.4.6/src/limit/concurrency/mod.rs",
        "tower-0.4.6/src/limit/concurrency/service.rs",
        "tower-0.4.6/src/limit/mod.rs",
        "tower-0.4.6/src/limit/rate/layer.rs",
        "tower-0.4.6/src/limit/rate/mod.rs",
        "tower-0.4.6/src/limit/rate/rate.rs",
        "tower-0.4.6/src/limit/rate/service.rs",
        "tower-0.4.6/src/load/completion.rs",
        "tower-0.4.6/src/load/constant.rs",
        "tower-0.4.6/src/load/mod.rs",
        "tower-0.4.6/src/load/peak_ewma.rs",
        "tower-0.4.6/src/load/pending_requests.rs",
        "tower-0.4.6/src/load_shed/error.rs",
        "tower-0.4.6/src/load_shed/future.rs",
        "tower-0.4.6/src/load_shed/layer.rs",
        "tower-0.4.6/src/load_shed/mod.rs",
        "tower-0.4.6/src/macros.rs",
        "tower-0.4.6/src/make/make_connection.rs",
        "tower-0.4.6/src/make/make_service.rs",
        "tower-0.4.6/src/make/make_service/shared.rs",
        "tower-0.4.6/src/make/mod.rs",
        "tower-0.4.6/src/ready_cache/cache.rs",
        "tower-0.4.6/src/ready_cache/error.rs",
        "tower-0.4.6/src/ready_cache/mod.rs",
        "tower-0.4.6/src/reconnect/future.rs",
        "tower-0.4.6/src/reconnect/mod.rs",
        "tower-0.4.6/src/retry/budget.rs",
        "tower-0.4.6/src/retry/future.rs",
        "tower-0.4.6/src/retry/layer.rs",
        "tower-0.4.6/src/retry/mod.rs",
        "tower-0.4.6/src/retry/policy.rs",
        "tower-0.4.6/src/spawn_ready/future.rs",
        "tower-0.4.6/src/spawn_ready/layer.rs",
        "tower-0.4.6/src/spawn_ready/make.rs",
        "tower-0.4.6/src/spawn_ready/mod.rs",
        "tower-0.4.6/src/spawn_ready/service.rs",
        "tower-0.4.6/src/steer/mod.rs",
        "tower-0.4.6/src/timeout/error.rs",
        "tower-0.4.6/src/timeout/future.rs",
        "tower-0.4.6/src/timeout/layer.rs",
        "tower-0.4.6/src/timeout/mod.rs",
        "tower-0.4.6/src/util/and_then.rs",
        "tower-0.4.6/src/util/boxed/layer.rs",
        "tower-0.4.6/src/util/boxed/mod.rs",
        "tower-0.4.6/src/util/boxed/sync.rs",
        "tower-0.4.6/src/util/boxed/unsync.rs",
        "tower-0.4.6/src/util/call_all/common.rs",
        "tower-0.4.6/src/util/call_all/mod.rs",
        "tower-0.4.6/src/util/call_all/ordered.rs",
        "tower-0.4.6/src/util/call_all/unordered.rs",
        "tower-0.4.6/src/util/either.rs",
        "tower-0.4.6/src/util/future_service.rs",
        "tower-0.4.6/src/util/map_err.rs",
        "tower-0.4.6/src/util/map_future.rs",
        "tower-0.4.6/src/util/map_request.rs",
        "tower-0.4.6/src/util/map_response.rs",
        "tower-0.4.6/src/util/map_result.rs",
        "tower-0.4.6/src/util/mod.rs",
        "tower-0.4.6/src/util/oneshot.rs",
        "tower-0.4.6/src/util/optional/error.rs",
        "tower-0.4.6/src/util/optional/future.rs",
        "tower-0.4.6/src/util/optional/mod.rs",
        "tower-0.4.6/src/util/ready.rs",
        "tower-0.4.6/src/util/service_fn.rs",
        "tower-0.4.6/src/util/then.rs",
    ],
    archive = ":tower-0.4.6--archive",
    crate = "tower",
    crate_root = "tower-0.4.6/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [
        "balance",
        "buffer",
        "default",
        "discover",
        "futures-util",
        "indexmap",
        "limit",
        "load",
        "log",
        "make",
        "rand",
        "ready-cache",
        "slab",
        "timeout",
        "tokio",
        "tokio-stream",
        "tokio-util",
        "tracing",
        "util",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":futures-core",
        ":futures-util",
        ":indexmap",
        ":pin-project-1.0.2",
        ":rand-0.8.3",
        ":slab-0.4.2",
        ":tokio",
        ":tokio-stream",
        ":tokio-util",
        ":tower-layer-0.3.1",
        ":tower-service",
        ":tracing",
    ],
)

third_party_rust_library(
    name = "tower-layer-0.3.1",
    srcs = [
        "tower-layer-0.3.1/src/identity.rs",
        "tower-layer-0.3.1/src/layer_fn.rs",
        "tower-layer-0.3.1/src/lib.rs",
        "tower-layer-0.3.1/src/stack.rs",
    ],
    archive = ":tower-layer-0.3.1--archive",
    crate = "tower_layer",
    crate_root = "tower-layer-0.3.1/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "tower-service",
    srcs = ["tower-service-0.3.0/src/lib.rs"],
    archive = ":tower-service-0.3.0--archive",
    crate = "tower_service",
    crate_root = "tower-service-0.3.0/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "tracing",
    srcs = [
        "tracing-0.1.22/src/dispatcher.rs",
        "tracing-0.1.22/src/field.rs",
        "tracing-0.1.22/src/instrument.rs",
        "tracing-0.1.22/src/level_filters.rs",
        "tracing-0.1.22/src/lib.rs",
        "tracing-0.1.22/src/macros.rs",
        "tracing-0.1.22/src/span.rs",
        "tracing-0.1.22/src/stdlib.rs",
        "tracing-0.1.22/src/subscriber.rs",
    ],
    archive = ":tracing-0.1.22--archive",
    crate = "tracing",
    crate_root = "tracing-0.1.22/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [
        "attributes",
        "default",
        "log",
        "std",
        "tracing-attributes",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":cfg-if-1.0.0",
        ":log",
        ":pin-project-lite-0.2.6",
        ":tracing-attributes-0.1.11",
        ":tracing-core",
    ],
)

third_party_rust_library(
    name = "tracing-attributes-0.1.11",
    srcs = ["tracing-attributes-0.1.11/src/lib.rs"],
    archive = ":tracing-attributes-0.1.11--archive",
    crate = "tracing_attributes",
    crate_root = "tracing-attributes-0.1.11/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = True,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":proc-macro2",
        ":quote",
        ":syn",
    ],
)

third_party_rust_library(
    name = "tracing-core",
    srcs = [
        "tracing-core-0.1.17/src/callsite.rs",
        "tracing-core-0.1.17/src/dispatcher.rs",
        "tracing-core-0.1.17/src/event.rs",
        "tracing-core-0.1.17/src/field.rs",
        "tracing-core-0.1.17/src/lazy_static/core_lazy.rs",
        "tracing-core-0.1.17/src/lazy_static/mod.rs",
        "tracing-core-0.1.17/src/lib.rs",
        "tracing-core-0.1.17/src/metadata.rs",
        "tracing-core-0.1.17/src/parent.rs",
        "tracing-core-0.1.17/src/span.rs",
        "tracing-core-0.1.17/src/spin/mod.rs",
        "tracing-core-0.1.17/src/spin/mutex.rs",
        "tracing-core-0.1.17/src/spin/once.rs",
        "tracing-core-0.1.17/src/stdlib.rs",
        "tracing-core-0.1.17/src/subscriber.rs",
    ],
    archive = ":tracing-core-0.1.17--archive",
    crate = "tracing_core",
    crate_root = "tracing-core-0.1.17/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [
        "default",
        "lazy_static",
        "std",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [":lazy_static"],
)

third_party_rust_library(
    name = "tracing-futures",
    srcs = [
        "tracing-futures-0.2.4/src/executor/futures_01.rs",
        "tracing-futures-0.2.4/src/executor/futures_03.rs",
        "tracing-futures-0.2.4/src/executor/futures_preview.rs",
        "tracing-futures-0.2.4/src/executor/mod.rs",
        "tracing-futures-0.2.4/src/lib.rs",
        "tracing-futures-0.2.4/src/stdlib.rs",
    ],
    archive = ":tracing-futures-0.2.4--archive",
    crate = "tracing_futures",
    crate_root = "tracing-futures-0.2.4/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [
        "default",
        "pin-project",
        "std",
        "std-future",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":pin-project",
        ":tracing",
    ],
)

third_party_rust_library(
    name = "trust-dns-proto-0.20.0",
    srcs = [
        "trust-dns-proto-0.20.0/src/error.rs",
        "trust-dns-proto-0.20.0/src/lib.rs",
        "trust-dns-proto-0.20.0/src/multicast/mdns_client_stream.rs",
        "trust-dns-proto-0.20.0/src/multicast/mdns_stream.rs",
        "trust-dns-proto-0.20.0/src/multicast/mod.rs",
        "trust-dns-proto-0.20.0/src/op/edns.rs",
        "trust-dns-proto-0.20.0/src/op/header.rs",
        "trust-dns-proto-0.20.0/src/op/message.rs",
        "trust-dns-proto-0.20.0/src/op/mod.rs",
        "trust-dns-proto-0.20.0/src/op/op_code.rs",
        "trust-dns-proto-0.20.0/src/op/query.rs",
        "trust-dns-proto-0.20.0/src/op/response_code.rs",
        "trust-dns-proto-0.20.0/src/rr/dns_class.rs",
        "trust-dns-proto-0.20.0/src/rr/dnssec/algorithm.rs",
        "trust-dns-proto-0.20.0/src/rr/dnssec/digest_type.rs",
        "trust-dns-proto-0.20.0/src/rr/dnssec/ec_public_key.rs",
        "trust-dns-proto-0.20.0/src/rr/dnssec/mod.rs",
        "trust-dns-proto-0.20.0/src/rr/dnssec/nsec3.rs",
        "trust-dns-proto-0.20.0/src/rr/dnssec/public_key.rs",
        "trust-dns-proto-0.20.0/src/rr/dnssec/rdata/dnskey.rs",
        "trust-dns-proto-0.20.0/src/rr/dnssec/rdata/ds.rs",
        "trust-dns-proto-0.20.0/src/rr/dnssec/rdata/key.rs",
        "trust-dns-proto-0.20.0/src/rr/dnssec/rdata/mod.rs",
        "trust-dns-proto-0.20.0/src/rr/dnssec/rdata/nsec.rs",
        "trust-dns-proto-0.20.0/src/rr/dnssec/rdata/nsec3.rs",
        "trust-dns-proto-0.20.0/src/rr/dnssec/rdata/nsec3param.rs",
        "trust-dns-proto-0.20.0/src/rr/dnssec/rdata/sig.rs",
        "trust-dns-proto-0.20.0/src/rr/dnssec/roots/19036.rsa",
        "trust-dns-proto-0.20.0/src/rr/dnssec/roots/20326.rsa",
        "trust-dns-proto-0.20.0/src/rr/dnssec/rsa_public_key.rs",
        "trust-dns-proto-0.20.0/src/rr/dnssec/supported_algorithm.rs",
        "trust-dns-proto-0.20.0/src/rr/dnssec/tbs.rs",
        "trust-dns-proto-0.20.0/src/rr/dnssec/trust_anchor.rs",
        "trust-dns-proto-0.20.0/src/rr/dnssec/verifier.rs",
        "trust-dns-proto-0.20.0/src/rr/domain/label.rs",
        "trust-dns-proto-0.20.0/src/rr/domain/mod.rs",
        "trust-dns-proto-0.20.0/src/rr/domain/name.rs",
        "trust-dns-proto-0.20.0/src/rr/domain/try_parse_ip.rs",
        "trust-dns-proto-0.20.0/src/rr/domain/usage.rs",
        "trust-dns-proto-0.20.0/src/rr/mod.rs",
        "trust-dns-proto-0.20.0/src/rr/rdata/a.rs",
        "trust-dns-proto-0.20.0/src/rr/rdata/aaaa.rs",
        "trust-dns-proto-0.20.0/src/rr/rdata/caa.rs",
        "trust-dns-proto-0.20.0/src/rr/rdata/mod.rs",
        "trust-dns-proto-0.20.0/src/rr/rdata/mx.rs",
        "trust-dns-proto-0.20.0/src/rr/rdata/name.rs",
        "trust-dns-proto-0.20.0/src/rr/rdata/naptr.rs",
        "trust-dns-proto-0.20.0/src/rr/rdata/null.rs",
        "trust-dns-proto-0.20.0/src/rr/rdata/openpgpkey.rs",
        "trust-dns-proto-0.20.0/src/rr/rdata/opt.rs",
        "trust-dns-proto-0.20.0/src/rr/rdata/soa.rs",
        "trust-dns-proto-0.20.0/src/rr/rdata/srv.rs",
        "trust-dns-proto-0.20.0/src/rr/rdata/sshfp.rs",
        "trust-dns-proto-0.20.0/src/rr/rdata/tlsa.rs",
        "trust-dns-proto-0.20.0/src/rr/rdata/txt.rs",
        "trust-dns-proto-0.20.0/src/rr/record_data.rs",
        "trust-dns-proto-0.20.0/src/rr/record_type.rs",
        "trust-dns-proto-0.20.0/src/rr/resource.rs",
        "trust-dns-proto-0.20.0/src/rr/rr_set.rs",
        "trust-dns-proto-0.20.0/src/serialize/binary/bin_tests.rs",
        "trust-dns-proto-0.20.0/src/serialize/binary/decoder.rs",
        "trust-dns-proto-0.20.0/src/serialize/binary/encoder.rs",
        "trust-dns-proto-0.20.0/src/serialize/binary/mod.rs",
        "trust-dns-proto-0.20.0/src/serialize/binary/restrict.rs",
        "trust-dns-proto-0.20.0/src/serialize/mod.rs",
        "trust-dns-proto-0.20.0/src/tcp/mod.rs",
        "trust-dns-proto-0.20.0/src/tcp/tcp_client_stream.rs",
        "trust-dns-proto-0.20.0/src/tcp/tcp_stream.rs",
        "trust-dns-proto-0.20.0/src/tests/mod.rs",
        "trust-dns-proto-0.20.0/src/tests/tcp.rs",
        "trust-dns-proto-0.20.0/src/tests/udp.rs",
        "trust-dns-proto-0.20.0/src/udp/mod.rs",
        "trust-dns-proto-0.20.0/src/udp/udp_client_stream.rs",
        "trust-dns-proto-0.20.0/src/udp/udp_stream.rs",
        "trust-dns-proto-0.20.0/src/xfer/dns_exchange.rs",
        "trust-dns-proto-0.20.0/src/xfer/dns_handle.rs",
        "trust-dns-proto-0.20.0/src/xfer/dns_multiplexer.rs",
        "trust-dns-proto-0.20.0/src/xfer/dns_request.rs",
        "trust-dns-proto-0.20.0/src/xfer/dns_response.rs",
        "trust-dns-proto-0.20.0/src/xfer/dnssec_dns_handle.rs",
        "trust-dns-proto-0.20.0/src/xfer/mod.rs",
        "trust-dns-proto-0.20.0/src/xfer/retry_dns_handle.rs",
        "trust-dns-proto-0.20.0/src/xfer/serial_message.rs",
    ],
    archive = ":trust-dns-proto-0.20.0--archive",
    crate = "trust_dns_proto",
    crate_root = "trust-dns-proto-0.20.0/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [
        "tokio",
        "tokio-runtime",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":async-trait",
        ":cfg-if-1.0.0",
        ":data-encoding",
        ":enum-as-inner-0.3.3",
        ":futures-channel",
        ":futures-io-0.3.13",
        ":futures-util",
        ":idna-0.2.0",
        ":ipnet-2.3.0",
        ":lazy_static",
        ":log",
        ":rand-0.8.3",
        ":smallvec",
        ":thiserror",
        ":tokio",
        ":url",
    ],
)

third_party_rust_library(
    name = "trust-dns-resolver",
    srcs = [
        "trust-dns-resolver-0.20.0/src/async_resolver.rs",
        "trust-dns-resolver-0.20.0/src/caching_client.rs",
        "trust-dns-resolver-0.20.0/src/config.rs",
        "trust-dns-resolver-0.20.0/src/dns_lru.rs",
        "trust-dns-resolver-0.20.0/src/dns_sd.rs",
        "trust-dns-resolver-0.20.0/src/error.rs",
        "trust-dns-resolver-0.20.0/src/hosts.rs",
        "trust-dns-resolver-0.20.0/src/https.rs",
        "trust-dns-resolver-0.20.0/src/lib.rs",
        "trust-dns-resolver-0.20.0/src/lookup.rs",
        "trust-dns-resolver-0.20.0/src/lookup_ip.rs",
        "trust-dns-resolver-0.20.0/src/name_server/connection_provider.rs",
        "trust-dns-resolver-0.20.0/src/name_server/mod.rs",
        "trust-dns-resolver-0.20.0/src/name_server/name_server.rs",
        "trust-dns-resolver-0.20.0/src/name_server/name_server_pool.rs",
        "trust-dns-resolver-0.20.0/src/name_server/name_server_state.rs",
        "trust-dns-resolver-0.20.0/src/name_server/name_server_stats.rs",
        "trust-dns-resolver-0.20.0/src/resolver.rs",
        "trust-dns-resolver-0.20.0/src/system_conf/mod.rs",
        "trust-dns-resolver-0.20.0/src/system_conf/unix.rs",
        "trust-dns-resolver-0.20.0/src/system_conf/windows.rs",
        "trust-dns-resolver-0.20.0/src/tls/dns_over_native_tls.rs",
        "trust-dns-resolver-0.20.0/src/tls/dns_over_openssl.rs",
        "trust-dns-resolver-0.20.0/src/tls/dns_over_rustls.rs",
        "trust-dns-resolver-0.20.0/src/tls/mod.rs",
    ],
    archive = ":trust-dns-resolver-0.20.0--archive",
    crate = "trust_dns_resolver",
    crate_root = "trust-dns-resolver-0.20.0/src/lib.rs",
    edition = "2018",
    env = {
        "CARGO_MANIFEST_DIR": "third-party/rust/trust-dns-resolver-0.20.0",
        "CARGO_PKG_NAME": "trust-dns-resolver",
        "CARGO_PKG_VERSION": "0.20.0",
        "CARGO_PKG_VERSION_MAJOR": "0",
        "CARGO_PKG_VERSION_MINOR": "20",
        "CARGO_PKG_VERSION_PATCH": "0",
    },
    features = [
        "default",
        "ipconfig",
        "resolv-conf",
        "system-config",
        "tokio",
        "tokio-runtime",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":cfg-if-1.0.0",
        ":futures-util",
        ":lazy_static",
        ":log",
        ":lru-cache",
        ":parking_lot-0.11.0",
        ":resolv-conf-0.7.0",
        ":smallvec",
        ":thiserror",
        ":tokio",
        ":trust-dns-proto-0.20.0",
    ],
)

third_party_rust_library(
    name = "try-lock-0.2.3",
    srcs = ["try-lock-0.2.3/src/lib.rs"],
    archive = ":try-lock-0.2.3--archive",
    crate = "try_lock",
    crate_root = "try-lock-0.2.3/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "tungstenite-0.12.0",
    srcs = [
        "tungstenite-0.12.0/src/client.rs",
        "tungstenite-0.12.0/src/error.rs",
        "tungstenite-0.12.0/src/handshake/client.rs",
        "tungstenite-0.12.0/src/handshake/headers.rs",
        "tungstenite-0.12.0/src/handshake/machine.rs",
        "tungstenite-0.12.0/src/handshake/mod.rs",
        "tungstenite-0.12.0/src/handshake/server.rs",
        "tungstenite-0.12.0/src/lib.rs",
        "tungstenite-0.12.0/src/protocol/frame/coding.rs",
        "tungstenite-0.12.0/src/protocol/frame/frame.rs",
        "tungstenite-0.12.0/src/protocol/frame/mask.rs",
        "tungstenite-0.12.0/src/protocol/frame/mod.rs",
        "tungstenite-0.12.0/src/protocol/message.rs",
        "tungstenite-0.12.0/src/protocol/mod.rs",
        "tungstenite-0.12.0/src/server.rs",
        "tungstenite-0.12.0/src/stream.rs",
        "tungstenite-0.12.0/src/util.rs",
    ],
    archive = ":tungstenite-0.12.0--archive",
    crate = "tungstenite",
    crate_root = "tungstenite-0.12.0/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":base64-0.13.0",
        ":byteorder",
        ":bytes",
        ":http",
        ":httparse-1.4.1",
        ":input_buffer-0.4.0",
        ":log",
        ":rand-0.8.3",
        ":sha-1-0.9.4",
        ":url",
        ":utf-8-0.7.5",
    ],
)

third_party_rust_library(
    name = "twoway-0.1.8",
    srcs = [
        "twoway-0.1.8/src/bmh.rs",
        "twoway-0.1.8/src/lib.rs",
        "twoway-0.1.8/src/pcmp.rs",
        "twoway-0.1.8/src/set.rs",
        "twoway-0.1.8/src/tw.rs",
        "twoway-0.1.8/src/util.rs",
    ],
    archive = ":twoway-0.1.8--archive",
    crate = "twoway",
    crate_root = "twoway-0.1.8/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [
        "default",
        "use_std",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [":memchr-2.4.0"],
)

third_party_rust_library(
    name = "typenum",
    srcs = [
        "typenum-1.12.0/src/array.rs",
        "typenum-1.12.0/src/bit.rs",
        "typenum-1.12.0/src/int.rs",
        "typenum-1.12.0/src/lib.rs",
        "typenum-1.12.0/src/marker_traits.rs",
        "typenum-1.12.0/src/operator_aliases.rs",
        "typenum-1.12.0/src/private.rs",
        "typenum-1.12.0/src/type_operators.rs",
        "typenum-1.12.0/src/uint.rs",
    ],
    archive = ":typenum-1.12.0--archive",
    crate = "typenum",
    crate_root = "typenum-1.12.0/src/lib.rs",
    edition = "2015",
    env = {
        "TYPENUM_BUILD_CONSTS": "op.rs",
        "TYPENUM_BUILD_OP": "consts.rs",
    },
    features = [],
    mapped_srcs = {
        "//third-party/rust:typenum-1.12.0-build-script-main-srcs=consts.rs": "typenum-1.12.0/src/consts.rs",
        "//third-party/rust:typenum-1.12.0-build-script-main-srcs=op.rs": "typenum-1.12.0/src/op.rs",
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_binary(
    name = "typenum-1.12.0-build-script-main",
    srcs = [
        "typenum-1.12.0/build/main.rs",
        "typenum-1.12.0/build/op.rs",
        "typenum-1.12.0/build/tests.rs",
    ],
    archive = ":typenum-1.12.0--archive",
    crate = "build_script_main",
    crate_root = "typenum-1.12.0/build/main.rs",
    edition = "2015",
    env = {
        "TYPENUM_BUILD_CONSTS": "op.rs",
        "TYPENUM_BUILD_OP": "consts.rs",
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "ucd-trie-0.1.3",
    srcs = [
        "ucd-trie-0.1.3/src/general_category.rs",
        "ucd-trie-0.1.3/src/lib.rs",
        "ucd-trie-0.1.3/src/owned.rs",
    ],
    archive = ":ucd-trie-0.1.3--archive",
    crate = "ucd_trie",
    crate_root = "ucd-trie-0.1.3/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [
        "default",
        "std",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "unicase",
    srcs = [
        "unicase-2.6.0/src/ascii.rs",
        "unicase-2.6.0/src/lib.rs",
        "unicase-2.6.0/src/unicode/map.rs",
        "unicase-2.6.0/src/unicode/mod.rs",
    ],
    archive = ":unicase-2.6.0--archive",
    crate = "unicase",
    crate_root = "unicase-2.6.0/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = [
        "--cap-lints=allow",
        "@$(location :unicase-2.6.0-build-script-build-args)",
    ],
    deps = [],
)

third_party_rust_binary(
    name = "unicase-2.6.0-build-script-build",
    srcs = [
        "unicase-2.6.0/build.rs",
        "unicase-2.6.0/src/ascii.rs",
        "unicase-2.6.0/src/lib.rs",
        "unicase-2.6.0/src/unicode/map.rs",
        "unicase-2.6.0/src/unicode/mod.rs",
    ],
    archive = ":unicase-2.6.0--archive",
    crate = "build_script_build",
    crate_root = "unicase-2.6.0/build.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [":version_check-0.9.2"],
)

third_party_rust_library(
    name = "unicode-bidi-0.3.4",
    srcs = [
        "unicode-bidi-0.3.4/src/char_data/mod.rs",
        "unicode-bidi-0.3.4/src/char_data/tables.rs",
        "unicode-bidi-0.3.4/src/deprecated.rs",
        "unicode-bidi-0.3.4/src/explicit.rs",
        "unicode-bidi-0.3.4/src/format_chars.rs",
        "unicode-bidi-0.3.4/src/implicit.rs",
        "unicode-bidi-0.3.4/src/level.rs",
        "unicode-bidi-0.3.4/src/lib.rs",
        "unicode-bidi-0.3.4/src/prepare.rs",
    ],
    archive = ":unicode-bidi-0.3.4--archive",
    crate = "unicode_bidi",
    crate_root = "unicode-bidi-0.3.4/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = ["default"],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [":matches-0.1.8"],
)

third_party_rust_library(
    name = "unicode-normalization-0.1.13",
    srcs = [
        "unicode-normalization-0.1.13/src/__test_api.rs",
        "unicode-normalization-0.1.13/src/decompose.rs",
        "unicode-normalization-0.1.13/src/lib.rs",
        "unicode-normalization-0.1.13/src/lookups.rs",
        "unicode-normalization-0.1.13/src/no_std_prelude.rs",
        "unicode-normalization-0.1.13/src/normalize.rs",
        "unicode-normalization-0.1.13/src/perfect_hash.rs",
        "unicode-normalization-0.1.13/src/quick_check.rs",
        "unicode-normalization-0.1.13/src/recompose.rs",
        "unicode-normalization-0.1.13/src/stream_safe.rs",
        "unicode-normalization-0.1.13/src/tables.rs",
        "unicode-normalization-0.1.13/src/test.rs",
    ],
    archive = ":unicode-normalization-0.1.13--archive",
    crate = "unicode_normalization",
    crate_root = "unicode-normalization-0.1.13/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [
        "default",
        "std",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [":tinyvec-0.3.4"],
)

third_party_rust_library(
    name = "unicode-segmentation",
    srcs = [
        "unicode-segmentation-1.7.1/src/grapheme.rs",
        "unicode-segmentation-1.7.1/src/lib.rs",
        "unicode-segmentation-1.7.1/src/sentence.rs",
        "unicode-segmentation-1.7.1/src/tables.rs",
        "unicode-segmentation-1.7.1/src/test.rs",
        "unicode-segmentation-1.7.1/src/testdata.rs",
        "unicode-segmentation-1.7.1/src/word.rs",
    ],
    archive = ":unicode-segmentation-1.7.1--archive",
    crate = "unicode_segmentation",
    crate_root = "unicode-segmentation-1.7.1/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "unicode-width",
    srcs = [
        "unicode-width-0.1.8/src/lib.rs",
        "unicode-width-0.1.8/src/tables.rs",
        "unicode-width-0.1.8/src/tests.rs",
    ],
    archive = ":unicode-width-0.1.8--archive",
    crate = "unicode_width",
    crate_root = "unicode-width-0.1.8/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = ["default"],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "unicode-xid-0.2.1",
    srcs = [
        "unicode-xid-0.2.1/src/lib.rs",
        "unicode-xid-0.2.1/src/tables.rs",
        "unicode-xid-0.2.1/src/tests.rs",
    ],
    archive = ":unicode-xid-0.2.1--archive",
    crate = "unicode_xid",
    crate_root = "unicode-xid-0.2.1/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = ["default"],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "untrusted-0.7.1",
    srcs = ["untrusted-0.7.1/src/untrusted.rs"],
    archive = ":untrusted-0.7.1--archive",
    crate = "untrusted",
    crate_root = "untrusted-0.7.1/src/untrusted.rs",
    edition = "2018",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "url",
    srcs = [
        "url-2.2.0/src/host.rs",
        "url-2.2.0/src/lib.rs",
        "url-2.2.0/src/origin.rs",
        "url-2.2.0/src/parser.rs",
        "url-2.2.0/src/path_segments.rs",
        "url-2.2.0/src/quirks.rs",
        "url-2.2.0/src/slicing.rs",
    ],
    archive = ":url-2.2.0--archive",
    crate = "url",
    crate_root = "url-2.2.0/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = ["serde"],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":form_urlencoded-1.0.0",
        ":idna-0.2.0",
        ":matches-0.1.8",
        ":percent-encoding",
        ":serde",
    ],
)

third_party_rust_library(
    name = "utf-8-0.7.5",
    srcs = [
        "utf-8-0.7.5/src/lib.rs",
        "utf-8-0.7.5/src/lossy.rs",
        "utf-8-0.7.5/src/read.rs",
    ],
    archive = ":utf-8-0.7.5--archive",
    crate = "utf8",
    crate_root = "utf-8-0.7.5/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "utf8-ranges-1.0.4",
    srcs = [
        "utf8-ranges-1.0.4/src/char_utf8.rs",
        "utf8-ranges-1.0.4/src/lib.rs",
    ],
    archive = ":utf8-ranges-1.0.4--archive",
    crate = "utf8_ranges",
    crate_root = "utf8-ranges-1.0.4/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "utf8parse-0.2.0",
    srcs = [
        "utf8parse-0.2.0/src/lib.rs",
        "utf8parse-0.2.0/src/types.rs",
        "utf8parse-0.2.0/tests/UTF-8-demo.txt",
    ],
    archive = ":utf8parse-0.2.0--archive",
    crate = "utf8parse",
    crate_root = "utf8parse-0.2.0/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = ["default"],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "vec_map",
    srcs = ["vec_map-0.8.2/src/lib.rs"],
    archive = ":vec_map-0.8.2--archive",
    crate = "vec_map",
    crate_root = "vec_map-0.8.2/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "version_check-0.9.2",
    srcs = [
        "version_check-0.9.2/src/channel.rs",
        "version_check-0.9.2/src/date.rs",
        "version_check-0.9.2/src/lib.rs",
        "version_check-0.9.2/src/version.rs",
    ],
    archive = ":version_check-0.9.2--archive",
    crate = "version_check",
    crate_root = "version_check-0.9.2/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "want-0.3.0",
    srcs = ["want-0.3.0/src/lib.rs"],
    archive = ":want-0.3.0--archive",
    crate = "want",
    crate_root = "want-0.3.0/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":log",
        ":try-lock-0.2.3",
    ],
)

third_party_rust_library(
    name = "warp",
    srcs = [
        "warp-0.3.0/examples/tls/cert.pem",
        "warp-0.3.0/examples/tls/key.rsa",
        "warp-0.3.0/src/error.rs",
        "warp-0.3.0/src/filter/and.rs",
        "warp-0.3.0/src/filter/and_then.rs",
        "warp-0.3.0/src/filter/boxed.rs",
        "warp-0.3.0/src/filter/map.rs",
        "warp-0.3.0/src/filter/map_err.rs",
        "warp-0.3.0/src/filter/mod.rs",
        "warp-0.3.0/src/filter/or.rs",
        "warp-0.3.0/src/filter/or_else.rs",
        "warp-0.3.0/src/filter/recover.rs",
        "warp-0.3.0/src/filter/service.rs",
        "warp-0.3.0/src/filter/unify.rs",
        "warp-0.3.0/src/filter/untuple_one.rs",
        "warp-0.3.0/src/filter/wrap.rs",
        "warp-0.3.0/src/filters/addr.rs",
        "warp-0.3.0/src/filters/any.rs",
        "warp-0.3.0/src/filters/body.rs",
        "warp-0.3.0/src/filters/compression.rs",
        "warp-0.3.0/src/filters/cookie.rs",
        "warp-0.3.0/src/filters/cors.rs",
        "warp-0.3.0/src/filters/ext.rs",
        "warp-0.3.0/src/filters/fs.rs",
        "warp-0.3.0/src/filters/header.rs",
        "warp-0.3.0/src/filters/host.rs",
        "warp-0.3.0/src/filters/log.rs",
        "warp-0.3.0/src/filters/method.rs",
        "warp-0.3.0/src/filters/mod.rs",
        "warp-0.3.0/src/filters/multipart.rs",
        "warp-0.3.0/src/filters/path.rs",
        "warp-0.3.0/src/filters/query.rs",
        "warp-0.3.0/src/filters/reply.rs",
        "warp-0.3.0/src/filters/sse.rs",
        "warp-0.3.0/src/filters/trace.rs",
        "warp-0.3.0/src/filters/ws.rs",
        "warp-0.3.0/src/generic.rs",
        "warp-0.3.0/src/lib.rs",
        "warp-0.3.0/src/redirect.rs",
        "warp-0.3.0/src/reject.rs",
        "warp-0.3.0/src/reply.rs",
        "warp-0.3.0/src/route.rs",
        "warp-0.3.0/src/server.rs",
        "warp-0.3.0/src/service.rs",
        "warp-0.3.0/src/test.rs",
        "warp-0.3.0/src/tls.rs",
        "warp-0.3.0/src/transport.rs",
    ],
    archive = ":warp-0.3.0--archive",
    crate = "warp",
    crate_root = "warp-0.3.0/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [
        "default",
        "multipart",
        "tls",
        "tokio-rustls",
        "tokio-tungstenite",
        "websocket",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":bytes",
        ":futures",
        ":headers-0.3.2",
        ":http",
        ":hyper",
        ":log",
        ":mime",
        ":mime_guess-2.0.3",
        ":multipart-0.17.0",
        ":percent-encoding",
        ":pin-project-1.0.2",
        ":scoped-tls-1.0.0",
        ":serde",
        ":serde_json",
        ":serde_urlencoded-0.7.0",
        ":tokio",
        ":tokio-rustls",
        ":tokio-stream",
        ":tokio-tungstenite-0.13.0",
        ":tokio-util",
        ":tower-service",
        ":tracing",
        ":tracing-futures",
    ],
)

third_party_rust_library(
    name = "webpki-0.21.3",
    srcs = [
        "webpki-0.21.3/src/calendar.rs",
        "webpki-0.21.3/src/cert.rs",
        "webpki-0.21.3/src/data/alg-ecdsa-p256.der",
        "webpki-0.21.3/src/data/alg-ecdsa-p384.der",
        "webpki-0.21.3/src/data/alg-ecdsa-sha256.der",
        "webpki-0.21.3/src/data/alg-ecdsa-sha384.der",
        "webpki-0.21.3/src/data/alg-ed25519.der",
        "webpki-0.21.3/src/data/alg-rsa-encryption.der",
        "webpki-0.21.3/src/data/alg-rsa-pkcs1-sha256.der",
        "webpki-0.21.3/src/data/alg-rsa-pkcs1-sha384.der",
        "webpki-0.21.3/src/data/alg-rsa-pkcs1-sha512.der",
        "webpki-0.21.3/src/data/alg-rsa-pss-sha256.der",
        "webpki-0.21.3/src/data/alg-rsa-pss-sha384.der",
        "webpki-0.21.3/src/data/alg-rsa-pss-sha512.der",
        "webpki-0.21.3/src/der.rs",
        "webpki-0.21.3/src/error.rs",
        "webpki-0.21.3/src/name.rs",
        "webpki-0.21.3/src/signed_data.rs",
        "webpki-0.21.3/src/time.rs",
        "webpki-0.21.3/src/trust_anchor_util.rs",
        "webpki-0.21.3/src/verify_cert.rs",
        "webpki-0.21.3/src/webpki.rs",
    ],
    archive = ":webpki-0.21.3--archive",
    crate = "webpki",
    crate_root = "webpki-0.21.3/src/webpki.rs",
    edition = "2018",
    env = {
    },
    features = [
        "default",
        "std",
        "trust_anchor_util",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [
        ":ring-0.16.20",
        ":untrusted-0.7.1",
    ],
)

third_party_rust_library(
    name = "zstd",
    srcs = [
        "zstd-0.8.0+zstd.1.4.9/src/block/compressor.rs",
        "zstd-0.8.0+zstd.1.4.9/src/block/decompressor.rs",
        "zstd-0.8.0+zstd.1.4.9/src/block/mod.rs",
        "zstd-0.8.0+zstd.1.4.9/src/dict.rs",
        "zstd-0.8.0+zstd.1.4.9/src/lib.rs",
        "zstd-0.8.0+zstd.1.4.9/src/stream/functions.rs",
        "zstd-0.8.0+zstd.1.4.9/src/stream/mod.rs",
        "zstd-0.8.0+zstd.1.4.9/src/stream/raw.rs",
        "zstd-0.8.0+zstd.1.4.9/src/stream/read/async_tests.rs",
        "zstd-0.8.0+zstd.1.4.9/src/stream/read/mod.rs",
        "zstd-0.8.0+zstd.1.4.9/src/stream/read/tests.rs",
        "zstd-0.8.0+zstd.1.4.9/src/stream/tests.rs",
        "zstd-0.8.0+zstd.1.4.9/src/stream/write/async_tests.rs",
        "zstd-0.8.0+zstd.1.4.9/src/stream/write/mod.rs",
        "zstd-0.8.0+zstd.1.4.9/src/stream/write/tests.rs",
        "zstd-0.8.0+zstd.1.4.9/src/stream/zio/mod.rs",
        "zstd-0.8.0+zstd.1.4.9/src/stream/zio/reader.rs",
        "zstd-0.8.0+zstd.1.4.9/src/stream/zio/writer.rs",
    ],
    archive = ":zstd-0.8.0+zstd.1.4.9--archive",
    crate = "zstd",
    crate_root = "zstd-0.8.0+zstd.1.4.9/src/lib.rs",
    edition = "2018",
    env = {
    },
    features = [
        "default",
        "legacy",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [":zstd-safe-4.0.0+zstd.1.4.9"],
)

third_party_rust_library(
    name = "zstd-safe-4.0.0+zstd.1.4.9",
    srcs = [
        "zstd-safe-4.0.0+zstd.1.4.9/src/lib.rs",
        "zstd-safe-4.0.0+zstd.1.4.9/src/tests.rs",
    ],
    archive = ":zstd-safe-4.0.0+zstd.1.4.9--archive",
    crate = "zstd_safe",
    crate_root = "zstd-safe-4.0.0+zstd.1.4.9/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [
        "legacy",
        "std",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = [
        "--cap-lints=allow",
        "@$(location :zstd-safe-4.0.0+zstd.1.4.9-build-script-build-args)",
    ],
    deps = [
        ":libc",
        ":zstd-sys",
    ],
)

third_party_rust_binary(
    name = "zstd-safe-4.0.0+zstd.1.4.9-build-script-build",
    srcs = [
        "zstd-safe-4.0.0+zstd.1.4.9/build.rs",
        "zstd-safe-4.0.0+zstd.1.4.9/src/lib.rs",
        "zstd-safe-4.0.0+zstd.1.4.9/src/tests.rs",
    ],
    archive = ":zstd-safe-4.0.0+zstd.1.4.9--archive",
    crate = "build_script_build",
    crate_root = "zstd-safe-4.0.0+zstd.1.4.9/build.rs",
    edition = "2015",
    env = {
    },
    features = [
        "legacy",
        "std",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = ["--cap-lints=allow"],
    deps = [],
)

third_party_rust_library(
    name = "zstd-sys",
    srcs = [
        "zstd-sys-1.5.0+zstd.1.4.9/src/bindings.rs",
        "zstd-sys-1.5.0+zstd.1.4.9/src/bindings_experimental.rs",
        "zstd-sys-1.5.0+zstd.1.4.9/src/bindings_std.rs",
        "zstd-sys-1.5.0+zstd.1.4.9/src/bindings_std_experimental.rs",
        "zstd-sys-1.5.0+zstd.1.4.9/src/lib.rs",
    ],
    archive = ":zstd-sys-1.5.0+zstd.1.4.9--archive",
    crate = "zstd_sys",
    crate_root = "zstd-sys-1.5.0+zstd.1.4.9/src/lib.rs",
    edition = "2015",
    env = {
    },
    features = [
        "default",
        "experimental",
        "legacy",
        "non-cargo",
        "pkg-config",
        "std",
    ],
    mapped_srcs = {
    },
    named_deps = {
    },
    proc_macro = False,
    rustc_flags = [
        "--cap-lints=allow",
        "-lzstd",
    ],
    deps = [":libc"],
)

cpp_library(
    name = "ring-0.16.20-ring-c-asm-elf",
    srcs = [
        "vendor/ring-0.16.20/crypto/constant_time_test.c",
        "vendor/ring-0.16.20/crypto/cpu-intel.c",
        "vendor/ring-0.16.20/crypto/crypto.c",
        "vendor/ring-0.16.20/crypto/curve25519/curve25519.c",
        "vendor/ring-0.16.20/crypto/fipsmodule/aes/aes_nohw.c",
        "vendor/ring-0.16.20/crypto/fipsmodule/bn/montgomery.c",
        "vendor/ring-0.16.20/crypto/fipsmodule/bn/montgomery_inv.c",
        "vendor/ring-0.16.20/crypto/fipsmodule/ec/ecp_nistz.c",
        "vendor/ring-0.16.20/crypto/fipsmodule/ec/ecp_nistz256.c",
        "vendor/ring-0.16.20/crypto/fipsmodule/ec/gfp_p256.c",
        "vendor/ring-0.16.20/crypto/fipsmodule/ec/gfp_p384.c",
        "vendor/ring-0.16.20/crypto/limbs/limbs.c",
        "vendor/ring-0.16.20/crypto/mem.c",
        "vendor/ring-0.16.20/crypto/poly1305/poly1305.c",
        "vendor/ring-0.16.20/crypto/poly1305/poly1305_arm.c",
        "vendor/ring-0.16.20/crypto/poly1305/poly1305_vec.c",
        "vendor/ring-0.16.20/pregenerated/aesni-gcm-x86_64-elf.S",
        "vendor/ring-0.16.20/pregenerated/aesni-x86_64-elf.S",
        "vendor/ring-0.16.20/pregenerated/chacha-x86_64-elf.S",
        "vendor/ring-0.16.20/pregenerated/chacha20_poly1305_x86_64-elf.S",
        "vendor/ring-0.16.20/pregenerated/ghash-x86_64-elf.S",
        "vendor/ring-0.16.20/pregenerated/p256-x86_64-asm-elf.S",
        "vendor/ring-0.16.20/pregenerated/sha256-x86_64-elf.S",
        "vendor/ring-0.16.20/pregenerated/sha512-x86_64-elf.S",
        "vendor/ring-0.16.20/pregenerated/vpaes-x86_64-elf.S",
        "vendor/ring-0.16.20/pregenerated/x86_64-mont-elf.S",
        "vendor/ring-0.16.20/pregenerated/x86_64-mont5-elf.S",
    ],
    headers = [
        "vendor/ring-0.16.20/crypto/curve25519/curve25519_tables.h",
        "vendor/ring-0.16.20/crypto/curve25519/internal.h",
        "vendor/ring-0.16.20/crypto/fipsmodule/bn/internal.h",
        "vendor/ring-0.16.20/crypto/fipsmodule/ec/ecp_nistz.h",
        "vendor/ring-0.16.20/crypto/fipsmodule/ec/ecp_nistz256.h",
        "vendor/ring-0.16.20/crypto/fipsmodule/ec/ecp_nistz256_table.inl",
        "vendor/ring-0.16.20/crypto/fipsmodule/ec/ecp_nistz384.h",
        "vendor/ring-0.16.20/crypto/fipsmodule/ec/ecp_nistz384.inl",
        "vendor/ring-0.16.20/crypto/internal.h",
        "vendor/ring-0.16.20/crypto/limbs/limbs.h",
        "vendor/ring-0.16.20/crypto/limbs/limbs.inl",
        "vendor/ring-0.16.20/crypto/poly1305/internal.h",
        "vendor/ring-0.16.20/include/GFp/aes.h",
        "vendor/ring-0.16.20/include/GFp/arm_arch.h",
        "vendor/ring-0.16.20/include/GFp/base.h",
        "vendor/ring-0.16.20/include/GFp/check.h",
        "vendor/ring-0.16.20/include/GFp/cpu.h",
        "vendor/ring-0.16.20/include/GFp/mem.h",
        "vendor/ring-0.16.20/include/GFp/poly1305.h",
        "vendor/ring-0.16.20/include/GFp/type_check.h",
        "vendor/ring-0.16.20/third_party/fiat/curve25519_32.h",
        "vendor/ring-0.16.20/third_party/fiat/curve25519_64.h",
    ],
    compiler_flags = ["-Wno-error"],
    include_directories = ["vendor/ring-0.16.20/include"],
    preferred_linkage = "static",
    visibility = [],
)

rust_library(
    name = "starlark",
    srcs = glob(["starlark-rust/starlark/src/**/*.rs"]),
    env = {
        "OUT_DIR": "$(location :starlark-grammar)/src",
    },
    rustc_flags = [
        "-Aunused_braces",
        "-Wbare_trait_objects",
        "-Wellipsis_inclusive_range_patterns",
        "-Dnon_fmt_panic",
        "-Dunconditional_recursion",
    ],
    deps = [
        ":annotate-snippets",
        ":anyhow",
        ":bumpalo",
        ":derivative",
        ":either",
        ":hashbrown",
        ":indexmap",
        ":itertools",
        ":lalrpop-util",
        ":logos",
        ":maplit",
        ":once_cell",
        ":paste",
        ":rustyline",
        ":starlark_module",
        ":static_assertions",
        ":thiserror",
    ],
)

export_file(
    name = "starlark-rust/starlark/src/syntax/grammar.lalrpop",
)

buck_genrule(
    name = "starlark-grammar",
    out = ".",
    cmd = "$(exe :lalrpop-lalrpop) --out-dir $OUT $(location :starlark-rust/starlark/src/syntax/grammar.lalrpop)",
)

rust_library(
    name = "starlark_module",
    srcs = glob(["starlark-rust/starlark_module/src/**/*.rs"]),
    proc_macro = True,
    rustc_flags = [
        "-Aunused_braces",
        "-Wbare_trait_objects",
        "-Wellipsis_inclusive_range_patterns",
        "-Dnon_fmt_panic",
        "-Dunconditional_recursion",
    ],
    deps = [
        ":proc-macro2",
        ":quote",
        ":syn",
    ],
)
