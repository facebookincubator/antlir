##
## @generated by reindeer
## Do not edit by hand.
##
## See third-party/README.md for directions on how to update this.
##

load(
    ":defs.bzl",
    "rust_buildscript_genrule_filter",
    "rust_buildscript_genrule_srcs",
    "third_party_rust_binary",
    "third_party_rust_cxx_library",
    "third_party_rust_library",
    "third_party_rust_prebuilt_cxx_library",
)
load("//antlir/bzl:oss_shim.bzl", "export_file", "python_binary")

export_file(name = "Cargo.lock")

export_file(name = "cargo_cfgs.awk")

export_file(name = "buildrs_rustc_flags.py")

python_binary(
    name = "download",
    srcs = ["download.py"],
    main_module = "third-party.rust.download",
    deps = [
        "//third-party/python:requests",
        "//third-party/python:toml",
    ],
)

third_party_rust_library(
    name = "addr2line-0.15.2",
    srcs = [
        "vendor/addr2line-0.15.2/src/lazy.rs",
        "vendor/addr2line-0.15.2/src/lib.rs",
    ],
    crate = "addr2line",
    crate_root = "vendor/addr2line-0.15.2/src/lib.rs",
    edition = "2015",
    licenses = [
        "vendor/addr2line-0.15.2/LICENSE-APACHE",
        "vendor/addr2line-0.15.2/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [":gimli-0.24.0"],
)

third_party_rust_library(
    name = "adler-1.0.2",
    srcs = [
        "vendor/adler-1.0.2/src/algo.rs",
        "vendor/adler-1.0.2/src/lib.rs",
    ],
    crate = "adler",
    crate_root = "vendor/adler-1.0.2/src/lib.rs",
    edition = "2015",
    licenses = [
        "vendor/adler-1.0.2/LICENSE-0BSD",
        "vendor/adler-1.0.2/LICENSE-APACHE",
        "vendor/adler-1.0.2/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

third_party_rust_library(
    name = "aho-corasick-0.7.18",
    srcs = [
        "vendor/aho-corasick-0.7.18/src/ahocorasick.rs",
        "vendor/aho-corasick-0.7.18/src/automaton.rs",
        "vendor/aho-corasick-0.7.18/src/buffer.rs",
        "vendor/aho-corasick-0.7.18/src/byte_frequencies.rs",
        "vendor/aho-corasick-0.7.18/src/classes.rs",
        "vendor/aho-corasick-0.7.18/src/dfa.rs",
        "vendor/aho-corasick-0.7.18/src/error.rs",
        "vendor/aho-corasick-0.7.18/src/lib.rs",
        "vendor/aho-corasick-0.7.18/src/nfa.rs",
        "vendor/aho-corasick-0.7.18/src/packed/api.rs",
        "vendor/aho-corasick-0.7.18/src/packed/mod.rs",
        "vendor/aho-corasick-0.7.18/src/packed/pattern.rs",
        "vendor/aho-corasick-0.7.18/src/packed/rabinkarp.rs",
        "vendor/aho-corasick-0.7.18/src/packed/teddy/compile.rs",
        "vendor/aho-corasick-0.7.18/src/packed/teddy/mod.rs",
        "vendor/aho-corasick-0.7.18/src/packed/teddy/runtime.rs",
        "vendor/aho-corasick-0.7.18/src/packed/tests.rs",
        "vendor/aho-corasick-0.7.18/src/packed/vector.rs",
        "vendor/aho-corasick-0.7.18/src/prefilter.rs",
        "vendor/aho-corasick-0.7.18/src/state_id.rs",
        "vendor/aho-corasick-0.7.18/src/tests.rs",
    ],
    crate = "aho_corasick",
    crate_root = "vendor/aho-corasick-0.7.18/src/lib.rs",
    edition = "2018",
    features = [
        "default",
        "std",
    ],
    licenses = [
        "vendor/aho-corasick-0.7.18/COPYING",
        "vendor/aho-corasick-0.7.18/LICENSE-MIT",
        "vendor/aho-corasick-0.7.18/UNLICENSE",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [":memchr-2.4.0"],
)

third_party_rust_library(
    name = "ansi_term-0.11.0",
    srcs = [
        "vendor/ansi_term-0.11.0/src/ansi.rs",
        "vendor/ansi_term-0.11.0/src/debug.rs",
        "vendor/ansi_term-0.11.0/src/difference.rs",
        "vendor/ansi_term-0.11.0/src/display.rs",
        "vendor/ansi_term-0.11.0/src/lib.rs",
        "vendor/ansi_term-0.11.0/src/style.rs",
        "vendor/ansi_term-0.11.0/src/windows.rs",
        "vendor/ansi_term-0.11.0/src/write.rs",
    ],
    crate = "ansi_term",
    crate_root = "vendor/ansi_term-0.11.0/src/lib.rs",
    edition = "2015",
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

third_party_rust_library(
    name = "anyhow",
    srcs = [
        "vendor/anyhow-1.0.41/src/backtrace.rs",
        "vendor/anyhow-1.0.41/src/chain.rs",
        "vendor/anyhow-1.0.41/src/context.rs",
        "vendor/anyhow-1.0.41/src/error.rs",
        "vendor/anyhow-1.0.41/src/fmt.rs",
        "vendor/anyhow-1.0.41/src/kind.rs",
        "vendor/anyhow-1.0.41/src/lib.rs",
        "vendor/anyhow-1.0.41/src/macros.rs",
        "vendor/anyhow-1.0.41/src/ptr.rs",
        "vendor/anyhow-1.0.41/src/wrapper.rs",
    ],
    crate = "anyhow",
    crate_root = "vendor/anyhow-1.0.41/src/lib.rs",
    edition = "2018",
    features = [
        "default",
        "std",
    ],
    licenses = [
        "vendor/anyhow-1.0.41/LICENSE-APACHE",
        "vendor/anyhow-1.0.41/LICENSE-MIT",
    ],
    rustc_flags = [
        "--cap-lints=allow",
        "@$(location :anyhow-1.0.41-build-script-build-args)",
    ],
    visibility = ["PUBLIC"],
)

third_party_rust_binary(
    name = "anyhow-1.0.41-build-script-build",
    srcs = ["vendor/anyhow-1.0.41/build.rs"],
    crate = "build_script_build",
    crate_root = "vendor/anyhow-1.0.41/build.rs",
    edition = "2018",
    features = [
        "default",
        "std",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

rust_buildscript_genrule_filter(
    name = "anyhow-1.0.41-build-script-build-args",
    package_name = "anyhow",
    buildscript_rule = ":anyhow-1.0.41-build-script-build",
    cfgs = [],
    features = [
        "default",
        "std",
    ],
    outfile = "args.txt",
    version = "1.0.41",
)

third_party_rust_library(
    name = "async-trait-0.1.50",
    srcs = [
        "vendor/async-trait-0.1.50/src/args.rs",
        "vendor/async-trait-0.1.50/src/expand.rs",
        "vendor/async-trait-0.1.50/src/lib.rs",
        "vendor/async-trait-0.1.50/src/lifetime.rs",
        "vendor/async-trait-0.1.50/src/parse.rs",
        "vendor/async-trait-0.1.50/src/receiver.rs",
    ],
    crate = "async_trait",
    crate_root = "vendor/async-trait-0.1.50/src/lib.rs",
    edition = "2018",
    licenses = [
        "vendor/async-trait-0.1.50/LICENSE-APACHE",
        "vendor/async-trait-0.1.50/LICENSE-MIT",
    ],
    proc_macro = True,
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [
        ":proc-macro2-1.0.27",
        ":quote-1.0.9",
        ":syn-1.0.73",
    ],
)

third_party_rust_binary(
    name = "async-trait-0.1.50-build-script-build",
    srcs = ["vendor/async-trait-0.1.50/build.rs"],
    crate = "build_script_build",
    crate_root = "vendor/async-trait-0.1.50/build.rs",
    edition = "2018",
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

third_party_rust_library(
    name = "atty-0.2.14",
    srcs = ["vendor/atty-0.2.14/src/lib.rs"],
    crate = "atty",
    crate_root = "vendor/atty-0.2.14/src/lib.rs",
    edition = "2015",
    licenses = ["vendor/atty-0.2.14/LICENSE"],
    platform = {
        "linux-x86_64": {
            "deps": [":libc-0.2.97"],
        },
    },
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

third_party_rust_library(
    name = "autocfg-1.0.1",
    srcs = [
        "vendor/autocfg-1.0.1/src/error.rs",
        "vendor/autocfg-1.0.1/src/lib.rs",
        "vendor/autocfg-1.0.1/src/tests.rs",
        "vendor/autocfg-1.0.1/src/version.rs",
    ],
    crate = "autocfg",
    crate_root = "vendor/autocfg-1.0.1/src/lib.rs",
    edition = "2015",
    licenses = [
        "vendor/autocfg-1.0.1/LICENSE-APACHE",
        "vendor/autocfg-1.0.1/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

third_party_rust_library(
    name = "backtrace-0.3.60",
    srcs = [
        "vendor/backtrace-0.3.60/src/backtrace/dbghelp.rs",
        "vendor/backtrace-0.3.60/src/backtrace/libunwind.rs",
        "vendor/backtrace-0.3.60/src/backtrace/miri.rs",
        "vendor/backtrace-0.3.60/src/backtrace/mod.rs",
        "vendor/backtrace-0.3.60/src/backtrace/noop.rs",
        "vendor/backtrace-0.3.60/src/capture.rs",
        "vendor/backtrace-0.3.60/src/dbghelp.rs",
        "vendor/backtrace-0.3.60/src/lib.rs",
        "vendor/backtrace-0.3.60/src/print.rs",
        "vendor/backtrace-0.3.60/src/print/fuchsia.rs",
        "vendor/backtrace-0.3.60/src/symbolize/dbghelp.rs",
        "vendor/backtrace-0.3.60/src/symbolize/gimli.rs",
        "vendor/backtrace-0.3.60/src/symbolize/gimli/coff.rs",
        "vendor/backtrace-0.3.60/src/symbolize/gimli/elf.rs",
        "vendor/backtrace-0.3.60/src/symbolize/gimli/libs_dl_iterate_phdr.rs",
        "vendor/backtrace-0.3.60/src/symbolize/gimli/libs_haiku.rs",
        "vendor/backtrace-0.3.60/src/symbolize/gimli/libs_illumos.rs",
        "vendor/backtrace-0.3.60/src/symbolize/gimli/libs_libnx.rs",
        "vendor/backtrace-0.3.60/src/symbolize/gimli/libs_macos.rs",
        "vendor/backtrace-0.3.60/src/symbolize/gimli/libs_windows.rs",
        "vendor/backtrace-0.3.60/src/symbolize/gimli/macho.rs",
        "vendor/backtrace-0.3.60/src/symbolize/gimli/mmap_fake.rs",
        "vendor/backtrace-0.3.60/src/symbolize/gimli/mmap_unix.rs",
        "vendor/backtrace-0.3.60/src/symbolize/gimli/mmap_windows.rs",
        "vendor/backtrace-0.3.60/src/symbolize/gimli/stash.rs",
        "vendor/backtrace-0.3.60/src/symbolize/miri.rs",
        "vendor/backtrace-0.3.60/src/symbolize/mod.rs",
        "vendor/backtrace-0.3.60/src/symbolize/noop.rs",
        "vendor/backtrace-0.3.60/src/types.rs",
        "vendor/backtrace-0.3.60/src/windows.rs",
    ],
    crate = "backtrace",
    crate_root = "vendor/backtrace-0.3.60/src/lib.rs",
    edition = "2018",
    features = [
        "default",
        "std",
    ],
    licenses = [
        "vendor/backtrace-0.3.60/LICENSE-APACHE",
        "vendor/backtrace-0.3.60/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [
        ":addr2line-0.15.2",
        ":cfg-if-1.0.0",
        ":libc-0.2.97",
        ":miniz_oxide-0.4.4",
        ":object-0.25.2",
        ":rustc-demangle-0.1.19",
    ],
)

third_party_rust_binary(
    name = "backtrace-0.3.60-build-script-build",
    srcs = ["vendor/backtrace-0.3.60/build.rs"],
    crate = "build_script_build",
    crate_root = "vendor/backtrace-0.3.60/build.rs",
    edition = "2018",
    features = [
        "default",
        "std",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [":cc-1.0.68"],
)

third_party_rust_library(
    name = "base64-0.13.0",
    srcs = [
        "vendor/base64-0.13.0/src/chunked_encoder.rs",
        "vendor/base64-0.13.0/src/decode.rs",
        "vendor/base64-0.13.0/src/display.rs",
        "vendor/base64-0.13.0/src/encode.rs",
        "vendor/base64-0.13.0/src/lib.rs",
        "vendor/base64-0.13.0/src/read/decoder.rs",
        "vendor/base64-0.13.0/src/read/decoder_tests.rs",
        "vendor/base64-0.13.0/src/read/mod.rs",
        "vendor/base64-0.13.0/src/tables.rs",
        "vendor/base64-0.13.0/src/tests.rs",
        "vendor/base64-0.13.0/src/write/encoder.rs",
        "vendor/base64-0.13.0/src/write/encoder_string_writer.rs",
        "vendor/base64-0.13.0/src/write/encoder_tests.rs",
        "vendor/base64-0.13.0/src/write/mod.rs",
    ],
    crate = "base64",
    crate_root = "vendor/base64-0.13.0/src/lib.rs",
    edition = "2018",
    features = [
        "default",
        "std",
    ],
    licenses = [
        "vendor/base64-0.13.0/LICENSE-APACHE",
        "vendor/base64-0.13.0/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

third_party_rust_library(
    name = "bitflags-1.2.1",
    srcs = [
        "vendor/bitflags-1.2.1/src/example_generated.rs",
        "vendor/bitflags-1.2.1/src/lib.rs",
    ],
    crate = "bitflags",
    crate_root = "vendor/bitflags-1.2.1/src/lib.rs",
    edition = "2015",
    features = ["default"],
    licenses = [
        "vendor/bitflags-1.2.1/LICENSE-APACHE",
        "vendor/bitflags-1.2.1/LICENSE-MIT",
    ],
    rustc_flags = [
        "--cap-lints=allow",
        "@$(location :bitflags-1.2.1-build-script-build-args)",
    ],
    visibility = [],
)

third_party_rust_binary(
    name = "bitflags-1.2.1-build-script-build",
    srcs = [
        "vendor/bitflags-1.2.1/build.rs",
        "vendor/bitflags-1.2.1/src/example_generated.rs",
        "vendor/bitflags-1.2.1/src/lib.rs",
    ],
    crate = "build_script_build",
    crate_root = "vendor/bitflags-1.2.1/build.rs",
    edition = "2015",
    features = ["default"],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

rust_buildscript_genrule_filter(
    name = "bitflags-1.2.1-build-script-build-args",
    package_name = "bitflags",
    buildscript_rule = ":bitflags-1.2.1-build-script-build",
    cfgs = [],
    features = ["default"],
    outfile = "args.txt",
    version = "1.2.1",
)

third_party_rust_library(
    name = "block-buffer-0.9.0",
    srcs = ["vendor/block-buffer-0.9.0/src/lib.rs"],
    crate = "block_buffer",
    crate_root = "vendor/block-buffer-0.9.0/src/lib.rs",
    edition = "2018",
    licenses = [
        "vendor/block-buffer-0.9.0/LICENSE-APACHE",
        "vendor/block-buffer-0.9.0/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [":generic-array-0.14.4"],
)

third_party_rust_library(
    name = "buf_redux-0.8.4",
    srcs = [
        "vendor/buf_redux-0.8.4/src/benches.rs",
        "vendor/buf_redux-0.8.4/src/buffer/mod.rs",
        "vendor/buf_redux-0.8.4/src/buffer/slice_deque_buf.rs",
        "vendor/buf_redux-0.8.4/src/buffer/std_buf.rs",
        "vendor/buf_redux-0.8.4/src/lib.rs",
        "vendor/buf_redux-0.8.4/src/nightly.rs",
        "vendor/buf_redux-0.8.4/src/policy.rs",
        "vendor/buf_redux-0.8.4/src/ringbuf_tests.rs",
        "vendor/buf_redux-0.8.4/src/std_tests.rs",
    ],
    crate = "buf_redux",
    crate_root = "vendor/buf_redux-0.8.4/src/lib.rs",
    edition = "2015",
    licenses = [
        "vendor/buf_redux-0.8.4/LICENSE-APACHE",
        "vendor/buf_redux-0.8.4/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [
        ":memchr-2.4.0",
        ":safemem-0.3.3",
    ],
)

third_party_rust_library(
    name = "byteorder-1.4.3",
    srcs = [
        "vendor/byteorder-1.4.3/src/io.rs",
        "vendor/byteorder-1.4.3/src/lib.rs",
    ],
    crate = "byteorder",
    crate_root = "vendor/byteorder-1.4.3/src/lib.rs",
    edition = "2018",
    features = [
        "default",
        "std",
    ],
    licenses = [
        "vendor/byteorder-1.4.3/COPYING",
        "vendor/byteorder-1.4.3/LICENSE-MIT",
        "vendor/byteorder-1.4.3/UNLICENSE",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

third_party_rust_library(
    name = "bytes",
    srcs = [
        "vendor/bytes-1.0.1/src/buf/buf_impl.rs",
        "vendor/bytes-1.0.1/src/buf/buf_mut.rs",
        "vendor/bytes-1.0.1/src/buf/chain.rs",
        "vendor/bytes-1.0.1/src/buf/iter.rs",
        "vendor/bytes-1.0.1/src/buf/limit.rs",
        "vendor/bytes-1.0.1/src/buf/mod.rs",
        "vendor/bytes-1.0.1/src/buf/reader.rs",
        "vendor/bytes-1.0.1/src/buf/take.rs",
        "vendor/bytes-1.0.1/src/buf/uninit_slice.rs",
        "vendor/bytes-1.0.1/src/buf/vec_deque.rs",
        "vendor/bytes-1.0.1/src/buf/writer.rs",
        "vendor/bytes-1.0.1/src/bytes.rs",
        "vendor/bytes-1.0.1/src/bytes_mut.rs",
        "vendor/bytes-1.0.1/src/fmt/debug.rs",
        "vendor/bytes-1.0.1/src/fmt/hex.rs",
        "vendor/bytes-1.0.1/src/fmt/mod.rs",
        "vendor/bytes-1.0.1/src/lib.rs",
        "vendor/bytes-1.0.1/src/loom.rs",
        "vendor/bytes-1.0.1/src/serde.rs",
    ],
    crate = "bytes",
    crate_root = "vendor/bytes-1.0.1/src/lib.rs",
    edition = "2018",
    features = [
        "default",
        "serde",
        "std",
    ],
    licenses = ["vendor/bytes-1.0.1/LICENSE"],
    rustc_flags = ["--cap-lints=allow"],
    visibility = ["PUBLIC"],
    deps = [":serde"],
)

third_party_rust_library(
    name = "cc-1.0.68",
    srcs = [
        "vendor/cc-1.0.68/src/com.rs",
        "vendor/cc-1.0.68/src/lib.rs",
        "vendor/cc-1.0.68/src/registry.rs",
        "vendor/cc-1.0.68/src/setup_config.rs",
        "vendor/cc-1.0.68/src/vs_instances.rs",
        "vendor/cc-1.0.68/src/winapi.rs",
        "vendor/cc-1.0.68/src/windows_registry.rs",
    ],
    crate = "cc",
    crate_root = "vendor/cc-1.0.68/src/lib.rs",
    edition = "2018",
    features = [
        "jobserver",
        "parallel",
    ],
    licenses = [
        "vendor/cc-1.0.68/LICENSE-APACHE",
        "vendor/cc-1.0.68/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [":jobserver-0.1.22"],
)

third_party_rust_library(
    name = "cfg-if-0.1.10",
    srcs = ["vendor/cfg-if-0.1.10/src/lib.rs"],
    crate = "cfg_if",
    crate_root = "vendor/cfg-if-0.1.10/src/lib.rs",
    edition = "2018",
    licenses = [
        "vendor/cfg-if-0.1.10/LICENSE-APACHE",
        "vendor/cfg-if-0.1.10/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

third_party_rust_library(
    name = "cfg-if-1.0.0",
    srcs = ["vendor/cfg-if-1.0.0/src/lib.rs"],
    crate = "cfg_if",
    crate_root = "vendor/cfg-if-1.0.0/src/lib.rs",
    edition = "2018",
    licenses = [
        "vendor/cfg-if-1.0.0/LICENSE-APACHE",
        "vendor/cfg-if-1.0.0/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

third_party_rust_library(
    name = "chrono-0.4.19",
    srcs = [
        "vendor/chrono-0.4.19/src/date.rs",
        "vendor/chrono-0.4.19/src/datetime.rs",
        "vendor/chrono-0.4.19/src/div.rs",
        "vendor/chrono-0.4.19/src/format/locales.rs",
        "vendor/chrono-0.4.19/src/format/mod.rs",
        "vendor/chrono-0.4.19/src/format/parse.rs",
        "vendor/chrono-0.4.19/src/format/parsed.rs",
        "vendor/chrono-0.4.19/src/format/scan.rs",
        "vendor/chrono-0.4.19/src/format/strftime.rs",
        "vendor/chrono-0.4.19/src/lib.rs",
        "vendor/chrono-0.4.19/src/naive/date.rs",
        "vendor/chrono-0.4.19/src/naive/datetime.rs",
        "vendor/chrono-0.4.19/src/naive/internals.rs",
        "vendor/chrono-0.4.19/src/naive/isoweek.rs",
        "vendor/chrono-0.4.19/src/naive/time.rs",
        "vendor/chrono-0.4.19/src/offset/fixed.rs",
        "vendor/chrono-0.4.19/src/offset/local.rs",
        "vendor/chrono-0.4.19/src/offset/mod.rs",
        "vendor/chrono-0.4.19/src/offset/utc.rs",
        "vendor/chrono-0.4.19/src/oldtime.rs",
        "vendor/chrono-0.4.19/src/round.rs",
        "vendor/chrono-0.4.19/src/sys.rs",
        "vendor/chrono-0.4.19/src/sys/stub.rs",
        "vendor/chrono-0.4.19/src/sys/unix.rs",
        "vendor/chrono-0.4.19/src/sys/windows.rs",
    ],
    crate = "chrono",
    crate_root = "vendor/chrono-0.4.19/src/lib.rs",
    edition = "2015",
    features = [
        "clock",
        "default",
        "libc",
        "oldtime",
        "serde",
        "std",
        "time",
        "winapi",
    ],
    licenses = ["vendor/chrono-0.4.19/LICENSE.txt"],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [
        ":libc-0.2.97",
        ":num-integer-0.1.44",
        ":num-traits-0.2.14",
        ":serde",
        ":time-0.1.43",
    ],
)

third_party_rust_library(
    name = "clap-2.33.3",
    srcs = [
        "vendor/clap-2.33.3/src/app/help.rs",
        "vendor/clap-2.33.3/src/app/meta.rs",
        "vendor/clap-2.33.3/src/app/mod.rs",
        "vendor/clap-2.33.3/src/app/parser.rs",
        "vendor/clap-2.33.3/src/app/settings.rs",
        "vendor/clap-2.33.3/src/app/usage.rs",
        "vendor/clap-2.33.3/src/app/validator.rs",
        "vendor/clap-2.33.3/src/args/any_arg.rs",
        "vendor/clap-2.33.3/src/args/arg.rs",
        "vendor/clap-2.33.3/src/args/arg_builder/base.rs",
        "vendor/clap-2.33.3/src/args/arg_builder/flag.rs",
        "vendor/clap-2.33.3/src/args/arg_builder/mod.rs",
        "vendor/clap-2.33.3/src/args/arg_builder/option.rs",
        "vendor/clap-2.33.3/src/args/arg_builder/positional.rs",
        "vendor/clap-2.33.3/src/args/arg_builder/switched.rs",
        "vendor/clap-2.33.3/src/args/arg_builder/valued.rs",
        "vendor/clap-2.33.3/src/args/arg_matcher.rs",
        "vendor/clap-2.33.3/src/args/arg_matches.rs",
        "vendor/clap-2.33.3/src/args/group.rs",
        "vendor/clap-2.33.3/src/args/macros.rs",
        "vendor/clap-2.33.3/src/args/matched_arg.rs",
        "vendor/clap-2.33.3/src/args/mod.rs",
        "vendor/clap-2.33.3/src/args/settings.rs",
        "vendor/clap-2.33.3/src/args/subcommand.rs",
        "vendor/clap-2.33.3/src/completions/bash.rs",
        "vendor/clap-2.33.3/src/completions/elvish.rs",
        "vendor/clap-2.33.3/src/completions/fish.rs",
        "vendor/clap-2.33.3/src/completions/macros.rs",
        "vendor/clap-2.33.3/src/completions/mod.rs",
        "vendor/clap-2.33.3/src/completions/powershell.rs",
        "vendor/clap-2.33.3/src/completions/shell.rs",
        "vendor/clap-2.33.3/src/completions/zsh.rs",
        "vendor/clap-2.33.3/src/errors.rs",
        "vendor/clap-2.33.3/src/fmt.rs",
        "vendor/clap-2.33.3/src/lib.rs",
        "vendor/clap-2.33.3/src/macros.rs",
        "vendor/clap-2.33.3/src/map.rs",
        "vendor/clap-2.33.3/src/osstringext.rs",
        "vendor/clap-2.33.3/src/strext.rs",
        "vendor/clap-2.33.3/src/suggestions.rs",
        "vendor/clap-2.33.3/src/usage_parser.rs",
    ],
    crate = "clap",
    crate_root = "vendor/clap-2.33.3/src/lib.rs",
    edition = "2015",
    features = [
        "ansi_term",
        "atty",
        "color",
        "default",
        "strsim",
        "suggestions",
        "vec_map",
    ],
    licenses = ["vendor/clap-2.33.3/LICENSE-MIT"],
    platform = {
        "linux-x86_64": {
            "deps": [":ansi_term-0.11.0"],
        },
    },
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [
        ":atty-0.2.14",
        ":bitflags-1.2.1",
        ":strsim-0.8.0",
        ":textwrap-0.11.0",
        ":unicode-width-0.1.8",
        ":vec_map-0.8.2",
    ],
)

third_party_rust_library(
    name = "cpufeatures-0.1.4",
    srcs = [
        "vendor/cpufeatures-0.1.4/src/aarch64.rs",
        "vendor/cpufeatures-0.1.4/src/lib.rs",
        "vendor/cpufeatures-0.1.4/src/x86.rs",
    ],
    crate = "cpufeatures",
    crate_root = "vendor/cpufeatures-0.1.4/src/lib.rs",
    edition = "2018",
    licenses = [
        "vendor/cpufeatures-0.1.4/LICENSE-APACHE",
        "vendor/cpufeatures-0.1.4/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

third_party_rust_library(
    name = "crossbeam-channel-0.5.1",
    srcs = [
        "vendor/crossbeam-channel-0.5.1/src/channel.rs",
        "vendor/crossbeam-channel-0.5.1/src/context.rs",
        "vendor/crossbeam-channel-0.5.1/src/counter.rs",
        "vendor/crossbeam-channel-0.5.1/src/err.rs",
        "vendor/crossbeam-channel-0.5.1/src/flavors/array.rs",
        "vendor/crossbeam-channel-0.5.1/src/flavors/at.rs",
        "vendor/crossbeam-channel-0.5.1/src/flavors/list.rs",
        "vendor/crossbeam-channel-0.5.1/src/flavors/mod.rs",
        "vendor/crossbeam-channel-0.5.1/src/flavors/never.rs",
        "vendor/crossbeam-channel-0.5.1/src/flavors/tick.rs",
        "vendor/crossbeam-channel-0.5.1/src/flavors/zero.rs",
        "vendor/crossbeam-channel-0.5.1/src/lib.rs",
        "vendor/crossbeam-channel-0.5.1/src/select.rs",
        "vendor/crossbeam-channel-0.5.1/src/select_macro.rs",
        "vendor/crossbeam-channel-0.5.1/src/utils.rs",
        "vendor/crossbeam-channel-0.5.1/src/waker.rs",
    ],
    crate = "crossbeam_channel",
    crate_root = "vendor/crossbeam-channel-0.5.1/src/lib.rs",
    edition = "2018",
    features = [
        "crossbeam-utils",
        "default",
        "std",
    ],
    licenses = [
        "vendor/crossbeam-channel-0.5.1/LICENSE-APACHE",
        "vendor/crossbeam-channel-0.5.1/LICENSE-MIT",
        "vendor/crossbeam-channel-0.5.1/LICENSE-THIRD-PARTY",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [
        ":cfg-if-1.0.0",
        ":crossbeam-utils-0.8.5",
    ],
)

third_party_rust_library(
    name = "crossbeam-utils-0.8.5",
    srcs = [
        "vendor/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs",
        "vendor/crossbeam-utils-0.8.5/src/atomic/consume.rs",
        "vendor/crossbeam-utils-0.8.5/src/atomic/mod.rs",
        "vendor/crossbeam-utils-0.8.5/src/atomic/seq_lock.rs",
        "vendor/crossbeam-utils-0.8.5/src/atomic/seq_lock_wide.rs",
        "vendor/crossbeam-utils-0.8.5/src/backoff.rs",
        "vendor/crossbeam-utils-0.8.5/src/cache_padded.rs",
        "vendor/crossbeam-utils-0.8.5/src/lib.rs",
        "vendor/crossbeam-utils-0.8.5/src/sync/mod.rs",
        "vendor/crossbeam-utils-0.8.5/src/sync/parker.rs",
        "vendor/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs",
        "vendor/crossbeam-utils-0.8.5/src/sync/wait_group.rs",
        "vendor/crossbeam-utils-0.8.5/src/thread.rs",
    ],
    crate = "crossbeam_utils",
    crate_root = "vendor/crossbeam-utils-0.8.5/src/lib.rs",
    edition = "2018",
    env = {
        "CARGO_MANIFEST_DIR": "vendor/crossbeam-utils-0.8.5",
        "CARGO_PKG_NAME": "crossbeam-utils",
        "CARGO_PKG_VERSION": "0.8.5",
        "CARGO_PKG_VERSION_MAJOR": "0",
        "CARGO_PKG_VERSION_MINOR": "8",
        "CARGO_PKG_VERSION_PATCH": "5",
    },
    features = [
        "lazy_static",
        "std",
    ],
    licenses = [
        "vendor/crossbeam-utils-0.8.5/LICENSE-APACHE",
        "vendor/crossbeam-utils-0.8.5/LICENSE-MIT",
    ],
    rustc_flags = [
        "--cap-lints=allow",
        "@$(location :crossbeam-utils-0.8.5-build-script-build-args)",
    ],
    visibility = [],
    deps = [
        ":cfg-if-1.0.0",
        ":lazy_static-1.4.0",
    ],
)

third_party_rust_binary(
    name = "crossbeam-utils-0.8.5-build-script-build",
    srcs = [
        "vendor/crossbeam-utils-0.8.5/build.rs",
        "vendor/crossbeam-utils-0.8.5/no_atomic.rs",
    ],
    crate = "build_script_build",
    crate_root = "vendor/crossbeam-utils-0.8.5/build.rs",
    edition = "2018",
    env = {
        "CARGO_MANIFEST_DIR": "vendor/crossbeam-utils-0.8.5",
        "CARGO_PKG_NAME": "crossbeam-utils",
        "CARGO_PKG_VERSION": "0.8.5",
        "CARGO_PKG_VERSION_MAJOR": "0",
        "CARGO_PKG_VERSION_MINOR": "8",
        "CARGO_PKG_VERSION_PATCH": "5",
    },
    features = [
        "lazy_static",
        "std",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

rust_buildscript_genrule_filter(
    name = "crossbeam-utils-0.8.5-build-script-build-args",
    package_name = "crossbeam-utils",
    buildscript_rule = ":crossbeam-utils-0.8.5-build-script-build",
    cfgs = [],
    features = [
        "lazy_static",
        "std",
    ],
    outfile = "args.txt",
    version = "0.8.5",
)

third_party_rust_library(
    name = "ct-logs-0.8.0",
    srcs = ["vendor/ct-logs-0.8.0/src/lib.rs"],
    crate = "ct_logs",
    crate_root = "vendor/ct-logs-0.8.0/src/lib.rs",
    edition = "2018",
    licenses = [
        "vendor/ct-logs-0.8.0/LICENSE",
        "vendor/ct-logs-0.8.0/LICENSE-APACHE",
        "vendor/ct-logs-0.8.0/LICENSE-ISC",
        "vendor/ct-logs-0.8.0/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [":sct-0.6.1"],
)

third_party_rust_library(
    name = "data-encoding-2.3.2",
    srcs = ["vendor/data-encoding-2.3.2/src/lib.rs"],
    crate = "data_encoding",
    crate_root = "vendor/data-encoding-2.3.2/src/lib.rs",
    edition = "2018",
    features = [
        "alloc",
        "default",
        "std",
    ],
    licenses = ["vendor/data-encoding-2.3.2/LICENSE"],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

third_party_rust_library(
    name = "digest-0.9.0",
    srcs = [
        "vendor/digest-0.9.0/src/dev.rs",
        "vendor/digest-0.9.0/src/digest.rs",
        "vendor/digest-0.9.0/src/dyn_digest.rs",
        "vendor/digest-0.9.0/src/errors.rs",
        "vendor/digest-0.9.0/src/fixed.rs",
        "vendor/digest-0.9.0/src/lib.rs",
        "vendor/digest-0.9.0/src/variable.rs",
        "vendor/digest-0.9.0/src/xof.rs",
    ],
    crate = "digest",
    crate_root = "vendor/digest-0.9.0/src/lib.rs",
    edition = "2018",
    features = [
        "alloc",
        "std",
    ],
    licenses = [
        "vendor/digest-0.9.0/LICENSE-APACHE",
        "vendor/digest-0.9.0/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [":generic-array-0.14.4"],
)

third_party_rust_library(
    name = "dirs-next-2.0.0",
    srcs = [
        "vendor/dirs-next-2.0.0/src/lib.rs",
        "vendor/dirs-next-2.0.0/src/lin.rs",
        "vendor/dirs-next-2.0.0/src/mac.rs",
        "vendor/dirs-next-2.0.0/src/wasm.rs",
        "vendor/dirs-next-2.0.0/src/win.rs",
    ],
    crate = "dirs_next",
    crate_root = "vendor/dirs-next-2.0.0/src/lib.rs",
    edition = "2018",
    licenses = [
        "vendor/dirs-next-2.0.0/LICENSE-APACHE",
        "vendor/dirs-next-2.0.0/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [
        ":cfg-if-1.0.0",
        ":dirs-sys-next-0.1.2",
    ],
)

third_party_rust_library(
    name = "dirs-sys-next-0.1.2",
    srcs = [
        "vendor/dirs-sys-next-0.1.2/src/lib.rs",
        "vendor/dirs-sys-next-0.1.2/src/xdg_user_dirs.rs",
    ],
    crate = "dirs_sys_next",
    crate_root = "vendor/dirs-sys-next-0.1.2/src/lib.rs",
    edition = "2018",
    licenses = [
        "vendor/dirs-sys-next-0.1.2/LICENSE-APACHE",
        "vendor/dirs-sys-next-0.1.2/LICENSE-MIT",
    ],
    platform = {
        "linux-x86_64": {
            "deps": [":libc-0.2.97"],
        },
    },
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

third_party_rust_library(
    name = "either-1.6.1",
    srcs = [
        "vendor/either-1.6.1/src/lib.rs",
        "vendor/either-1.6.1/src/serde_untagged.rs",
        "vendor/either-1.6.1/src/serde_untagged_optional.rs",
    ],
    crate = "either",
    crate_root = "vendor/either-1.6.1/src/lib.rs",
    edition = "2015",
    licenses = [
        "vendor/either-1.6.1/LICENSE-APACHE",
        "vendor/either-1.6.1/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

third_party_rust_library(
    name = "encoding_rs-0.8.28",
    srcs = [
        "vendor/encoding_rs-0.8.28/src/ascii.rs",
        "vendor/encoding_rs-0.8.28/src/big5.rs",
        "vendor/encoding_rs-0.8.28/src/data.rs",
        "vendor/encoding_rs-0.8.28/src/euc_jp.rs",
        "vendor/encoding_rs-0.8.28/src/euc_kr.rs",
        "vendor/encoding_rs-0.8.28/src/gb18030.rs",
        "vendor/encoding_rs-0.8.28/src/handles.rs",
        "vendor/encoding_rs-0.8.28/src/iso_2022_jp.rs",
        "vendor/encoding_rs-0.8.28/src/lib.rs",
        "vendor/encoding_rs-0.8.28/src/macros.rs",
        "vendor/encoding_rs-0.8.28/src/mem.rs",
        "vendor/encoding_rs-0.8.28/src/replacement.rs",
        "vendor/encoding_rs-0.8.28/src/shift_jis.rs",
        "vendor/encoding_rs-0.8.28/src/simd_funcs.rs",
        "vendor/encoding_rs-0.8.28/src/single_byte.rs",
        "vendor/encoding_rs-0.8.28/src/test_data/big5_in.txt",
        "vendor/encoding_rs-0.8.28/src/test_data/big5_in_ref.txt",
        "vendor/encoding_rs-0.8.28/src/test_data/big5_out.txt",
        "vendor/encoding_rs-0.8.28/src/test_data/big5_out_ref.txt",
        "vendor/encoding_rs-0.8.28/src/test_data/euc_kr_in.txt",
        "vendor/encoding_rs-0.8.28/src/test_data/euc_kr_in_ref.txt",
        "vendor/encoding_rs-0.8.28/src/test_data/euc_kr_out.txt",
        "vendor/encoding_rs-0.8.28/src/test_data/euc_kr_out_ref.txt",
        "vendor/encoding_rs-0.8.28/src/test_data/gb18030_in.txt",
        "vendor/encoding_rs-0.8.28/src/test_data/gb18030_in_ref.txt",
        "vendor/encoding_rs-0.8.28/src/test_data/gb18030_out.txt",
        "vendor/encoding_rs-0.8.28/src/test_data/gb18030_out_ref.txt",
        "vendor/encoding_rs-0.8.28/src/test_data/iso_2022_jp_in.txt",
        "vendor/encoding_rs-0.8.28/src/test_data/iso_2022_jp_in_ref.txt",
        "vendor/encoding_rs-0.8.28/src/test_data/iso_2022_jp_out.txt",
        "vendor/encoding_rs-0.8.28/src/test_data/iso_2022_jp_out_ref.txt",
        "vendor/encoding_rs-0.8.28/src/test_data/jis0208_in.txt",
        "vendor/encoding_rs-0.8.28/src/test_data/jis0208_in_ref.txt",
        "vendor/encoding_rs-0.8.28/src/test_data/jis0208_out.txt",
        "vendor/encoding_rs-0.8.28/src/test_data/jis0208_out_ref.txt",
        "vendor/encoding_rs-0.8.28/src/test_data/jis0212_in.txt",
        "vendor/encoding_rs-0.8.28/src/test_data/jis0212_in_ref.txt",
        "vendor/encoding_rs-0.8.28/src/test_data/shift_jis_in.txt",
        "vendor/encoding_rs-0.8.28/src/test_data/shift_jis_in_ref.txt",
        "vendor/encoding_rs-0.8.28/src/test_data/shift_jis_out.txt",
        "vendor/encoding_rs-0.8.28/src/test_data/shift_jis_out_ref.txt",
        "vendor/encoding_rs-0.8.28/src/test_labels_names.rs",
        "vendor/encoding_rs-0.8.28/src/testing.rs",
        "vendor/encoding_rs-0.8.28/src/utf_16.rs",
        "vendor/encoding_rs-0.8.28/src/utf_8.rs",
        "vendor/encoding_rs-0.8.28/src/variant.rs",
        "vendor/encoding_rs-0.8.28/src/x_user_defined.rs",
    ],
    crate = "encoding_rs",
    crate_root = "vendor/encoding_rs-0.8.28/src/lib.rs",
    edition = "2018",
    licenses = [
        "vendor/encoding_rs-0.8.28/LICENSE-APACHE",
        "vendor/encoding_rs-0.8.28/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [":cfg-if-1.0.0"],
)

third_party_rust_binary(
    name = "encoding_rs-0.8.28-build-script-build",
    srcs = ["vendor/encoding_rs-0.8.28/build.rs"],
    crate = "build_script_build",
    crate_root = "vendor/encoding_rs-0.8.28/build.rs",
    edition = "2018",
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

third_party_rust_library(
    name = "enum-as-inner-0.3.3",
    srcs = ["vendor/enum-as-inner-0.3.3/src/lib.rs"],
    crate = "enum_as_inner",
    crate_root = "vendor/enum-as-inner-0.3.3/src/lib.rs",
    edition = "2018",
    licenses = [
        "vendor/enum-as-inner-0.3.3/LICENSE-APACHE",
        "vendor/enum-as-inner-0.3.3/LICENSE-MIT",
    ],
    proc_macro = True,
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [
        ":heck-0.3.3",
        ":proc-macro2-1.0.27",
        ":quote-1.0.9",
        ":syn-1.0.73",
    ],
)

third_party_rust_library(
    name = "failure-0.1.8",
    srcs = [
        "vendor/failure-0.1.8/src/as_fail.rs",
        "vendor/failure-0.1.8/src/backtrace/internal.rs",
        "vendor/failure-0.1.8/src/backtrace/mod.rs",
        "vendor/failure-0.1.8/src/box_std.rs",
        "vendor/failure-0.1.8/src/compat.rs",
        "vendor/failure-0.1.8/src/context.rs",
        "vendor/failure-0.1.8/src/error/error_impl.rs",
        "vendor/failure-0.1.8/src/error/error_impl_small.rs",
        "vendor/failure-0.1.8/src/error/mod.rs",
        "vendor/failure-0.1.8/src/error_message.rs",
        "vendor/failure-0.1.8/src/lib.rs",
        "vendor/failure-0.1.8/src/macros.rs",
        "vendor/failure-0.1.8/src/result_ext.rs",
        "vendor/failure-0.1.8/src/small_error.rs",
        "vendor/failure-0.1.8/src/sync_failure.rs",
    ],
    crate = "failure",
    crate_root = "vendor/failure-0.1.8/src/lib.rs",
    edition = "2015",
    features = [
        "backtrace",
        "default",
        "derive",
        "failure_derive",
        "std",
    ],
    licenses = [
        "vendor/failure-0.1.8/LICENSE-APACHE",
        "vendor/failure-0.1.8/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [
        ":backtrace-0.3.60",
        ":failure_derive-0.1.8",
    ],
)

third_party_rust_library(
    name = "failure_derive-0.1.8",
    srcs = ["vendor/failure_derive-0.1.8/src/lib.rs"],
    crate = "failure_derive",
    crate_root = "vendor/failure_derive-0.1.8/src/lib.rs",
    edition = "2015",
    proc_macro = True,
    rustc_flags = [
        "--cap-lints=allow",
        "@$(location :failure_derive-0.1.8-build-script-build-args)",
    ],
    visibility = [],
    deps = [
        ":proc-macro2-1.0.27",
        ":quote-1.0.9",
        ":syn-1.0.73",
        ":synstructure-0.12.4",
    ],
)

third_party_rust_binary(
    name = "failure_derive-0.1.8-build-script-build",
    srcs = [
        "vendor/failure_derive-0.1.8/build.rs",
        "vendor/failure_derive-0.1.8/src/lib.rs",
        "vendor/failure_derive-0.1.8/tests/backtrace.rs",
        "vendor/failure_derive-0.1.8/tests/custom_type_bounds.rs",
        "vendor/failure_derive-0.1.8/tests/no_derive_display.rs",
        "vendor/failure_derive-0.1.8/tests/tests.rs",
        "vendor/failure_derive-0.1.8/tests/wraps.rs",
    ],
    crate = "build_script_build",
    crate_root = "vendor/failure_derive-0.1.8/build.rs",
    edition = "2015",
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

rust_buildscript_genrule_filter(
    name = "failure_derive-0.1.8-build-script-build-args",
    package_name = "failure_derive",
    buildscript_rule = ":failure_derive-0.1.8-build-script-build",
    cfgs = [],
    features = [],
    outfile = "args.txt",
    version = "0.1.8",
)

third_party_rust_library(
    name = "fb_failure_ext-0.1.3",
    srcs = [
        "vendor/fb_failure_ext-0.1.3/src/context_futures.rs",
        "vendor/fb_failure_ext-0.1.3/src/context_streams.rs",
        "vendor/fb_failure_ext-0.1.3/src/convert.rs",
        "vendor/fb_failure_ext-0.1.3/src/lib.rs",
        "vendor/fb_failure_ext-0.1.3/src/macros.rs",
        "vendor/fb_failure_ext-0.1.3/src/slogkv.rs",
    ],
    crate = "failure_ext",
    crate_root = "vendor/fb_failure_ext-0.1.3/src/lib.rs",
    edition = "2018",
    licenses = [
        "vendor/fb_failure_ext-0.1.3/LICENSE-APACHE",
        "vendor/fb_failure_ext-0.1.3/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [
        ":anyhow",
        ":failure-0.1.8",
        ":futures-0.1.31",
        ":slog",
    ],
)

third_party_rust_library(
    name = "fnv-1.0.7",
    srcs = ["vendor/fnv-1.0.7/lib.rs"],
    crate = "fnv",
    crate_root = "vendor/fnv-1.0.7/lib.rs",
    edition = "2015",
    features = [
        "default",
        "std",
    ],
    licenses = [
        "vendor/fnv-1.0.7/LICENSE-APACHE",
        "vendor/fnv-1.0.7/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

third_party_rust_library(
    name = "foreign-types-0.3.2",
    srcs = ["vendor/foreign-types-0.3.2/src/lib.rs"],
    crate = "foreign_types",
    crate_root = "vendor/foreign-types-0.3.2/src/lib.rs",
    edition = "2015",
    licenses = [
        "vendor/foreign-types-0.3.2/LICENSE-APACHE",
        "vendor/foreign-types-0.3.2/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [":foreign-types-shared-0.1.1"],
)

third_party_rust_library(
    name = "foreign-types-shared-0.1.1",
    srcs = ["vendor/foreign-types-shared-0.1.1/src/lib.rs"],
    crate = "foreign_types_shared",
    crate_root = "vendor/foreign-types-shared-0.1.1/src/lib.rs",
    edition = "2015",
    licenses = [
        "vendor/foreign-types-shared-0.1.1/LICENSE-APACHE",
        "vendor/foreign-types-shared-0.1.1/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

third_party_rust_library(
    name = "form_urlencoded-1.0.1",
    srcs = ["vendor/form_urlencoded-1.0.1/src/lib.rs"],
    crate = "form_urlencoded",
    crate_root = "vendor/form_urlencoded-1.0.1/src/lib.rs",
    edition = "2018",
    licenses = [
        "vendor/form_urlencoded-1.0.1/LICENSE-APACHE",
        "vendor/form_urlencoded-1.0.1/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [
        ":matches-0.1.8",
        ":percent-encoding-2.1.0",
    ],
)

third_party_rust_library(
    name = "futures",
    srcs = ["vendor/futures-0.3.15/src/lib.rs"],
    crate = "futures",
    crate_root = "vendor/futures-0.3.15/src/lib.rs",
    edition = "2018",
    features = [
        "alloc",
        "async-await",
        "compat",
        "default",
        "executor",
        "futures-executor",
        "std",
    ],
    licenses = [
        "vendor/futures-0.3.15/LICENSE-APACHE",
        "vendor/futures-0.3.15/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = ["PUBLIC"],
    deps = [
        ":futures-channel-0.3.15",
        ":futures-core",
        ":futures-executor-0.3.15",
        ":futures-io-0.3.15",
        ":futures-sink-0.3.15",
        ":futures-task-0.3.15",
        ":futures-util",
    ],
)

third_party_rust_library(
    name = "futures-0.1.31",
    srcs = [
        "vendor/futures-0.1.31/src/executor.rs",
        "vendor/futures-0.1.31/src/future/and_then.rs",
        "vendor/futures-0.1.31/src/future/catch_unwind.rs",
        "vendor/futures-0.1.31/src/future/chain.rs",
        "vendor/futures-0.1.31/src/future/either.rs",
        "vendor/futures-0.1.31/src/future/empty.rs",
        "vendor/futures-0.1.31/src/future/flatten.rs",
        "vendor/futures-0.1.31/src/future/flatten_stream.rs",
        "vendor/futures-0.1.31/src/future/from_err.rs",
        "vendor/futures-0.1.31/src/future/fuse.rs",
        "vendor/futures-0.1.31/src/future/inspect.rs",
        "vendor/futures-0.1.31/src/future/into_stream.rs",
        "vendor/futures-0.1.31/src/future/join.rs",
        "vendor/futures-0.1.31/src/future/join_all.rs",
        "vendor/futures-0.1.31/src/future/lazy.rs",
        "vendor/futures-0.1.31/src/future/loop_fn.rs",
        "vendor/futures-0.1.31/src/future/map.rs",
        "vendor/futures-0.1.31/src/future/map_err.rs",
        "vendor/futures-0.1.31/src/future/mod.rs",
        "vendor/futures-0.1.31/src/future/option.rs",
        "vendor/futures-0.1.31/src/future/or_else.rs",
        "vendor/futures-0.1.31/src/future/poll_fn.rs",
        "vendor/futures-0.1.31/src/future/result.rs",
        "vendor/futures-0.1.31/src/future/select.rs",
        "vendor/futures-0.1.31/src/future/select2.rs",
        "vendor/futures-0.1.31/src/future/select_all.rs",
        "vendor/futures-0.1.31/src/future/select_ok.rs",
        "vendor/futures-0.1.31/src/future/shared.rs",
        "vendor/futures-0.1.31/src/future/then.rs",
        "vendor/futures-0.1.31/src/lib.rs",
        "vendor/futures-0.1.31/src/lock.rs",
        "vendor/futures-0.1.31/src/poll.rs",
        "vendor/futures-0.1.31/src/resultstream.rs",
        "vendor/futures-0.1.31/src/sink/buffer.rs",
        "vendor/futures-0.1.31/src/sink/fanout.rs",
        "vendor/futures-0.1.31/src/sink/flush.rs",
        "vendor/futures-0.1.31/src/sink/from_err.rs",
        "vendor/futures-0.1.31/src/sink/map_err.rs",
        "vendor/futures-0.1.31/src/sink/mod.rs",
        "vendor/futures-0.1.31/src/sink/send.rs",
        "vendor/futures-0.1.31/src/sink/send_all.rs",
        "vendor/futures-0.1.31/src/sink/wait.rs",
        "vendor/futures-0.1.31/src/sink/with.rs",
        "vendor/futures-0.1.31/src/sink/with_flat_map.rs",
        "vendor/futures-0.1.31/src/stream/and_then.rs",
        "vendor/futures-0.1.31/src/stream/buffer_unordered.rs",
        "vendor/futures-0.1.31/src/stream/buffered.rs",
        "vendor/futures-0.1.31/src/stream/catch_unwind.rs",
        "vendor/futures-0.1.31/src/stream/chain.rs",
        "vendor/futures-0.1.31/src/stream/channel.rs",
        "vendor/futures-0.1.31/src/stream/chunks.rs",
        "vendor/futures-0.1.31/src/stream/collect.rs",
        "vendor/futures-0.1.31/src/stream/concat.rs",
        "vendor/futures-0.1.31/src/stream/empty.rs",
        "vendor/futures-0.1.31/src/stream/filter.rs",
        "vendor/futures-0.1.31/src/stream/filter_map.rs",
        "vendor/futures-0.1.31/src/stream/flatten.rs",
        "vendor/futures-0.1.31/src/stream/fold.rs",
        "vendor/futures-0.1.31/src/stream/for_each.rs",
        "vendor/futures-0.1.31/src/stream/forward.rs",
        "vendor/futures-0.1.31/src/stream/from_err.rs",
        "vendor/futures-0.1.31/src/stream/fuse.rs",
        "vendor/futures-0.1.31/src/stream/future.rs",
        "vendor/futures-0.1.31/src/stream/futures_ordered.rs",
        "vendor/futures-0.1.31/src/stream/futures_unordered.rs",
        "vendor/futures-0.1.31/src/stream/inspect.rs",
        "vendor/futures-0.1.31/src/stream/inspect_err.rs",
        "vendor/futures-0.1.31/src/stream/iter.rs",
        "vendor/futures-0.1.31/src/stream/iter_ok.rs",
        "vendor/futures-0.1.31/src/stream/iter_result.rs",
        "vendor/futures-0.1.31/src/stream/map.rs",
        "vendor/futures-0.1.31/src/stream/map_err.rs",
        "vendor/futures-0.1.31/src/stream/merge.rs",
        "vendor/futures-0.1.31/src/stream/mod.rs",
        "vendor/futures-0.1.31/src/stream/once.rs",
        "vendor/futures-0.1.31/src/stream/or_else.rs",
        "vendor/futures-0.1.31/src/stream/peek.rs",
        "vendor/futures-0.1.31/src/stream/poll_fn.rs",
        "vendor/futures-0.1.31/src/stream/repeat.rs",
        "vendor/futures-0.1.31/src/stream/select.rs",
        "vendor/futures-0.1.31/src/stream/skip.rs",
        "vendor/futures-0.1.31/src/stream/skip_while.rs",
        "vendor/futures-0.1.31/src/stream/split.rs",
        "vendor/futures-0.1.31/src/stream/take.rs",
        "vendor/futures-0.1.31/src/stream/take_while.rs",
        "vendor/futures-0.1.31/src/stream/then.rs",
        "vendor/futures-0.1.31/src/stream/unfold.rs",
        "vendor/futures-0.1.31/src/stream/wait.rs",
        "vendor/futures-0.1.31/src/stream/zip.rs",
        "vendor/futures-0.1.31/src/sync/bilock.rs",
        "vendor/futures-0.1.31/src/sync/mod.rs",
        "vendor/futures-0.1.31/src/sync/mpsc/mod.rs",
        "vendor/futures-0.1.31/src/sync/mpsc/queue.rs",
        "vendor/futures-0.1.31/src/sync/oneshot.rs",
        "vendor/futures-0.1.31/src/task.rs",
        "vendor/futures-0.1.31/src/task_impl/atomic_task.rs",
        "vendor/futures-0.1.31/src/task_impl/core.rs",
        "vendor/futures-0.1.31/src/task_impl/mod.rs",
        "vendor/futures-0.1.31/src/task_impl/std/data.rs",
        "vendor/futures-0.1.31/src/task_impl/std/mod.rs",
        "vendor/futures-0.1.31/src/task_impl/std/task_rc.rs",
        "vendor/futures-0.1.31/src/task_impl/std/unpark_mutex.rs",
        "vendor/futures-0.1.31/src/unsync/mod.rs",
        "vendor/futures-0.1.31/src/unsync/mpsc.rs",
        "vendor/futures-0.1.31/src/unsync/oneshot.rs",
    ],
    crate = "futures",
    crate_root = "vendor/futures-0.1.31/src/lib.rs",
    edition = "2015",
    features = [
        "default",
        "use_std",
        "with-deprecated",
    ],
    licenses = [
        "vendor/futures-0.1.31/LICENSE-APACHE",
        "vendor/futures-0.1.31/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

third_party_rust_library(
    name = "futures-channel-0.3.15",
    srcs = [
        "vendor/futures-channel-0.3.15/src/lib.rs",
        "vendor/futures-channel-0.3.15/src/lock.rs",
        "vendor/futures-channel-0.3.15/src/mpsc/mod.rs",
        "vendor/futures-channel-0.3.15/src/mpsc/queue.rs",
        "vendor/futures-channel-0.3.15/src/mpsc/sink_impl.rs",
        "vendor/futures-channel-0.3.15/src/oneshot.rs",
    ],
    crate = "futures_channel",
    crate_root = "vendor/futures-channel-0.3.15/src/lib.rs",
    edition = "2018",
    features = [
        "alloc",
        "default",
        "futures-sink",
        "sink",
        "std",
    ],
    licenses = [
        "vendor/futures-channel-0.3.15/LICENSE-APACHE",
        "vendor/futures-channel-0.3.15/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [
        ":futures-core",
        ":futures-sink-0.3.15",
    ],
)

third_party_rust_library(
    name = "futures-core",
    srcs = [
        "vendor/futures-core-0.3.15/src/future.rs",
        "vendor/futures-core-0.3.15/src/lib.rs",
        "vendor/futures-core-0.3.15/src/stream.rs",
        "vendor/futures-core-0.3.15/src/task/__internal/atomic_waker.rs",
        "vendor/futures-core-0.3.15/src/task/__internal/mod.rs",
        "vendor/futures-core-0.3.15/src/task/mod.rs",
        "vendor/futures-core-0.3.15/src/task/poll.rs",
    ],
    crate = "futures_core",
    crate_root = "vendor/futures-core-0.3.15/src/lib.rs",
    edition = "2018",
    env = {
        "CARGO_MANIFEST_DIR": "vendor/futures-core-0.3.15",
        "CARGO_PKG_NAME": "futures-core",
        "CARGO_PKG_VERSION": "0.3.15",
        "CARGO_PKG_VERSION_MAJOR": "0",
        "CARGO_PKG_VERSION_MINOR": "3",
        "CARGO_PKG_VERSION_PATCH": "15",
    },
    features = [
        "alloc",
        "default",
        "std",
    ],
    licenses = [
        "vendor/futures-core-0.3.15/LICENSE-APACHE",
        "vendor/futures-core-0.3.15/LICENSE-MIT",
    ],
    rustc_flags = [
        "--cap-lints=allow",
        "@$(location :futures-core-0.3.15-build-script-build-args)",
    ],
    visibility = ["PUBLIC"],
)

third_party_rust_binary(
    name = "futures-core-0.3.15-build-script-build",
    srcs = [
        "vendor/futures-core-0.3.15/build.rs",
        "vendor/futures-core-0.3.15/no_atomic_cas.rs",
    ],
    crate = "build_script_build",
    crate_root = "vendor/futures-core-0.3.15/build.rs",
    edition = "2018",
    env = {
        "CARGO_MANIFEST_DIR": "vendor/futures-core-0.3.15",
        "CARGO_PKG_NAME": "futures-core",
        "CARGO_PKG_VERSION": "0.3.15",
        "CARGO_PKG_VERSION_MAJOR": "0",
        "CARGO_PKG_VERSION_MINOR": "3",
        "CARGO_PKG_VERSION_PATCH": "15",
    },
    features = [
        "alloc",
        "default",
        "std",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

rust_buildscript_genrule_filter(
    name = "futures-core-0.3.15-build-script-build-args",
    package_name = "futures-core",
    buildscript_rule = ":futures-core-0.3.15-build-script-build",
    cfgs = [],
    features = [
        "alloc",
        "default",
        "std",
    ],
    outfile = "args.txt",
    version = "0.3.15",
)

third_party_rust_library(
    name = "futures-executor-0.3.15",
    srcs = [
        "vendor/futures-executor-0.3.15/src/enter.rs",
        "vendor/futures-executor-0.3.15/src/lib.rs",
        "vendor/futures-executor-0.3.15/src/local_pool.rs",
        "vendor/futures-executor-0.3.15/src/thread_pool.rs",
        "vendor/futures-executor-0.3.15/src/unpark_mutex.rs",
    ],
    crate = "futures_executor",
    crate_root = "vendor/futures-executor-0.3.15/src/lib.rs",
    edition = "2018",
    features = ["std"],
    licenses = [
        "vendor/futures-executor-0.3.15/LICENSE-APACHE",
        "vendor/futures-executor-0.3.15/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [
        ":futures-core",
        ":futures-task-0.3.15",
        ":futures-util",
    ],
)

third_party_rust_library(
    name = "futures-io-0.3.15",
    srcs = ["vendor/futures-io-0.3.15/src/lib.rs"],
    crate = "futures_io",
    crate_root = "vendor/futures-io-0.3.15/src/lib.rs",
    edition = "2018",
    features = ["std"],
    licenses = [
        "vendor/futures-io-0.3.15/LICENSE-APACHE",
        "vendor/futures-io-0.3.15/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

third_party_rust_library(
    name = "futures-macro-0.3.15",
    srcs = [
        "vendor/futures-macro-0.3.15/src/executor.rs",
        "vendor/futures-macro-0.3.15/src/join.rs",
        "vendor/futures-macro-0.3.15/src/lib.rs",
        "vendor/futures-macro-0.3.15/src/select.rs",
    ],
    crate = "futures_macro",
    crate_root = "vendor/futures-macro-0.3.15/src/lib.rs",
    edition = "2018",
    env = {
        "CARGO_MANIFEST_DIR": "vendor/futures-macro-0.3.15",
        "CARGO_PKG_NAME": "futures-macro",
        "CARGO_PKG_VERSION": "0.3.15",
        "CARGO_PKG_VERSION_MAJOR": "0",
        "CARGO_PKG_VERSION_MINOR": "3",
        "CARGO_PKG_VERSION_PATCH": "15",
    },
    licenses = [
        "vendor/futures-macro-0.3.15/LICENSE-APACHE",
        "vendor/futures-macro-0.3.15/LICENSE-MIT",
    ],
    proc_macro = True,
    rustc_flags = [
        "--cap-lints=allow",
        "@$(location :futures-macro-0.3.15-build-script-build-args)",
    ],
    visibility = [],
    deps = [
        ":proc-macro-hack-0.5.19",
        ":proc-macro2-1.0.27",
        ":quote-1.0.9",
        ":syn-1.0.73",
    ],
)

third_party_rust_binary(
    name = "futures-macro-0.3.15-build-script-build",
    srcs = ["vendor/futures-macro-0.3.15/build.rs"],
    crate = "build_script_build",
    crate_root = "vendor/futures-macro-0.3.15/build.rs",
    edition = "2018",
    env = {
        "CARGO_MANIFEST_DIR": "vendor/futures-macro-0.3.15",
        "CARGO_PKG_NAME": "futures-macro",
        "CARGO_PKG_VERSION": "0.3.15",
        "CARGO_PKG_VERSION_MAJOR": "0",
        "CARGO_PKG_VERSION_MINOR": "3",
        "CARGO_PKG_VERSION_PATCH": "15",
    },
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [":autocfg-1.0.1"],
)

rust_buildscript_genrule_filter(
    name = "futures-macro-0.3.15-build-script-build-args",
    package_name = "futures-macro",
    buildscript_rule = ":futures-macro-0.3.15-build-script-build",
    cfgs = [],
    features = [],
    outfile = "args.txt",
    version = "0.3.15",
)

third_party_rust_library(
    name = "futures-sink-0.3.15",
    srcs = ["vendor/futures-sink-0.3.15/src/lib.rs"],
    crate = "futures_sink",
    crate_root = "vendor/futures-sink-0.3.15/src/lib.rs",
    edition = "2018",
    features = [
        "alloc",
        "default",
        "std",
    ],
    licenses = [
        "vendor/futures-sink-0.3.15/LICENSE-APACHE",
        "vendor/futures-sink-0.3.15/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

third_party_rust_library(
    name = "futures-task-0.3.15",
    srcs = [
        "vendor/futures-task-0.3.15/src/arc_wake.rs",
        "vendor/futures-task-0.3.15/src/future_obj.rs",
        "vendor/futures-task-0.3.15/src/lib.rs",
        "vendor/futures-task-0.3.15/src/noop_waker.rs",
        "vendor/futures-task-0.3.15/src/spawn.rs",
        "vendor/futures-task-0.3.15/src/waker.rs",
        "vendor/futures-task-0.3.15/src/waker_ref.rs",
    ],
    crate = "futures_task",
    crate_root = "vendor/futures-task-0.3.15/src/lib.rs",
    edition = "2018",
    features = [
        "alloc",
        "std",
    ],
    licenses = [
        "vendor/futures-task-0.3.15/LICENSE-APACHE",
        "vendor/futures-task-0.3.15/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

third_party_rust_library(
    name = "futures-util",
    srcs = [
        "vendor/futures-util-0.3.15/src/abortable.rs",
        "vendor/futures-util-0.3.15/src/async_await/join_mod.rs",
        "vendor/futures-util-0.3.15/src/async_await/mod.rs",
        "vendor/futures-util-0.3.15/src/async_await/pending.rs",
        "vendor/futures-util-0.3.15/src/async_await/poll.rs",
        "vendor/futures-util-0.3.15/src/async_await/random.rs",
        "vendor/futures-util-0.3.15/src/async_await/select_mod.rs",
        "vendor/futures-util-0.3.15/src/compat/compat01as03.rs",
        "vendor/futures-util-0.3.15/src/compat/compat03as01.rs",
        "vendor/futures-util-0.3.15/src/compat/executor.rs",
        "vendor/futures-util-0.3.15/src/compat/mod.rs",
        "vendor/futures-util-0.3.15/src/fns.rs",
        "vendor/futures-util-0.3.15/src/future/abortable.rs",
        "vendor/futures-util-0.3.15/src/future/either.rs",
        "vendor/futures-util-0.3.15/src/future/future/catch_unwind.rs",
        "vendor/futures-util-0.3.15/src/future/future/flatten.rs",
        "vendor/futures-util-0.3.15/src/future/future/fuse.rs",
        "vendor/futures-util-0.3.15/src/future/future/map.rs",
        "vendor/futures-util-0.3.15/src/future/future/mod.rs",
        "vendor/futures-util-0.3.15/src/future/future/remote_handle.rs",
        "vendor/futures-util-0.3.15/src/future/future/shared.rs",
        "vendor/futures-util-0.3.15/src/future/join.rs",
        "vendor/futures-util-0.3.15/src/future/join_all.rs",
        "vendor/futures-util-0.3.15/src/future/lazy.rs",
        "vendor/futures-util-0.3.15/src/future/maybe_done.rs",
        "vendor/futures-util-0.3.15/src/future/mod.rs",
        "vendor/futures-util-0.3.15/src/future/option.rs",
        "vendor/futures-util-0.3.15/src/future/pending.rs",
        "vendor/futures-util-0.3.15/src/future/poll_fn.rs",
        "vendor/futures-util-0.3.15/src/future/ready.rs",
        "vendor/futures-util-0.3.15/src/future/select.rs",
        "vendor/futures-util-0.3.15/src/future/select_all.rs",
        "vendor/futures-util-0.3.15/src/future/select_ok.rs",
        "vendor/futures-util-0.3.15/src/future/try_future/into_future.rs",
        "vendor/futures-util-0.3.15/src/future/try_future/mod.rs",
        "vendor/futures-util-0.3.15/src/future/try_future/try_flatten.rs",
        "vendor/futures-util-0.3.15/src/future/try_future/try_flatten_err.rs",
        "vendor/futures-util-0.3.15/src/future/try_join.rs",
        "vendor/futures-util-0.3.15/src/future/try_join_all.rs",
        "vendor/futures-util-0.3.15/src/future/try_maybe_done.rs",
        "vendor/futures-util-0.3.15/src/future/try_select.rs",
        "vendor/futures-util-0.3.15/src/io/allow_std.rs",
        "vendor/futures-util-0.3.15/src/io/buf_reader.rs",
        "vendor/futures-util-0.3.15/src/io/buf_writer.rs",
        "vendor/futures-util-0.3.15/src/io/chain.rs",
        "vendor/futures-util-0.3.15/src/io/close.rs",
        "vendor/futures-util-0.3.15/src/io/copy.rs",
        "vendor/futures-util-0.3.15/src/io/copy_buf.rs",
        "vendor/futures-util-0.3.15/src/io/cursor.rs",
        "vendor/futures-util-0.3.15/src/io/empty.rs",
        "vendor/futures-util-0.3.15/src/io/fill_buf.rs",
        "vendor/futures-util-0.3.15/src/io/flush.rs",
        "vendor/futures-util-0.3.15/src/io/into_sink.rs",
        "vendor/futures-util-0.3.15/src/io/lines.rs",
        "vendor/futures-util-0.3.15/src/io/mod.rs",
        "vendor/futures-util-0.3.15/src/io/read.rs",
        "vendor/futures-util-0.3.15/src/io/read_exact.rs",
        "vendor/futures-util-0.3.15/src/io/read_line.rs",
        "vendor/futures-util-0.3.15/src/io/read_to_end.rs",
        "vendor/futures-util-0.3.15/src/io/read_to_string.rs",
        "vendor/futures-util-0.3.15/src/io/read_until.rs",
        "vendor/futures-util-0.3.15/src/io/read_vectored.rs",
        "vendor/futures-util-0.3.15/src/io/repeat.rs",
        "vendor/futures-util-0.3.15/src/io/seek.rs",
        "vendor/futures-util-0.3.15/src/io/sink.rs",
        "vendor/futures-util-0.3.15/src/io/split.rs",
        "vendor/futures-util-0.3.15/src/io/take.rs",
        "vendor/futures-util-0.3.15/src/io/window.rs",
        "vendor/futures-util-0.3.15/src/io/write.rs",
        "vendor/futures-util-0.3.15/src/io/write_all.rs",
        "vendor/futures-util-0.3.15/src/io/write_all_vectored.rs",
        "vendor/futures-util-0.3.15/src/io/write_vectored.rs",
        "vendor/futures-util-0.3.15/src/lib.rs",
        "vendor/futures-util-0.3.15/src/lock/bilock.rs",
        "vendor/futures-util-0.3.15/src/lock/mod.rs",
        "vendor/futures-util-0.3.15/src/lock/mutex.rs",
        "vendor/futures-util-0.3.15/src/never.rs",
        "vendor/futures-util-0.3.15/src/sink/buffer.rs",
        "vendor/futures-util-0.3.15/src/sink/close.rs",
        "vendor/futures-util-0.3.15/src/sink/drain.rs",
        "vendor/futures-util-0.3.15/src/sink/err_into.rs",
        "vendor/futures-util-0.3.15/src/sink/fanout.rs",
        "vendor/futures-util-0.3.15/src/sink/feed.rs",
        "vendor/futures-util-0.3.15/src/sink/flush.rs",
        "vendor/futures-util-0.3.15/src/sink/map_err.rs",
        "vendor/futures-util-0.3.15/src/sink/mod.rs",
        "vendor/futures-util-0.3.15/src/sink/send.rs",
        "vendor/futures-util-0.3.15/src/sink/send_all.rs",
        "vendor/futures-util-0.3.15/src/sink/unfold.rs",
        "vendor/futures-util-0.3.15/src/sink/with.rs",
        "vendor/futures-util-0.3.15/src/sink/with_flat_map.rs",
        "vendor/futures-util-0.3.15/src/stream/abortable.rs",
        "vendor/futures-util-0.3.15/src/stream/empty.rs",
        "vendor/futures-util-0.3.15/src/stream/futures_ordered.rs",
        "vendor/futures-util-0.3.15/src/stream/futures_unordered/abort.rs",
        "vendor/futures-util-0.3.15/src/stream/futures_unordered/iter.rs",
        "vendor/futures-util-0.3.15/src/stream/futures_unordered/mod.rs",
        "vendor/futures-util-0.3.15/src/stream/futures_unordered/ready_to_run_queue.rs",
        "vendor/futures-util-0.3.15/src/stream/futures_unordered/task.rs",
        "vendor/futures-util-0.3.15/src/stream/iter.rs",
        "vendor/futures-util-0.3.15/src/stream/mod.rs",
        "vendor/futures-util-0.3.15/src/stream/once.rs",
        "vendor/futures-util-0.3.15/src/stream/pending.rs",
        "vendor/futures-util-0.3.15/src/stream/poll_fn.rs",
        "vendor/futures-util-0.3.15/src/stream/repeat.rs",
        "vendor/futures-util-0.3.15/src/stream/repeat_with.rs",
        "vendor/futures-util-0.3.15/src/stream/select.rs",
        "vendor/futures-util-0.3.15/src/stream/select_all.rs",
        "vendor/futures-util-0.3.15/src/stream/stream/buffer_unordered.rs",
        "vendor/futures-util-0.3.15/src/stream/stream/buffered.rs",
        "vendor/futures-util-0.3.15/src/stream/stream/catch_unwind.rs",
        "vendor/futures-util-0.3.15/src/stream/stream/chain.rs",
        "vendor/futures-util-0.3.15/src/stream/stream/chunks.rs",
        "vendor/futures-util-0.3.15/src/stream/stream/collect.rs",
        "vendor/futures-util-0.3.15/src/stream/stream/concat.rs",
        "vendor/futures-util-0.3.15/src/stream/stream/cycle.rs",
        "vendor/futures-util-0.3.15/src/stream/stream/enumerate.rs",
        "vendor/futures-util-0.3.15/src/stream/stream/filter.rs",
        "vendor/futures-util-0.3.15/src/stream/stream/filter_map.rs",
        "vendor/futures-util-0.3.15/src/stream/stream/flatten.rs",
        "vendor/futures-util-0.3.15/src/stream/stream/fold.rs",
        "vendor/futures-util-0.3.15/src/stream/stream/for_each.rs",
        "vendor/futures-util-0.3.15/src/stream/stream/for_each_concurrent.rs",
        "vendor/futures-util-0.3.15/src/stream/stream/forward.rs",
        "vendor/futures-util-0.3.15/src/stream/stream/fuse.rs",
        "vendor/futures-util-0.3.15/src/stream/stream/into_future.rs",
        "vendor/futures-util-0.3.15/src/stream/stream/map.rs",
        "vendor/futures-util-0.3.15/src/stream/stream/mod.rs",
        "vendor/futures-util-0.3.15/src/stream/stream/next.rs",
        "vendor/futures-util-0.3.15/src/stream/stream/peek.rs",
        "vendor/futures-util-0.3.15/src/stream/stream/ready_chunks.rs",
        "vendor/futures-util-0.3.15/src/stream/stream/scan.rs",
        "vendor/futures-util-0.3.15/src/stream/stream/select_next_some.rs",
        "vendor/futures-util-0.3.15/src/stream/stream/skip.rs",
        "vendor/futures-util-0.3.15/src/stream/stream/skip_while.rs",
        "vendor/futures-util-0.3.15/src/stream/stream/split.rs",
        "vendor/futures-util-0.3.15/src/stream/stream/take.rs",
        "vendor/futures-util-0.3.15/src/stream/stream/take_until.rs",
        "vendor/futures-util-0.3.15/src/stream/stream/take_while.rs",
        "vendor/futures-util-0.3.15/src/stream/stream/then.rs",
        "vendor/futures-util-0.3.15/src/stream/stream/unzip.rs",
        "vendor/futures-util-0.3.15/src/stream/stream/zip.rs",
        "vendor/futures-util-0.3.15/src/stream/try_stream/and_then.rs",
        "vendor/futures-util-0.3.15/src/stream/try_stream/into_async_read.rs",
        "vendor/futures-util-0.3.15/src/stream/try_stream/into_stream.rs",
        "vendor/futures-util-0.3.15/src/stream/try_stream/mod.rs",
        "vendor/futures-util-0.3.15/src/stream/try_stream/or_else.rs",
        "vendor/futures-util-0.3.15/src/stream/try_stream/try_buffer_unordered.rs",
        "vendor/futures-util-0.3.15/src/stream/try_stream/try_buffered.rs",
        "vendor/futures-util-0.3.15/src/stream/try_stream/try_collect.rs",
        "vendor/futures-util-0.3.15/src/stream/try_stream/try_concat.rs",
        "vendor/futures-util-0.3.15/src/stream/try_stream/try_filter.rs",
        "vendor/futures-util-0.3.15/src/stream/try_stream/try_filter_map.rs",
        "vendor/futures-util-0.3.15/src/stream/try_stream/try_flatten.rs",
        "vendor/futures-util-0.3.15/src/stream/try_stream/try_fold.rs",
        "vendor/futures-util-0.3.15/src/stream/try_stream/try_for_each.rs",
        "vendor/futures-util-0.3.15/src/stream/try_stream/try_for_each_concurrent.rs",
        "vendor/futures-util-0.3.15/src/stream/try_stream/try_next.rs",
        "vendor/futures-util-0.3.15/src/stream/try_stream/try_skip_while.rs",
        "vendor/futures-util-0.3.15/src/stream/try_stream/try_take_while.rs",
        "vendor/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs",
        "vendor/futures-util-0.3.15/src/stream/unfold.rs",
        "vendor/futures-util-0.3.15/src/task/mod.rs",
        "vendor/futures-util-0.3.15/src/task/spawn.rs",
        "vendor/futures-util-0.3.15/src/unfold_state.rs",
    ],
    crate = "futures_util",
    crate_root = "vendor/futures-util-0.3.15/src/lib.rs",
    edition = "2018",
    env = {
        "CARGO_MANIFEST_DIR": "vendor/futures-util-0.3.15",
        "CARGO_PKG_NAME": "futures-util",
        "CARGO_PKG_VERSION": "0.3.15",
        "CARGO_PKG_VERSION_MAJOR": "0",
        "CARGO_PKG_VERSION_MINOR": "3",
        "CARGO_PKG_VERSION_PATCH": "15",
    },
    features = [
        "alloc",
        "async-await",
        "async-await-macro",
        "channel",
        "compat",
        "default",
        "futures-channel",
        "futures-io",
        "futures-macro",
        "futures-sink",
        "futures_01",
        "io",
        "memchr",
        "proc-macro-hack",
        "proc-macro-nested",
        "sink",
        "slab",
        "std",
    ],
    licenses = [
        "vendor/futures-util-0.3.15/LICENSE-APACHE",
        "vendor/futures-util-0.3.15/LICENSE-MIT",
    ],
    named_deps = {
        "futures_01": ":futures-0.1.31",
    },
    rustc_flags = [
        "--cap-lints=allow",
        "@$(location :futures-util-0.3.15-build-script-build-args)",
    ],
    visibility = ["PUBLIC"],
    deps = [
        ":futures-channel-0.3.15",
        ":futures-core",
        ":futures-io-0.3.15",
        ":futures-macro-0.3.15",
        ":futures-sink-0.3.15",
        ":futures-task-0.3.15",
        ":memchr-2.4.0",
        ":pin-project-lite-0.2.6",
        ":pin-utils-0.1.0",
        ":proc-macro-hack-0.5.19",
        ":proc-macro-nested-0.1.7",
        ":slab-0.4.3",
    ],
)

third_party_rust_binary(
    name = "futures-util-0.3.15-build-script-build",
    srcs = [
        "vendor/futures-util-0.3.15/build.rs",
        "vendor/futures-util-0.3.15/no_atomic_cas.rs",
        "vendor/futures-util-0.3.15/src/abortable.rs",
        "vendor/futures-util-0.3.15/src/async_await/join_mod.rs",
        "vendor/futures-util-0.3.15/src/async_await/mod.rs",
        "vendor/futures-util-0.3.15/src/async_await/pending.rs",
        "vendor/futures-util-0.3.15/src/async_await/poll.rs",
        "vendor/futures-util-0.3.15/src/async_await/random.rs",
        "vendor/futures-util-0.3.15/src/async_await/select_mod.rs",
        "vendor/futures-util-0.3.15/src/compat/compat01as03.rs",
        "vendor/futures-util-0.3.15/src/compat/compat03as01.rs",
        "vendor/futures-util-0.3.15/src/compat/executor.rs",
        "vendor/futures-util-0.3.15/src/compat/mod.rs",
        "vendor/futures-util-0.3.15/src/fns.rs",
        "vendor/futures-util-0.3.15/src/future/abortable.rs",
        "vendor/futures-util-0.3.15/src/future/either.rs",
        "vendor/futures-util-0.3.15/src/future/future/catch_unwind.rs",
        "vendor/futures-util-0.3.15/src/future/future/flatten.rs",
        "vendor/futures-util-0.3.15/src/future/future/fuse.rs",
        "vendor/futures-util-0.3.15/src/future/future/map.rs",
        "vendor/futures-util-0.3.15/src/future/future/mod.rs",
        "vendor/futures-util-0.3.15/src/future/future/remote_handle.rs",
        "vendor/futures-util-0.3.15/src/future/future/shared.rs",
        "vendor/futures-util-0.3.15/src/future/join.rs",
        "vendor/futures-util-0.3.15/src/future/join_all.rs",
        "vendor/futures-util-0.3.15/src/future/lazy.rs",
        "vendor/futures-util-0.3.15/src/future/maybe_done.rs",
        "vendor/futures-util-0.3.15/src/future/mod.rs",
        "vendor/futures-util-0.3.15/src/future/option.rs",
        "vendor/futures-util-0.3.15/src/future/pending.rs",
        "vendor/futures-util-0.3.15/src/future/poll_fn.rs",
        "vendor/futures-util-0.3.15/src/future/ready.rs",
        "vendor/futures-util-0.3.15/src/future/select.rs",
        "vendor/futures-util-0.3.15/src/future/select_all.rs",
        "vendor/futures-util-0.3.15/src/future/select_ok.rs",
        "vendor/futures-util-0.3.15/src/future/try_future/into_future.rs",
        "vendor/futures-util-0.3.15/src/future/try_future/mod.rs",
        "vendor/futures-util-0.3.15/src/future/try_future/try_flatten.rs",
        "vendor/futures-util-0.3.15/src/future/try_future/try_flatten_err.rs",
        "vendor/futures-util-0.3.15/src/future/try_join.rs",
        "vendor/futures-util-0.3.15/src/future/try_join_all.rs",
        "vendor/futures-util-0.3.15/src/future/try_maybe_done.rs",
        "vendor/futures-util-0.3.15/src/future/try_select.rs",
        "vendor/futures-util-0.3.15/src/io/allow_std.rs",
        "vendor/futures-util-0.3.15/src/io/buf_reader.rs",
        "vendor/futures-util-0.3.15/src/io/buf_writer.rs",
        "vendor/futures-util-0.3.15/src/io/chain.rs",
        "vendor/futures-util-0.3.15/src/io/close.rs",
        "vendor/futures-util-0.3.15/src/io/copy.rs",
        "vendor/futures-util-0.3.15/src/io/copy_buf.rs",
        "vendor/futures-util-0.3.15/src/io/cursor.rs",
        "vendor/futures-util-0.3.15/src/io/empty.rs",
        "vendor/futures-util-0.3.15/src/io/fill_buf.rs",
        "vendor/futures-util-0.3.15/src/io/flush.rs",
        "vendor/futures-util-0.3.15/src/io/into_sink.rs",
        "vendor/futures-util-0.3.15/src/io/lines.rs",
        "vendor/futures-util-0.3.15/src/io/mod.rs",
        "vendor/futures-util-0.3.15/src/io/read.rs",
        "vendor/futures-util-0.3.15/src/io/read_exact.rs",
        "vendor/futures-util-0.3.15/src/io/read_line.rs",
        "vendor/futures-util-0.3.15/src/io/read_to_end.rs",
        "vendor/futures-util-0.3.15/src/io/read_to_string.rs",
        "vendor/futures-util-0.3.15/src/io/read_until.rs",
        "vendor/futures-util-0.3.15/src/io/read_vectored.rs",
        "vendor/futures-util-0.3.15/src/io/repeat.rs",
        "vendor/futures-util-0.3.15/src/io/seek.rs",
        "vendor/futures-util-0.3.15/src/io/sink.rs",
        "vendor/futures-util-0.3.15/src/io/split.rs",
        "vendor/futures-util-0.3.15/src/io/take.rs",
        "vendor/futures-util-0.3.15/src/io/window.rs",
        "vendor/futures-util-0.3.15/src/io/write.rs",
        "vendor/futures-util-0.3.15/src/io/write_all.rs",
        "vendor/futures-util-0.3.15/src/io/write_all_vectored.rs",
        "vendor/futures-util-0.3.15/src/io/write_vectored.rs",
        "vendor/futures-util-0.3.15/src/lib.rs",
        "vendor/futures-util-0.3.15/src/lock/bilock.rs",
        "vendor/futures-util-0.3.15/src/lock/mod.rs",
        "vendor/futures-util-0.3.15/src/lock/mutex.rs",
        "vendor/futures-util-0.3.15/src/never.rs",
        "vendor/futures-util-0.3.15/src/sink/buffer.rs",
        "vendor/futures-util-0.3.15/src/sink/close.rs",
        "vendor/futures-util-0.3.15/src/sink/drain.rs",
        "vendor/futures-util-0.3.15/src/sink/err_into.rs",
        "vendor/futures-util-0.3.15/src/sink/fanout.rs",
        "vendor/futures-util-0.3.15/src/sink/feed.rs",
        "vendor/futures-util-0.3.15/src/sink/flush.rs",
        "vendor/futures-util-0.3.15/src/sink/map_err.rs",
        "vendor/futures-util-0.3.15/src/sink/mod.rs",
        "vendor/futures-util-0.3.15/src/sink/send.rs",
        "vendor/futures-util-0.3.15/src/sink/send_all.rs",
        "vendor/futures-util-0.3.15/src/sink/unfold.rs",
        "vendor/futures-util-0.3.15/src/sink/with.rs",
        "vendor/futures-util-0.3.15/src/sink/with_flat_map.rs",
        "vendor/futures-util-0.3.15/src/stream/abortable.rs",
        "vendor/futures-util-0.3.15/src/stream/empty.rs",
        "vendor/futures-util-0.3.15/src/stream/futures_ordered.rs",
        "vendor/futures-util-0.3.15/src/stream/futures_unordered/abort.rs",
        "vendor/futures-util-0.3.15/src/stream/futures_unordered/iter.rs",
        "vendor/futures-util-0.3.15/src/stream/futures_unordered/mod.rs",
        "vendor/futures-util-0.3.15/src/stream/futures_unordered/ready_to_run_queue.rs",
        "vendor/futures-util-0.3.15/src/stream/futures_unordered/task.rs",
        "vendor/futures-util-0.3.15/src/stream/iter.rs",
        "vendor/futures-util-0.3.15/src/stream/mod.rs",
        "vendor/futures-util-0.3.15/src/stream/once.rs",
        "vendor/futures-util-0.3.15/src/stream/pending.rs",
        "vendor/futures-util-0.3.15/src/stream/poll_fn.rs",
        "vendor/futures-util-0.3.15/src/stream/repeat.rs",
        "vendor/futures-util-0.3.15/src/stream/repeat_with.rs",
        "vendor/futures-util-0.3.15/src/stream/select.rs",
        "vendor/futures-util-0.3.15/src/stream/select_all.rs",
        "vendor/futures-util-0.3.15/src/stream/stream/buffer_unordered.rs",
        "vendor/futures-util-0.3.15/src/stream/stream/buffered.rs",
        "vendor/futures-util-0.3.15/src/stream/stream/catch_unwind.rs",
        "vendor/futures-util-0.3.15/src/stream/stream/chain.rs",
        "vendor/futures-util-0.3.15/src/stream/stream/chunks.rs",
        "vendor/futures-util-0.3.15/src/stream/stream/collect.rs",
        "vendor/futures-util-0.3.15/src/stream/stream/concat.rs",
        "vendor/futures-util-0.3.15/src/stream/stream/cycle.rs",
        "vendor/futures-util-0.3.15/src/stream/stream/enumerate.rs",
        "vendor/futures-util-0.3.15/src/stream/stream/filter.rs",
        "vendor/futures-util-0.3.15/src/stream/stream/filter_map.rs",
        "vendor/futures-util-0.3.15/src/stream/stream/flatten.rs",
        "vendor/futures-util-0.3.15/src/stream/stream/fold.rs",
        "vendor/futures-util-0.3.15/src/stream/stream/for_each.rs",
        "vendor/futures-util-0.3.15/src/stream/stream/for_each_concurrent.rs",
        "vendor/futures-util-0.3.15/src/stream/stream/forward.rs",
        "vendor/futures-util-0.3.15/src/stream/stream/fuse.rs",
        "vendor/futures-util-0.3.15/src/stream/stream/into_future.rs",
        "vendor/futures-util-0.3.15/src/stream/stream/map.rs",
        "vendor/futures-util-0.3.15/src/stream/stream/mod.rs",
        "vendor/futures-util-0.3.15/src/stream/stream/next.rs",
        "vendor/futures-util-0.3.15/src/stream/stream/peek.rs",
        "vendor/futures-util-0.3.15/src/stream/stream/ready_chunks.rs",
        "vendor/futures-util-0.3.15/src/stream/stream/scan.rs",
        "vendor/futures-util-0.3.15/src/stream/stream/select_next_some.rs",
        "vendor/futures-util-0.3.15/src/stream/stream/skip.rs",
        "vendor/futures-util-0.3.15/src/stream/stream/skip_while.rs",
        "vendor/futures-util-0.3.15/src/stream/stream/split.rs",
        "vendor/futures-util-0.3.15/src/stream/stream/take.rs",
        "vendor/futures-util-0.3.15/src/stream/stream/take_until.rs",
        "vendor/futures-util-0.3.15/src/stream/stream/take_while.rs",
        "vendor/futures-util-0.3.15/src/stream/stream/then.rs",
        "vendor/futures-util-0.3.15/src/stream/stream/unzip.rs",
        "vendor/futures-util-0.3.15/src/stream/stream/zip.rs",
        "vendor/futures-util-0.3.15/src/stream/try_stream/and_then.rs",
        "vendor/futures-util-0.3.15/src/stream/try_stream/into_async_read.rs",
        "vendor/futures-util-0.3.15/src/stream/try_stream/into_stream.rs",
        "vendor/futures-util-0.3.15/src/stream/try_stream/mod.rs",
        "vendor/futures-util-0.3.15/src/stream/try_stream/or_else.rs",
        "vendor/futures-util-0.3.15/src/stream/try_stream/try_buffer_unordered.rs",
        "vendor/futures-util-0.3.15/src/stream/try_stream/try_buffered.rs",
        "vendor/futures-util-0.3.15/src/stream/try_stream/try_collect.rs",
        "vendor/futures-util-0.3.15/src/stream/try_stream/try_concat.rs",
        "vendor/futures-util-0.3.15/src/stream/try_stream/try_filter.rs",
        "vendor/futures-util-0.3.15/src/stream/try_stream/try_filter_map.rs",
        "vendor/futures-util-0.3.15/src/stream/try_stream/try_flatten.rs",
        "vendor/futures-util-0.3.15/src/stream/try_stream/try_fold.rs",
        "vendor/futures-util-0.3.15/src/stream/try_stream/try_for_each.rs",
        "vendor/futures-util-0.3.15/src/stream/try_stream/try_for_each_concurrent.rs",
        "vendor/futures-util-0.3.15/src/stream/try_stream/try_next.rs",
        "vendor/futures-util-0.3.15/src/stream/try_stream/try_skip_while.rs",
        "vendor/futures-util-0.3.15/src/stream/try_stream/try_take_while.rs",
        "vendor/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs",
        "vendor/futures-util-0.3.15/src/stream/unfold.rs",
        "vendor/futures-util-0.3.15/src/task/mod.rs",
        "vendor/futures-util-0.3.15/src/task/spawn.rs",
        "vendor/futures-util-0.3.15/src/unfold_state.rs",
    ],
    crate = "build_script_build",
    crate_root = "vendor/futures-util-0.3.15/build.rs",
    edition = "2018",
    env = {
        "CARGO_MANIFEST_DIR": "vendor/futures-util-0.3.15",
        "CARGO_PKG_NAME": "futures-util",
        "CARGO_PKG_VERSION": "0.3.15",
        "CARGO_PKG_VERSION_MAJOR": "0",
        "CARGO_PKG_VERSION_MINOR": "3",
        "CARGO_PKG_VERSION_PATCH": "15",
    },
    features = [
        "alloc",
        "async-await",
        "async-await-macro",
        "channel",
        "compat",
        "default",
        "futures-channel",
        "futures-io",
        "futures-macro",
        "futures-sink",
        "futures_01",
        "io",
        "memchr",
        "proc-macro-hack",
        "proc-macro-nested",
        "sink",
        "slab",
        "std",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [":autocfg-1.0.1"],
)

rust_buildscript_genrule_filter(
    name = "futures-util-0.3.15-build-script-build-args",
    package_name = "futures-util",
    buildscript_rule = ":futures-util-0.3.15-build-script-build",
    cfgs = [],
    features = [
        "alloc",
        "async-await",
        "async-await-macro",
        "channel",
        "compat",
        "default",
        "futures-channel",
        "futures-io",
        "futures-macro",
        "futures-sink",
        "futures_01",
        "io",
        "memchr",
        "proc-macro-hack",
        "proc-macro-nested",
        "sink",
        "slab",
        "std",
    ],
    outfile = "args.txt",
    version = "0.3.15",
)

third_party_rust_library(
    name = "generic-array-0.14.4",
    srcs = [
        "vendor/generic-array-0.14.4/src/arr.rs",
        "vendor/generic-array-0.14.4/src/functional.rs",
        "vendor/generic-array-0.14.4/src/hex.rs",
        "vendor/generic-array-0.14.4/src/impl_serde.rs",
        "vendor/generic-array-0.14.4/src/impls.rs",
        "vendor/generic-array-0.14.4/src/iter.rs",
        "vendor/generic-array-0.14.4/src/lib.rs",
        "vendor/generic-array-0.14.4/src/sequence.rs",
    ],
    crate = "generic_array",
    crate_root = "vendor/generic-array-0.14.4/src/lib.rs",
    edition = "2015",
    licenses = ["vendor/generic-array-0.14.4/LICENSE"],
    rustc_flags = [
        "--cap-lints=allow",
        "@$(location :generic-array-0.14.4-build-script-build-args)",
    ],
    visibility = [],
    deps = [":typenum-1.13.0"],
)

third_party_rust_binary(
    name = "generic-array-0.14.4-build-script-build",
    srcs = [
        "vendor/generic-array-0.14.4/build.rs",
        "vendor/generic-array-0.14.4/src/arr.rs",
        "vendor/generic-array-0.14.4/src/functional.rs",
        "vendor/generic-array-0.14.4/src/hex.rs",
        "vendor/generic-array-0.14.4/src/impl_serde.rs",
        "vendor/generic-array-0.14.4/src/impls.rs",
        "vendor/generic-array-0.14.4/src/iter.rs",
        "vendor/generic-array-0.14.4/src/lib.rs",
        "vendor/generic-array-0.14.4/src/sequence.rs",
        "vendor/generic-array-0.14.4/tests/arr.rs",
        "vendor/generic-array-0.14.4/tests/generics.rs",
        "vendor/generic-array-0.14.4/tests/hex.rs",
        "vendor/generic-array-0.14.4/tests/import_name.rs",
        "vendor/generic-array-0.14.4/tests/iter.rs",
        "vendor/generic-array-0.14.4/tests/mod.rs",
    ],
    crate = "build_script_build",
    crate_root = "vendor/generic-array-0.14.4/build.rs",
    edition = "2015",
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [":version_check-0.9.3"],
)

rust_buildscript_genrule_filter(
    name = "generic-array-0.14.4-build-script-build-args",
    package_name = "generic-array",
    buildscript_rule = ":generic-array-0.14.4-build-script-build",
    cfgs = [],
    features = [],
    outfile = "args.txt",
    version = "0.14.4",
)

third_party_rust_library(
    name = "getrandom-0.1.16",
    srcs = [
        "vendor/getrandom-0.1.16/src/bsd_arandom.rs",
        "vendor/getrandom-0.1.16/src/cloudabi.rs",
        "vendor/getrandom-0.1.16/src/dummy.rs",
        "vendor/getrandom-0.1.16/src/error.rs",
        "vendor/getrandom-0.1.16/src/error_impls.rs",
        "vendor/getrandom-0.1.16/src/fuchsia.rs",
        "vendor/getrandom-0.1.16/src/ios.rs",
        "vendor/getrandom-0.1.16/src/lib.rs",
        "vendor/getrandom-0.1.16/src/linux_android.rs",
        "vendor/getrandom-0.1.16/src/macos.rs",
        "vendor/getrandom-0.1.16/src/openbsd.rs",
        "vendor/getrandom-0.1.16/src/rdrand.rs",
        "vendor/getrandom-0.1.16/src/solaris_illumos.rs",
        "vendor/getrandom-0.1.16/src/use_file.rs",
        "vendor/getrandom-0.1.16/src/util.rs",
        "vendor/getrandom-0.1.16/src/util_libc.rs",
        "vendor/getrandom-0.1.16/src/vxworks.rs",
        "vendor/getrandom-0.1.16/src/wasi.rs",
        "vendor/getrandom-0.1.16/src/wasm32_bindgen.rs",
        "vendor/getrandom-0.1.16/src/wasm32_stdweb.rs",
        "vendor/getrandom-0.1.16/src/windows.rs",
        "vendor/getrandom-0.1.16/src/windows_uwp.rs",
    ],
    crate = "getrandom",
    crate_root = "vendor/getrandom-0.1.16/src/lib.rs",
    edition = "2018",
    features = ["std"],
    licenses = [
        "vendor/getrandom-0.1.16/LICENSE-APACHE",
        "vendor/getrandom-0.1.16/LICENSE-MIT",
    ],
    platform = {
        "linux-x86_64": {
            "deps": [":libc-0.2.97"],
        },
    },
    rustc_flags = [
        "--cap-lints=allow",
        "@$(location :getrandom-0.1.16-build-script-build-args)",
    ],
    visibility = [],
    deps = [":cfg-if-1.0.0"],
)

third_party_rust_binary(
    name = "getrandom-0.1.16-build-script-build",
    srcs = ["vendor/getrandom-0.1.16/build.rs"],
    crate = "build_script_build",
    crate_root = "vendor/getrandom-0.1.16/build.rs",
    edition = "2018",
    features = ["std"],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

rust_buildscript_genrule_filter(
    name = "getrandom-0.1.16-build-script-build-args",
    package_name = "getrandom",
    buildscript_rule = ":getrandom-0.1.16-build-script-build",
    cfgs = [],
    features = ["std"],
    outfile = "args.txt",
    version = "0.1.16",
)

third_party_rust_library(
    name = "getrandom-0.2.3",
    srcs = [
        "vendor/getrandom-0.2.3/src/bsd_arandom.rs",
        "vendor/getrandom-0.2.3/src/custom.rs",
        "vendor/getrandom-0.2.3/src/dragonfly.rs",
        "vendor/getrandom-0.2.3/src/error.rs",
        "vendor/getrandom-0.2.3/src/error_impls.rs",
        "vendor/getrandom-0.2.3/src/fuchsia.rs",
        "vendor/getrandom-0.2.3/src/ios.rs",
        "vendor/getrandom-0.2.3/src/js.rs",
        "vendor/getrandom-0.2.3/src/lib.rs",
        "vendor/getrandom-0.2.3/src/linux_android.rs",
        "vendor/getrandom-0.2.3/src/macos.rs",
        "vendor/getrandom-0.2.3/src/openbsd.rs",
        "vendor/getrandom-0.2.3/src/rdrand.rs",
        "vendor/getrandom-0.2.3/src/solaris_illumos.rs",
        "vendor/getrandom-0.2.3/src/use_file.rs",
        "vendor/getrandom-0.2.3/src/util.rs",
        "vendor/getrandom-0.2.3/src/util_libc.rs",
        "vendor/getrandom-0.2.3/src/vxworks.rs",
        "vendor/getrandom-0.2.3/src/wasi.rs",
        "vendor/getrandom-0.2.3/src/windows.rs",
    ],
    crate = "getrandom",
    crate_root = "vendor/getrandom-0.2.3/src/lib.rs",
    edition = "2018",
    features = ["std"],
    licenses = [
        "vendor/getrandom-0.2.3/LICENSE-APACHE",
        "vendor/getrandom-0.2.3/LICENSE-MIT",
    ],
    platform = {
        "linux-x86_64": {
            "deps": [":libc-0.2.97"],
        },
    },
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [":cfg-if-1.0.0"],
)

third_party_rust_library(
    name = "gimli-0.24.0",
    srcs = [
        "vendor/gimli-0.24.0/src/arch.rs",
        "vendor/gimli-0.24.0/src/common.rs",
        "vendor/gimli-0.24.0/src/constants.rs",
        "vendor/gimli-0.24.0/src/endianity.rs",
        "vendor/gimli-0.24.0/src/leb128.rs",
        "vendor/gimli-0.24.0/src/lib.rs",
        "vendor/gimli-0.24.0/src/read/abbrev.rs",
        "vendor/gimli-0.24.0/src/read/addr.rs",
        "vendor/gimli-0.24.0/src/read/aranges.rs",
        "vendor/gimli-0.24.0/src/read/cfi.rs",
        "vendor/gimli-0.24.0/src/read/dwarf.rs",
        "vendor/gimli-0.24.0/src/read/endian_reader.rs",
        "vendor/gimli-0.24.0/src/read/endian_slice.rs",
        "vendor/gimli-0.24.0/src/read/line.rs",
        "vendor/gimli-0.24.0/src/read/lists.rs",
        "vendor/gimli-0.24.0/src/read/loclists.rs",
        "vendor/gimli-0.24.0/src/read/lookup.rs",
        "vendor/gimli-0.24.0/src/read/mod.rs",
        "vendor/gimli-0.24.0/src/read/op.rs",
        "vendor/gimli-0.24.0/src/read/pubnames.rs",
        "vendor/gimli-0.24.0/src/read/pubtypes.rs",
        "vendor/gimli-0.24.0/src/read/reader.rs",
        "vendor/gimli-0.24.0/src/read/rnglists.rs",
        "vendor/gimli-0.24.0/src/read/str.rs",
        "vendor/gimli-0.24.0/src/read/unit.rs",
        "vendor/gimli-0.24.0/src/read/value.rs",
        "vendor/gimli-0.24.0/src/test_util.rs",
        "vendor/gimli-0.24.0/src/write/abbrev.rs",
        "vendor/gimli-0.24.0/src/write/cfi.rs",
        "vendor/gimli-0.24.0/src/write/dwarf.rs",
        "vendor/gimli-0.24.0/src/write/endian_vec.rs",
        "vendor/gimli-0.24.0/src/write/line.rs",
        "vendor/gimli-0.24.0/src/write/loc.rs",
        "vendor/gimli-0.24.0/src/write/mod.rs",
        "vendor/gimli-0.24.0/src/write/op.rs",
        "vendor/gimli-0.24.0/src/write/range.rs",
        "vendor/gimli-0.24.0/src/write/section.rs",
        "vendor/gimli-0.24.0/src/write/str.rs",
        "vendor/gimli-0.24.0/src/write/unit.rs",
        "vendor/gimli-0.24.0/src/write/writer.rs",
    ],
    crate = "gimli",
    crate_root = "vendor/gimli-0.24.0/src/lib.rs",
    edition = "2018",
    features = ["read"],
    licenses = [
        "vendor/gimli-0.24.0/LICENSE-APACHE",
        "vendor/gimli-0.24.0/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

third_party_rust_library(
    name = "goblin",
    srcs = [
        "vendor/goblin-0.3.4/src/archive/mod.rs",
        "vendor/goblin-0.3.4/src/elf/compression_header.rs",
        "vendor/goblin-0.3.4/src/elf/constants_header.rs",
        "vendor/goblin-0.3.4/src/elf/constants_relocation.rs",
        "vendor/goblin-0.3.4/src/elf/dynamic.rs",
        "vendor/goblin-0.3.4/src/elf/gnu_hash.rs",
        "vendor/goblin-0.3.4/src/elf/header.rs",
        "vendor/goblin-0.3.4/src/elf/mod.rs",
        "vendor/goblin-0.3.4/src/elf/note.rs",
        "vendor/goblin-0.3.4/src/elf/program_header.rs",
        "vendor/goblin-0.3.4/src/elf/reloc.rs",
        "vendor/goblin-0.3.4/src/elf/section_header.rs",
        "vendor/goblin-0.3.4/src/elf/sym.rs",
        "vendor/goblin-0.3.4/src/error.rs",
        "vendor/goblin-0.3.4/src/lib.rs",
        "vendor/goblin-0.3.4/src/mach/bind_opcodes.rs",
        "vendor/goblin-0.3.4/src/mach/constants.rs",
        "vendor/goblin-0.3.4/src/mach/exports.rs",
        "vendor/goblin-0.3.4/src/mach/fat.rs",
        "vendor/goblin-0.3.4/src/mach/header.rs",
        "vendor/goblin-0.3.4/src/mach/imports.rs",
        "vendor/goblin-0.3.4/src/mach/load_command.rs",
        "vendor/goblin-0.3.4/src/mach/mod.rs",
        "vendor/goblin-0.3.4/src/mach/relocation.rs",
        "vendor/goblin-0.3.4/src/mach/segment.rs",
        "vendor/goblin-0.3.4/src/mach/symbols.rs",
        "vendor/goblin-0.3.4/src/pe/characteristic.rs",
        "vendor/goblin-0.3.4/src/pe/data_directories.rs",
        "vendor/goblin-0.3.4/src/pe/debug.rs",
        "vendor/goblin-0.3.4/src/pe/exception.rs",
        "vendor/goblin-0.3.4/src/pe/export.rs",
        "vendor/goblin-0.3.4/src/pe/header.rs",
        "vendor/goblin-0.3.4/src/pe/import.rs",
        "vendor/goblin-0.3.4/src/pe/mod.rs",
        "vendor/goblin-0.3.4/src/pe/optional_header.rs",
        "vendor/goblin-0.3.4/src/pe/options.rs",
        "vendor/goblin-0.3.4/src/pe/relocation.rs",
        "vendor/goblin-0.3.4/src/pe/section_table.rs",
        "vendor/goblin-0.3.4/src/pe/symbol.rs",
        "vendor/goblin-0.3.4/src/pe/utils.rs",
        "vendor/goblin-0.3.4/src/strtab.rs",
    ],
    crate = "goblin",
    crate_root = "vendor/goblin-0.3.4/src/lib.rs",
    edition = "2018",
    features = [
        "alloc",
        "archive",
        "default",
        "elf32",
        "elf64",
        "endian_fd",
        "log",
        "mach32",
        "mach64",
        "pe32",
        "pe64",
        "std",
    ],
    licenses = ["vendor/goblin-0.3.4/LICENSE"],
    rustc_flags = ["--cap-lints=allow"],
    visibility = ["PUBLIC"],
    deps = [
        ":log-0.4.14",
        ":plain-0.2.3",
        ":scroll-0.10.2",
    ],
)

third_party_rust_library(
    name = "h2-0.3.3",
    srcs = [
        "vendor/h2-0.3.3/src/client.rs",
        "vendor/h2-0.3.3/src/codec/error.rs",
        "vendor/h2-0.3.3/src/codec/framed_read.rs",
        "vendor/h2-0.3.3/src/codec/framed_write.rs",
        "vendor/h2-0.3.3/src/codec/mod.rs",
        "vendor/h2-0.3.3/src/error.rs",
        "vendor/h2-0.3.3/src/frame/data.rs",
        "vendor/h2-0.3.3/src/frame/go_away.rs",
        "vendor/h2-0.3.3/src/frame/head.rs",
        "vendor/h2-0.3.3/src/frame/headers.rs",
        "vendor/h2-0.3.3/src/frame/mod.rs",
        "vendor/h2-0.3.3/src/frame/ping.rs",
        "vendor/h2-0.3.3/src/frame/priority.rs",
        "vendor/h2-0.3.3/src/frame/reason.rs",
        "vendor/h2-0.3.3/src/frame/reset.rs",
        "vendor/h2-0.3.3/src/frame/settings.rs",
        "vendor/h2-0.3.3/src/frame/stream_id.rs",
        "vendor/h2-0.3.3/src/frame/util.rs",
        "vendor/h2-0.3.3/src/frame/window_update.rs",
        "vendor/h2-0.3.3/src/fuzz_bridge.rs",
        "vendor/h2-0.3.3/src/hpack/decoder.rs",
        "vendor/h2-0.3.3/src/hpack/encoder.rs",
        "vendor/h2-0.3.3/src/hpack/header.rs",
        "vendor/h2-0.3.3/src/hpack/huffman/mod.rs",
        "vendor/h2-0.3.3/src/hpack/huffman/table.rs",
        "vendor/h2-0.3.3/src/hpack/mod.rs",
        "vendor/h2-0.3.3/src/hpack/table.rs",
        "vendor/h2-0.3.3/src/hpack/test/fixture.rs",
        "vendor/h2-0.3.3/src/hpack/test/fuzz.rs",
        "vendor/h2-0.3.3/src/hpack/test/mod.rs",
        "vendor/h2-0.3.3/src/lib.rs",
        "vendor/h2-0.3.3/src/proto/connection.rs",
        "vendor/h2-0.3.3/src/proto/error.rs",
        "vendor/h2-0.3.3/src/proto/go_away.rs",
        "vendor/h2-0.3.3/src/proto/mod.rs",
        "vendor/h2-0.3.3/src/proto/peer.rs",
        "vendor/h2-0.3.3/src/proto/ping_pong.rs",
        "vendor/h2-0.3.3/src/proto/settings.rs",
        "vendor/h2-0.3.3/src/proto/streams/buffer.rs",
        "vendor/h2-0.3.3/src/proto/streams/counts.rs",
        "vendor/h2-0.3.3/src/proto/streams/flow_control.rs",
        "vendor/h2-0.3.3/src/proto/streams/mod.rs",
        "vendor/h2-0.3.3/src/proto/streams/prioritize.rs",
        "vendor/h2-0.3.3/src/proto/streams/recv.rs",
        "vendor/h2-0.3.3/src/proto/streams/send.rs",
        "vendor/h2-0.3.3/src/proto/streams/state.rs",
        "vendor/h2-0.3.3/src/proto/streams/store.rs",
        "vendor/h2-0.3.3/src/proto/streams/stream.rs",
        "vendor/h2-0.3.3/src/proto/streams/streams.rs",
        "vendor/h2-0.3.3/src/server.rs",
        "vendor/h2-0.3.3/src/share.rs",
    ],
    crate = "h2",
    crate_root = "vendor/h2-0.3.3/src/lib.rs",
    edition = "2018",
    licenses = ["vendor/h2-0.3.3/LICENSE"],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [
        ":bytes",
        ":fnv-1.0.7",
        ":futures-core",
        ":futures-sink-0.3.15",
        ":futures-util",
        ":http-0.2.4",
        ":indexmap-1.6.2",
        ":slab-0.4.3",
        ":tokio",
        ":tokio-util-0.6.7",
        ":tracing-0.1.26",
    ],
)

third_party_rust_library(
    name = "hashbrown-0.9.1",
    srcs = [
        "vendor/hashbrown-0.9.1/src/external_trait_impls/mod.rs",
        "vendor/hashbrown-0.9.1/src/external_trait_impls/rayon/helpers.rs",
        "vendor/hashbrown-0.9.1/src/external_trait_impls/rayon/map.rs",
        "vendor/hashbrown-0.9.1/src/external_trait_impls/rayon/mod.rs",
        "vendor/hashbrown-0.9.1/src/external_trait_impls/rayon/raw.rs",
        "vendor/hashbrown-0.9.1/src/external_trait_impls/rayon/set.rs",
        "vendor/hashbrown-0.9.1/src/external_trait_impls/serde.rs",
        "vendor/hashbrown-0.9.1/src/lib.rs",
        "vendor/hashbrown-0.9.1/src/macros.rs",
        "vendor/hashbrown-0.9.1/src/map.rs",
        "vendor/hashbrown-0.9.1/src/raw/bitmask.rs",
        "vendor/hashbrown-0.9.1/src/raw/generic.rs",
        "vendor/hashbrown-0.9.1/src/raw/mod.rs",
        "vendor/hashbrown-0.9.1/src/raw/sse2.rs",
        "vendor/hashbrown-0.9.1/src/rustc_entry.rs",
        "vendor/hashbrown-0.9.1/src/scopeguard.rs",
        "vendor/hashbrown-0.9.1/src/set.rs",
    ],
    crate = "hashbrown",
    crate_root = "vendor/hashbrown-0.9.1/src/lib.rs",
    edition = "2018",
    features = ["raw"],
    licenses = [
        "vendor/hashbrown-0.9.1/LICENSE-APACHE",
        "vendor/hashbrown-0.9.1/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

third_party_rust_library(
    name = "headers-0.3.4",
    srcs = [
        "vendor/headers-0.3.4/src/common/accept_ranges.rs",
        "vendor/headers-0.3.4/src/common/access_control_allow_credentials.rs",
        "vendor/headers-0.3.4/src/common/access_control_allow_headers.rs",
        "vendor/headers-0.3.4/src/common/access_control_allow_methods.rs",
        "vendor/headers-0.3.4/src/common/access_control_allow_origin.rs",
        "vendor/headers-0.3.4/src/common/access_control_expose_headers.rs",
        "vendor/headers-0.3.4/src/common/access_control_max_age.rs",
        "vendor/headers-0.3.4/src/common/access_control_request_headers.rs",
        "vendor/headers-0.3.4/src/common/access_control_request_method.rs",
        "vendor/headers-0.3.4/src/common/allow.rs",
        "vendor/headers-0.3.4/src/common/authorization.rs",
        "vendor/headers-0.3.4/src/common/cache_control.rs",
        "vendor/headers-0.3.4/src/common/connection.rs",
        "vendor/headers-0.3.4/src/common/content_disposition.rs",
        "vendor/headers-0.3.4/src/common/content_encoding.rs",
        "vendor/headers-0.3.4/src/common/content_length.rs",
        "vendor/headers-0.3.4/src/common/content_location.rs",
        "vendor/headers-0.3.4/src/common/content_range.rs",
        "vendor/headers-0.3.4/src/common/content_type.rs",
        "vendor/headers-0.3.4/src/common/cookie.rs",
        "vendor/headers-0.3.4/src/common/date.rs",
        "vendor/headers-0.3.4/src/common/etag.rs",
        "vendor/headers-0.3.4/src/common/expect.rs",
        "vendor/headers-0.3.4/src/common/expires.rs",
        "vendor/headers-0.3.4/src/common/host.rs",
        "vendor/headers-0.3.4/src/common/if_match.rs",
        "vendor/headers-0.3.4/src/common/if_modified_since.rs",
        "vendor/headers-0.3.4/src/common/if_none_match.rs",
        "vendor/headers-0.3.4/src/common/if_range.rs",
        "vendor/headers-0.3.4/src/common/if_unmodified_since.rs",
        "vendor/headers-0.3.4/src/common/last_modified.rs",
        "vendor/headers-0.3.4/src/common/location.rs",
        "vendor/headers-0.3.4/src/common/mod.rs",
        "vendor/headers-0.3.4/src/common/origin.rs",
        "vendor/headers-0.3.4/src/common/pragma.rs",
        "vendor/headers-0.3.4/src/common/proxy_authorization.rs",
        "vendor/headers-0.3.4/src/common/range.rs",
        "vendor/headers-0.3.4/src/common/referer.rs",
        "vendor/headers-0.3.4/src/common/referrer_policy.rs",
        "vendor/headers-0.3.4/src/common/retry_after.rs",
        "vendor/headers-0.3.4/src/common/sec_websocket_accept.rs",
        "vendor/headers-0.3.4/src/common/sec_websocket_key.rs",
        "vendor/headers-0.3.4/src/common/sec_websocket_version.rs",
        "vendor/headers-0.3.4/src/common/server.rs",
        "vendor/headers-0.3.4/src/common/set_cookie.rs",
        "vendor/headers-0.3.4/src/common/strict_transport_security.rs",
        "vendor/headers-0.3.4/src/common/te.rs",
        "vendor/headers-0.3.4/src/common/transfer_encoding.rs",
        "vendor/headers-0.3.4/src/common/upgrade.rs",
        "vendor/headers-0.3.4/src/common/user_agent.rs",
        "vendor/headers-0.3.4/src/common/vary.rs",
        "vendor/headers-0.3.4/src/disabled/accept.rs",
        "vendor/headers-0.3.4/src/disabled/accept_charset.rs",
        "vendor/headers-0.3.4/src/disabled/accept_encoding.rs",
        "vendor/headers-0.3.4/src/disabled/accept_language.rs",
        "vendor/headers-0.3.4/src/disabled/content_language.rs",
        "vendor/headers-0.3.4/src/disabled/from.rs",
        "vendor/headers-0.3.4/src/disabled/last_event_id.rs",
        "vendor/headers-0.3.4/src/disabled/link.rs",
        "vendor/headers-0.3.4/src/disabled/prefer.rs",
        "vendor/headers-0.3.4/src/disabled/preference_applied.rs",
        "vendor/headers-0.3.4/src/disabled/util/charset.rs",
        "vendor/headers-0.3.4/src/disabled/util/encoding.rs",
        "vendor/headers-0.3.4/src/disabled/util/extended_value.rs",
        "vendor/headers-0.3.4/src/disabled/util/quality_value.rs",
        "vendor/headers-0.3.4/src/disabled/warning.rs",
        "vendor/headers-0.3.4/src/lib.rs",
        "vendor/headers-0.3.4/src/map_ext.rs",
        "vendor/headers-0.3.4/src/util/csv.rs",
        "vendor/headers-0.3.4/src/util/entity.rs",
        "vendor/headers-0.3.4/src/util/flat_csv.rs",
        "vendor/headers-0.3.4/src/util/fmt.rs",
        "vendor/headers-0.3.4/src/util/http_date.rs",
        "vendor/headers-0.3.4/src/util/iter.rs",
        "vendor/headers-0.3.4/src/util/mod.rs",
        "vendor/headers-0.3.4/src/util/seconds.rs",
        "vendor/headers-0.3.4/src/util/value_string.rs",
    ],
    crate = "headers",
    crate_root = "vendor/headers-0.3.4/src/lib.rs",
    edition = "2015",
    licenses = ["vendor/headers-0.3.4/LICENSE"],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [
        ":base64-0.13.0",
        ":bitflags-1.2.1",
        ":bytes",
        ":headers-core-0.2.0",
        ":http-0.2.4",
        ":mime-0.3.16",
        ":sha-1-0.9.6",
        ":time-0.1.43",
    ],
)

third_party_rust_library(
    name = "headers-core-0.2.0",
    srcs = ["vendor/headers-core-0.2.0/src/lib.rs"],
    crate = "headers_core",
    crate_root = "vendor/headers-core-0.2.0/src/lib.rs",
    edition = "2015",
    licenses = ["vendor/headers-core-0.2.0/LICENSE"],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [":http-0.2.4"],
)

third_party_rust_library(
    name = "heck-0.3.3",
    srcs = [
        "vendor/heck-0.3.3/src/camel.rs",
        "vendor/heck-0.3.3/src/kebab.rs",
        "vendor/heck-0.3.3/src/lib.rs",
        "vendor/heck-0.3.3/src/mixed.rs",
        "vendor/heck-0.3.3/src/shouty_kebab.rs",
        "vendor/heck-0.3.3/src/shouty_snake.rs",
        "vendor/heck-0.3.3/src/snake.rs",
        "vendor/heck-0.3.3/src/title.rs",
    ],
    crate = "heck",
    crate_root = "vendor/heck-0.3.3/src/lib.rs",
    edition = "2018",
    licenses = [
        "vendor/heck-0.3.3/LICENSE-APACHE",
        "vendor/heck-0.3.3/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [":unicode-segmentation-1.7.1"],
)

third_party_rust_library(
    name = "hostname-0.3.1",
    srcs = [
        "vendor/hostname-0.3.1/src/lib.rs",
        "vendor/hostname-0.3.1/src/nix.rs",
        "vendor/hostname-0.3.1/src/windows.rs",
    ],
    crate = "hostname",
    crate_root = "vendor/hostname-0.3.1/src/lib.rs",
    edition = "2015",
    features = ["default"],
    licenses = ["vendor/hostname-0.3.1/LICENSE"],
    platform = {
        "linux-x86_64": {
            "deps": [":libc-0.2.97"],
        },
    },
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [":match_cfg-0.1.0"],
)

third_party_rust_library(
    name = "http-0.2.4",
    srcs = [
        "vendor/http-0.2.4/src/byte_str.rs",
        "vendor/http-0.2.4/src/convert.rs",
        "vendor/http-0.2.4/src/error.rs",
        "vendor/http-0.2.4/src/extensions.rs",
        "vendor/http-0.2.4/src/header/map.rs",
        "vendor/http-0.2.4/src/header/mod.rs",
        "vendor/http-0.2.4/src/header/name.rs",
        "vendor/http-0.2.4/src/header/value.rs",
        "vendor/http-0.2.4/src/lib.rs",
        "vendor/http-0.2.4/src/method.rs",
        "vendor/http-0.2.4/src/request.rs",
        "vendor/http-0.2.4/src/response.rs",
        "vendor/http-0.2.4/src/status.rs",
        "vendor/http-0.2.4/src/uri/authority.rs",
        "vendor/http-0.2.4/src/uri/builder.rs",
        "vendor/http-0.2.4/src/uri/mod.rs",
        "vendor/http-0.2.4/src/uri/path.rs",
        "vendor/http-0.2.4/src/uri/port.rs",
        "vendor/http-0.2.4/src/uri/scheme.rs",
        "vendor/http-0.2.4/src/uri/tests.rs",
        "vendor/http-0.2.4/src/version.rs",
    ],
    crate = "http",
    crate_root = "vendor/http-0.2.4/src/lib.rs",
    edition = "2018",
    licenses = [
        "vendor/http-0.2.4/LICENSE-APACHE",
        "vendor/http-0.2.4/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [
        ":bytes",
        ":fnv-1.0.7",
        ":itoa-0.4.7",
    ],
)

third_party_rust_library(
    name = "http-body-0.4.2",
    srcs = [
        "vendor/http-body-0.4.2/src/combinators/box_body.rs",
        "vendor/http-body-0.4.2/src/combinators/map_data.rs",
        "vendor/http-body-0.4.2/src/combinators/map_err.rs",
        "vendor/http-body-0.4.2/src/combinators/mod.rs",
        "vendor/http-body-0.4.2/src/empty.rs",
        "vendor/http-body-0.4.2/src/full.rs",
        "vendor/http-body-0.4.2/src/lib.rs",
        "vendor/http-body-0.4.2/src/next.rs",
        "vendor/http-body-0.4.2/src/size_hint.rs",
    ],
    crate = "http_body",
    crate_root = "vendor/http-body-0.4.2/src/lib.rs",
    edition = "2018",
    licenses = ["vendor/http-body-0.4.2/LICENSE"],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [
        ":bytes",
        ":http-0.2.4",
        ":pin-project-lite-0.2.6",
    ],
)

third_party_rust_library(
    name = "httparse-1.4.1",
    srcs = [
        "vendor/httparse-1.4.1/src/iter.rs",
        "vendor/httparse-1.4.1/src/lib.rs",
        "vendor/httparse-1.4.1/src/macros.rs",
        "vendor/httparse-1.4.1/src/simd/avx2.rs",
        "vendor/httparse-1.4.1/src/simd/fallback.rs",
        "vendor/httparse-1.4.1/src/simd/mod.rs",
        "vendor/httparse-1.4.1/src/simd/sse42.rs",
    ],
    crate = "httparse",
    crate_root = "vendor/httparse-1.4.1/src/lib.rs",
    edition = "2015",
    features = [
        "default",
        "std",
    ],
    licenses = [
        "vendor/httparse-1.4.1/LICENSE-APACHE",
        "vendor/httparse-1.4.1/LICENSE-MIT",
    ],
    rustc_flags = [
        "--cap-lints=allow",
        "@$(location :httparse-1.4.1-build-script-build-args)",
    ],
    visibility = [],
)

third_party_rust_binary(
    name = "httparse-1.4.1-build-script-build",
    srcs = [
        "vendor/httparse-1.4.1/benches/parse.rs",
        "vendor/httparse-1.4.1/build.rs",
        "vendor/httparse-1.4.1/src/iter.rs",
        "vendor/httparse-1.4.1/src/lib.rs",
        "vendor/httparse-1.4.1/src/macros.rs",
        "vendor/httparse-1.4.1/src/simd/avx2.rs",
        "vendor/httparse-1.4.1/src/simd/fallback.rs",
        "vendor/httparse-1.4.1/src/simd/mod.rs",
        "vendor/httparse-1.4.1/src/simd/sse42.rs",
        "vendor/httparse-1.4.1/tests/uri.rs",
    ],
    crate = "build_script_build",
    crate_root = "vendor/httparse-1.4.1/build.rs",
    edition = "2015",
    features = [
        "default",
        "std",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

rust_buildscript_genrule_filter(
    name = "httparse-1.4.1-build-script-build-args",
    package_name = "httparse",
    buildscript_rule = ":httparse-1.4.1-build-script-build",
    cfgs = [],
    features = [
        "default",
        "std",
    ],
    outfile = "args.txt",
    version = "1.4.1",
)

third_party_rust_library(
    name = "httpdate-1.0.1",
    srcs = [
        "vendor/httpdate-1.0.1/src/date.rs",
        "vendor/httpdate-1.0.1/src/lib.rs",
    ],
    crate = "httpdate",
    crate_root = "vendor/httpdate-1.0.1/src/lib.rs",
    edition = "2018",
    licenses = [
        "vendor/httpdate-1.0.1/LICENSE-APACHE",
        "vendor/httpdate-1.0.1/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

third_party_rust_library(
    name = "hyper",
    srcs = [
        "vendor/hyper-0.14.9/src/body/aggregate.rs",
        "vendor/hyper-0.14.9/src/body/body.rs",
        "vendor/hyper-0.14.9/src/body/length.rs",
        "vendor/hyper-0.14.9/src/body/mod.rs",
        "vendor/hyper-0.14.9/src/body/to_bytes.rs",
        "vendor/hyper-0.14.9/src/cfg.rs",
        "vendor/hyper-0.14.9/src/client/client.rs",
        "vendor/hyper-0.14.9/src/client/conn.rs",
        "vendor/hyper-0.14.9/src/client/connect/dns.rs",
        "vendor/hyper-0.14.9/src/client/connect/http.rs",
        "vendor/hyper-0.14.9/src/client/connect/mod.rs",
        "vendor/hyper-0.14.9/src/client/dispatch.rs",
        "vendor/hyper-0.14.9/src/client/mod.rs",
        "vendor/hyper-0.14.9/src/client/pool.rs",
        "vendor/hyper-0.14.9/src/client/service.rs",
        "vendor/hyper-0.14.9/src/client/tests.rs",
        "vendor/hyper-0.14.9/src/common/buf.rs",
        "vendor/hyper-0.14.9/src/common/date.rs",
        "vendor/hyper-0.14.9/src/common/drain.rs",
        "vendor/hyper-0.14.9/src/common/exec.rs",
        "vendor/hyper-0.14.9/src/common/io/mod.rs",
        "vendor/hyper-0.14.9/src/common/io/rewind.rs",
        "vendor/hyper-0.14.9/src/common/lazy.rs",
        "vendor/hyper-0.14.9/src/common/mod.rs",
        "vendor/hyper-0.14.9/src/common/never.rs",
        "vendor/hyper-0.14.9/src/common/sync_wrapper.rs",
        "vendor/hyper-0.14.9/src/common/task.rs",
        "vendor/hyper-0.14.9/src/common/watch.rs",
        "vendor/hyper-0.14.9/src/error.rs",
        "vendor/hyper-0.14.9/src/ext.rs",
        "vendor/hyper-0.14.9/src/ffi/body.rs",
        "vendor/hyper-0.14.9/src/ffi/client.rs",
        "vendor/hyper-0.14.9/src/ffi/error.rs",
        "vendor/hyper-0.14.9/src/ffi/http_types.rs",
        "vendor/hyper-0.14.9/src/ffi/io.rs",
        "vendor/hyper-0.14.9/src/ffi/macros.rs",
        "vendor/hyper-0.14.9/src/ffi/mod.rs",
        "vendor/hyper-0.14.9/src/ffi/task.rs",
        "vendor/hyper-0.14.9/src/headers.rs",
        "vendor/hyper-0.14.9/src/lib.rs",
        "vendor/hyper-0.14.9/src/mock.rs",
        "vendor/hyper-0.14.9/src/proto/h1/conn.rs",
        "vendor/hyper-0.14.9/src/proto/h1/decode.rs",
        "vendor/hyper-0.14.9/src/proto/h1/dispatch.rs",
        "vendor/hyper-0.14.9/src/proto/h1/encode.rs",
        "vendor/hyper-0.14.9/src/proto/h1/io.rs",
        "vendor/hyper-0.14.9/src/proto/h1/mod.rs",
        "vendor/hyper-0.14.9/src/proto/h1/role.rs",
        "vendor/hyper-0.14.9/src/proto/h2/client.rs",
        "vendor/hyper-0.14.9/src/proto/h2/mod.rs",
        "vendor/hyper-0.14.9/src/proto/h2/ping.rs",
        "vendor/hyper-0.14.9/src/proto/h2/server.rs",
        "vendor/hyper-0.14.9/src/proto/mod.rs",
        "vendor/hyper-0.14.9/src/rt.rs",
        "vendor/hyper-0.14.9/src/server/accept.rs",
        "vendor/hyper-0.14.9/src/server/conn.rs",
        "vendor/hyper-0.14.9/src/server/mod.rs",
        "vendor/hyper-0.14.9/src/server/server.rs",
        "vendor/hyper-0.14.9/src/server/shutdown.rs",
        "vendor/hyper-0.14.9/src/server/tcp.rs",
        "vendor/hyper-0.14.9/src/service/http.rs",
        "vendor/hyper-0.14.9/src/service/make.rs",
        "vendor/hyper-0.14.9/src/service/mod.rs",
        "vendor/hyper-0.14.9/src/service/oneshot.rs",
        "vendor/hyper-0.14.9/src/service/util.rs",
        "vendor/hyper-0.14.9/src/upgrade.rs",
    ],
    crate = "hyper",
    crate_root = "vendor/hyper-0.14.9/src/lib.rs",
    dlopen_enable = True,
    edition = "2018",
    features = [
        "client",
        "default",
        "h2",
        "http1",
        "http2",
        "runtime",
        "server",
        "socket2",
        "stream",
        "tcp",
    ],
    licenses = ["vendor/hyper-0.14.9/LICENSE"],
    rustc_flags = ["--cap-lints=allow"],
    visibility = ["PUBLIC"],
    deps = [
        ":bytes",
        ":futures-channel-0.3.15",
        ":futures-core",
        ":futures-util",
        ":h2-0.3.3",
        ":http-0.2.4",
        ":http-body-0.4.2",
        ":httparse-1.4.1",
        ":httpdate-1.0.1",
        ":itoa-0.4.7",
        ":pin-project-lite-0.2.6",
        ":socket2-0.4.0",
        ":tokio",
        ":tower-service-0.3.1",
        ":tracing-0.1.26",
        ":want-0.3.0",
    ],
)

third_party_rust_library(
    name = "hyper-rustls",
    srcs = [
        "vendor/hyper-rustls-0.22.1/src/connector.rs",
        "vendor/hyper-rustls-0.22.1/src/lib.rs",
        "vendor/hyper-rustls-0.22.1/src/stream.rs",
    ],
    crate = "hyper_rustls",
    crate_root = "vendor/hyper-rustls-0.22.1/src/lib.rs",
    edition = "2018",
    features = [
        "ct-logs",
        "default",
        "native-tokio",
        "rustls-native-certs",
        "tokio-runtime",
    ],
    licenses = [
        "vendor/hyper-rustls-0.22.1/LICENSE",
        "vendor/hyper-rustls-0.22.1/LICENSE-APACHE",
        "vendor/hyper-rustls-0.22.1/LICENSE-ISC",
        "vendor/hyper-rustls-0.22.1/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = ["PUBLIC"],
    deps = [
        ":ct-logs-0.8.0",
        ":futures-util",
        ":hyper",
        ":log-0.4.14",
        ":rustls",
        ":rustls-native-certs",
        ":tokio",
        ":tokio-rustls-0.22.0",
        ":webpki-0.21.4",
    ],
)

third_party_rust_library(
    name = "hyper-tls-0.5.0",
    srcs = [
        "vendor/hyper-tls-0.5.0/src/client.rs",
        "vendor/hyper-tls-0.5.0/src/lib.rs",
        "vendor/hyper-tls-0.5.0/src/stream.rs",
    ],
    crate = "hyper_tls",
    crate_root = "vendor/hyper-tls-0.5.0/src/lib.rs",
    edition = "2018",
    licenses = [
        "vendor/hyper-tls-0.5.0/LICENSE-APACHE",
        "vendor/hyper-tls-0.5.0/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [
        ":bytes",
        ":hyper",
        ":native-tls-0.2.7",
        ":tokio",
        ":tokio-native-tls-0.3.0",
    ],
)

third_party_rust_library(
    name = "idna-0.2.3",
    srcs = [
        "vendor/idna-0.2.3/src/lib.rs",
        "vendor/idna-0.2.3/src/punycode.rs",
        "vendor/idna-0.2.3/src/uts46.rs",
        "vendor/idna-0.2.3/src/uts46_mapping_table.rs",
    ],
    crate = "idna",
    crate_root = "vendor/idna-0.2.3/src/lib.rs",
    edition = "2018",
    licenses = [
        "vendor/idna-0.2.3/LICENSE-APACHE",
        "vendor/idna-0.2.3/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [
        ":matches-0.1.8",
        ":unicode-bidi-0.3.5",
        ":unicode-normalization-0.1.19",
    ],
)

third_party_rust_library(
    name = "indexmap-1.6.2",
    srcs = [
        "vendor/indexmap-1.6.2/src/equivalent.rs",
        "vendor/indexmap-1.6.2/src/lib.rs",
        "vendor/indexmap-1.6.2/src/macros.rs",
        "vendor/indexmap-1.6.2/src/map.rs",
        "vendor/indexmap-1.6.2/src/map/core.rs",
        "vendor/indexmap-1.6.2/src/map/core/raw.rs",
        "vendor/indexmap-1.6.2/src/mutable_keys.rs",
        "vendor/indexmap-1.6.2/src/rayon/map.rs",
        "vendor/indexmap-1.6.2/src/rayon/mod.rs",
        "vendor/indexmap-1.6.2/src/rayon/set.rs",
        "vendor/indexmap-1.6.2/src/serde.rs",
        "vendor/indexmap-1.6.2/src/serde_seq.rs",
        "vendor/indexmap-1.6.2/src/set.rs",
        "vendor/indexmap-1.6.2/src/util.rs",
    ],
    crate = "indexmap",
    crate_root = "vendor/indexmap-1.6.2/src/lib.rs",
    edition = "2018",
    features = ["std"],
    licenses = [
        "vendor/indexmap-1.6.2/LICENSE-APACHE",
        "vendor/indexmap-1.6.2/LICENSE-MIT",
    ],
    rustc_flags = [
        "--cap-lints=allow",
        "--cfg=has_std",
    ],
    visibility = [],
    deps = [":hashbrown-0.9.1"],
)

third_party_rust_library(
    name = "input_buffer-0.4.0",
    srcs = ["vendor/input_buffer-0.4.0/src/lib.rs"],
    crate = "input_buffer",
    crate_root = "vendor/input_buffer-0.4.0/src/lib.rs",
    edition = "2015",
    licenses = [
        "vendor/input_buffer-0.4.0/LICENSE-APACHE",
        "vendor/input_buffer-0.4.0/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [":bytes"],
)

third_party_rust_library(
    name = "instant-0.1.9",
    srcs = [
        "vendor/instant-0.1.9/src/lib.rs",
        "vendor/instant-0.1.9/src/native.rs",
        "vendor/instant-0.1.9/src/wasm.rs",
    ],
    crate = "instant",
    crate_root = "vendor/instant-0.1.9/src/lib.rs",
    edition = "2018",
    licenses = ["vendor/instant-0.1.9/LICENSE"],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [":cfg-if-1.0.0"],
)

third_party_rust_library(
    name = "ipnet-2.3.0",
    srcs = [
        "vendor/ipnet-2.3.0/src/ipext.rs",
        "vendor/ipnet-2.3.0/src/ipnet.rs",
        "vendor/ipnet-2.3.0/src/ipnet_serde.rs",
        "vendor/ipnet-2.3.0/src/lib.rs",
        "vendor/ipnet-2.3.0/src/parser.rs",
    ],
    crate = "ipnet",
    crate_root = "vendor/ipnet-2.3.0/src/lib.rs",
    edition = "2015",
    licenses = [
        "vendor/ipnet-2.3.0/LICENSE-APACHE",
        "vendor/ipnet-2.3.0/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

third_party_rust_library(
    name = "itertools-0.8.2",
    srcs = [
        "vendor/itertools-0.8.2/src/adaptors/mod.rs",
        "vendor/itertools-0.8.2/src/adaptors/multi_product.rs",
        "vendor/itertools-0.8.2/src/combinations.rs",
        "vendor/itertools-0.8.2/src/combinations_with_replacement.rs",
        "vendor/itertools-0.8.2/src/concat_impl.rs",
        "vendor/itertools-0.8.2/src/cons_tuples_impl.rs",
        "vendor/itertools-0.8.2/src/diff.rs",
        "vendor/itertools-0.8.2/src/either_or_both.rs",
        "vendor/itertools-0.8.2/src/exactly_one_err.rs",
        "vendor/itertools-0.8.2/src/format.rs",
        "vendor/itertools-0.8.2/src/free.rs",
        "vendor/itertools-0.8.2/src/group_map.rs",
        "vendor/itertools-0.8.2/src/groupbylazy.rs",
        "vendor/itertools-0.8.2/src/impl_macros.rs",
        "vendor/itertools-0.8.2/src/intersperse.rs",
        "vendor/itertools-0.8.2/src/kmerge_impl.rs",
        "vendor/itertools-0.8.2/src/lazy_buffer.rs",
        "vendor/itertools-0.8.2/src/lib.rs",
        "vendor/itertools-0.8.2/src/merge_join.rs",
        "vendor/itertools-0.8.2/src/minmax.rs",
        "vendor/itertools-0.8.2/src/multipeek_impl.rs",
        "vendor/itertools-0.8.2/src/pad_tail.rs",
        "vendor/itertools-0.8.2/src/peeking_take_while.rs",
        "vendor/itertools-0.8.2/src/permutations.rs",
        "vendor/itertools-0.8.2/src/process_results_impl.rs",
        "vendor/itertools-0.8.2/src/put_back_n_impl.rs",
        "vendor/itertools-0.8.2/src/rciter_impl.rs",
        "vendor/itertools-0.8.2/src/repeatn.rs",
        "vendor/itertools-0.8.2/src/size_hint.rs",
        "vendor/itertools-0.8.2/src/sources.rs",
        "vendor/itertools-0.8.2/src/tee.rs",
        "vendor/itertools-0.8.2/src/tuple_impl.rs",
        "vendor/itertools-0.8.2/src/unique_impl.rs",
        "vendor/itertools-0.8.2/src/with_position.rs",
        "vendor/itertools-0.8.2/src/zip_eq_impl.rs",
        "vendor/itertools-0.8.2/src/zip_longest.rs",
        "vendor/itertools-0.8.2/src/ziptuple.rs",
    ],
    crate = "itertools",
    crate_root = "vendor/itertools-0.8.2/src/lib.rs",
    edition = "2015",
    features = [
        "default",
        "use_std",
    ],
    licenses = [
        "vendor/itertools-0.8.2/LICENSE-APACHE",
        "vendor/itertools-0.8.2/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [":either-1.6.1"],
)

third_party_rust_library(
    name = "itoa-0.4.7",
    srcs = [
        "vendor/itoa-0.4.7/src/lib.rs",
        "vendor/itoa-0.4.7/src/udiv128.rs",
    ],
    crate = "itoa",
    crate_root = "vendor/itoa-0.4.7/src/lib.rs",
    edition = "2015",
    features = [
        "default",
        "std",
    ],
    licenses = [
        "vendor/itoa-0.4.7/LICENSE-APACHE",
        "vendor/itoa-0.4.7/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

third_party_rust_library(
    name = "jobserver-0.1.22",
    srcs = [
        "vendor/jobserver-0.1.22/src/lib.rs",
        "vendor/jobserver-0.1.22/src/unix.rs",
        "vendor/jobserver-0.1.22/src/wasm.rs",
        "vendor/jobserver-0.1.22/src/windows.rs",
    ],
    crate = "jobserver",
    crate_root = "vendor/jobserver-0.1.22/src/lib.rs",
    edition = "2018",
    licenses = [
        "vendor/jobserver-0.1.22/LICENSE-APACHE",
        "vendor/jobserver-0.1.22/LICENSE-MIT",
    ],
    platform = {
        "linux-x86_64": {
            "deps": [":libc-0.2.97"],
        },
    },
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

third_party_rust_library(
    name = "lazy_static-1.4.0",
    srcs = [
        "vendor/lazy_static-1.4.0/src/core_lazy.rs",
        "vendor/lazy_static-1.4.0/src/inline_lazy.rs",
        "vendor/lazy_static-1.4.0/src/lib.rs",
    ],
    crate = "lazy_static",
    crate_root = "vendor/lazy_static-1.4.0/src/lib.rs",
    edition = "2015",
    licenses = [
        "vendor/lazy_static-1.4.0/LICENSE-APACHE",
        "vendor/lazy_static-1.4.0/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

third_party_rust_library(
    name = "libc-0.2.97",
    srcs = [
        "vendor/libc-0.2.97/src/fixed_width_ints.rs",
        "vendor/libc-0.2.97/src/fuchsia/aarch64.rs",
        "vendor/libc-0.2.97/src/fuchsia/align.rs",
        "vendor/libc-0.2.97/src/fuchsia/mod.rs",
        "vendor/libc-0.2.97/src/fuchsia/no_align.rs",
        "vendor/libc-0.2.97/src/fuchsia/x86_64.rs",
        "vendor/libc-0.2.97/src/hermit/aarch64.rs",
        "vendor/libc-0.2.97/src/hermit/mod.rs",
        "vendor/libc-0.2.97/src/hermit/x86_64.rs",
        "vendor/libc-0.2.97/src/lib.rs",
        "vendor/libc-0.2.97/src/macros.rs",
        "vendor/libc-0.2.97/src/psp.rs",
        "vendor/libc-0.2.97/src/sgx.rs",
        "vendor/libc-0.2.97/src/switch.rs",
        "vendor/libc-0.2.97/src/unix/align.rs",
        "vendor/libc-0.2.97/src/unix/bsd/apple/b32/align.rs",
        "vendor/libc-0.2.97/src/unix/bsd/apple/b32/mod.rs",
        "vendor/libc-0.2.97/src/unix/bsd/apple/b64/aarch64/align.rs",
        "vendor/libc-0.2.97/src/unix/bsd/apple/b64/aarch64/mod.rs",
        "vendor/libc-0.2.97/src/unix/bsd/apple/b64/align.rs",
        "vendor/libc-0.2.97/src/unix/bsd/apple/b64/mod.rs",
        "vendor/libc-0.2.97/src/unix/bsd/apple/b64/x86_64/align.rs",
        "vendor/libc-0.2.97/src/unix/bsd/apple/b64/x86_64/mod.rs",
        "vendor/libc-0.2.97/src/unix/bsd/apple/mod.rs",
        "vendor/libc-0.2.97/src/unix/bsd/freebsdlike/dragonfly/errno.rs",
        "vendor/libc-0.2.97/src/unix/bsd/freebsdlike/dragonfly/mod.rs",
        "vendor/libc-0.2.97/src/unix/bsd/freebsdlike/freebsd/aarch64.rs",
        "vendor/libc-0.2.97/src/unix/bsd/freebsdlike/freebsd/arm.rs",
        "vendor/libc-0.2.97/src/unix/bsd/freebsdlike/freebsd/freebsd11/b64.rs",
        "vendor/libc-0.2.97/src/unix/bsd/freebsdlike/freebsd/freebsd11/mod.rs",
        "vendor/libc-0.2.97/src/unix/bsd/freebsdlike/freebsd/freebsd12/b64.rs",
        "vendor/libc-0.2.97/src/unix/bsd/freebsdlike/freebsd/freebsd12/mod.rs",
        "vendor/libc-0.2.97/src/unix/bsd/freebsdlike/freebsd/freebsd13/b64.rs",
        "vendor/libc-0.2.97/src/unix/bsd/freebsdlike/freebsd/freebsd13/mod.rs",
        "vendor/libc-0.2.97/src/unix/bsd/freebsdlike/freebsd/mod.rs",
        "vendor/libc-0.2.97/src/unix/bsd/freebsdlike/freebsd/powerpc64.rs",
        "vendor/libc-0.2.97/src/unix/bsd/freebsdlike/freebsd/x86.rs",
        "vendor/libc-0.2.97/src/unix/bsd/freebsdlike/freebsd/x86_64/align.rs",
        "vendor/libc-0.2.97/src/unix/bsd/freebsdlike/freebsd/x86_64/mod.rs",
        "vendor/libc-0.2.97/src/unix/bsd/freebsdlike/mod.rs",
        "vendor/libc-0.2.97/src/unix/bsd/mod.rs",
        "vendor/libc-0.2.97/src/unix/bsd/netbsdlike/mod.rs",
        "vendor/libc-0.2.97/src/unix/bsd/netbsdlike/netbsd/aarch64.rs",
        "vendor/libc-0.2.97/src/unix/bsd/netbsdlike/netbsd/arm.rs",
        "vendor/libc-0.2.97/src/unix/bsd/netbsdlike/netbsd/mod.rs",
        "vendor/libc-0.2.97/src/unix/bsd/netbsdlike/netbsd/powerpc.rs",
        "vendor/libc-0.2.97/src/unix/bsd/netbsdlike/netbsd/sparc64.rs",
        "vendor/libc-0.2.97/src/unix/bsd/netbsdlike/netbsd/x86.rs",
        "vendor/libc-0.2.97/src/unix/bsd/netbsdlike/netbsd/x86_64.rs",
        "vendor/libc-0.2.97/src/unix/bsd/netbsdlike/openbsd/aarch64.rs",
        "vendor/libc-0.2.97/src/unix/bsd/netbsdlike/openbsd/mod.rs",
        "vendor/libc-0.2.97/src/unix/bsd/netbsdlike/openbsd/sparc64.rs",
        "vendor/libc-0.2.97/src/unix/bsd/netbsdlike/openbsd/x86.rs",
        "vendor/libc-0.2.97/src/unix/bsd/netbsdlike/openbsd/x86_64.rs",
        "vendor/libc-0.2.97/src/unix/haiku/b32.rs",
        "vendor/libc-0.2.97/src/unix/haiku/b64.rs",
        "vendor/libc-0.2.97/src/unix/haiku/mod.rs",
        "vendor/libc-0.2.97/src/unix/haiku/native.rs",
        "vendor/libc-0.2.97/src/unix/hermit/aarch64.rs",
        "vendor/libc-0.2.97/src/unix/hermit/mod.rs",
        "vendor/libc-0.2.97/src/unix/hermit/x86_64.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/android/b32/arm.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/android/b32/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/android/b32/x86/align.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/android/b32/x86/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/android/b64/aarch64/align.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/android/b64/aarch64/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/android/b64/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/android/b64/x86_64/align.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/android/b64/x86_64/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/android/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/emscripten/align.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/emscripten/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/emscripten/no_align.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/align.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/arch/generic/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/arch/mips/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/arch/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/arch/powerpc/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/arch/sparc/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/gnu/align.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/gnu/b32/arm/align.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/gnu/b32/arm/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/gnu/b32/mips/align.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/gnu/b32/mips/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/gnu/b32/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/gnu/b32/powerpc.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/gnu/b32/riscv32/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/gnu/b32/sparc/align.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/gnu/b32/sparc/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/gnu/b32/x86/align.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/gnu/b32/x86/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/gnu/b64/aarch64/align.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/gnu/b64/aarch64/ilp32.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/gnu/b64/aarch64/lp64.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/gnu/b64/aarch64/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/gnu/b64/mips64/align.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/gnu/b64/mips64/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/gnu/b64/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/gnu/b64/powerpc64/align.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/gnu/b64/powerpc64/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/gnu/b64/riscv64/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/gnu/b64/s390x.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/gnu/b64/sparc64/align.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/gnu/b64/sparc64/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/gnu/b64/x86_64/align.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/gnu/b64/x86_64/x32.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/gnu/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/gnu/no_align.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/musl/b32/arm/align.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/musl/b32/arm/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/musl/b32/hexagon.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/musl/b32/mips/align.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/musl/b32/mips/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/musl/b32/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/musl/b32/powerpc.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/musl/b32/x86/align.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/musl/b32/x86/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/musl/b64/aarch64/align.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/musl/b64/aarch64/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/musl/b64/mips64.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/musl/b64/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/musl/b64/powerpc64.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/musl/b64/s390x.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/musl/b64/x86_64/align.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/musl/b64/x86_64/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/musl/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/no_align.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/uclibc/align.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/uclibc/arm/align.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/uclibc/arm/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/uclibc/arm/no_align.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/uclibc/mips/mips32/align.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/uclibc/mips/mips32/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/uclibc/mips/mips32/no_align.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/uclibc/mips/mips64/align.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/uclibc/mips/mips64/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/uclibc/mips/mips64/no_align.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/uclibc/mips/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/uclibc/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/uclibc/no_align.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/uclibc/x86_64/l4re.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/uclibc/x86_64/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/uclibc/x86_64/other.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/mod.rs",
        "vendor/libc-0.2.97/src/unix/mod.rs",
        "vendor/libc-0.2.97/src/unix/newlib/aarch64/mod.rs",
        "vendor/libc-0.2.97/src/unix/newlib/align.rs",
        "vendor/libc-0.2.97/src/unix/newlib/arm/mod.rs",
        "vendor/libc-0.2.97/src/unix/newlib/mod.rs",
        "vendor/libc-0.2.97/src/unix/newlib/no_align.rs",
        "vendor/libc-0.2.97/src/unix/newlib/powerpc/mod.rs",
        "vendor/libc-0.2.97/src/unix/newlib/xtensa/mod.rs",
        "vendor/libc-0.2.97/src/unix/no_align.rs",
        "vendor/libc-0.2.97/src/unix/redox/mod.rs",
        "vendor/libc-0.2.97/src/unix/solarish/compat.rs",
        "vendor/libc-0.2.97/src/unix/solarish/illumos.rs",
        "vendor/libc-0.2.97/src/unix/solarish/mod.rs",
        "vendor/libc-0.2.97/src/unix/solarish/solaris.rs",
        "vendor/libc-0.2.97/src/vxworks/aarch64.rs",
        "vendor/libc-0.2.97/src/vxworks/arm.rs",
        "vendor/libc-0.2.97/src/vxworks/mod.rs",
        "vendor/libc-0.2.97/src/vxworks/powerpc.rs",
        "vendor/libc-0.2.97/src/vxworks/powerpc64.rs",
        "vendor/libc-0.2.97/src/vxworks/x86.rs",
        "vendor/libc-0.2.97/src/vxworks/x86_64.rs",
        "vendor/libc-0.2.97/src/wasi.rs",
        "vendor/libc-0.2.97/src/windows/gnu/align.rs",
        "vendor/libc-0.2.97/src/windows/gnu/mod.rs",
        "vendor/libc-0.2.97/src/windows/mod.rs",
        "vendor/libc-0.2.97/src/windows/msvc.rs",
    ],
    crate = "libc",
    crate_root = "vendor/libc-0.2.97/src/lib.rs",
    edition = "2015",
    features = [
        "align",
        "default",
        "extra_traits",
        "std",
    ],
    licenses = [
        "vendor/libc-0.2.97/LICENSE-APACHE",
        "vendor/libc-0.2.97/LICENSE-MIT",
    ],
    rustc_flags = [
        "--cap-lints=allow",
        "@$(location :libc-0.2.97-build-script-build-args)",
    ],
    visibility = [],
)

third_party_rust_binary(
    name = "libc-0.2.97-build-script-build",
    srcs = [
        "vendor/libc-0.2.97/build.rs",
        "vendor/libc-0.2.97/src/fixed_width_ints.rs",
        "vendor/libc-0.2.97/src/fuchsia/aarch64.rs",
        "vendor/libc-0.2.97/src/fuchsia/align.rs",
        "vendor/libc-0.2.97/src/fuchsia/mod.rs",
        "vendor/libc-0.2.97/src/fuchsia/no_align.rs",
        "vendor/libc-0.2.97/src/fuchsia/x86_64.rs",
        "vendor/libc-0.2.97/src/hermit/aarch64.rs",
        "vendor/libc-0.2.97/src/hermit/mod.rs",
        "vendor/libc-0.2.97/src/hermit/x86_64.rs",
        "vendor/libc-0.2.97/src/lib.rs",
        "vendor/libc-0.2.97/src/macros.rs",
        "vendor/libc-0.2.97/src/psp.rs",
        "vendor/libc-0.2.97/src/sgx.rs",
        "vendor/libc-0.2.97/src/switch.rs",
        "vendor/libc-0.2.97/src/unix/align.rs",
        "vendor/libc-0.2.97/src/unix/bsd/apple/b32/align.rs",
        "vendor/libc-0.2.97/src/unix/bsd/apple/b32/mod.rs",
        "vendor/libc-0.2.97/src/unix/bsd/apple/b64/aarch64/align.rs",
        "vendor/libc-0.2.97/src/unix/bsd/apple/b64/aarch64/mod.rs",
        "vendor/libc-0.2.97/src/unix/bsd/apple/b64/align.rs",
        "vendor/libc-0.2.97/src/unix/bsd/apple/b64/mod.rs",
        "vendor/libc-0.2.97/src/unix/bsd/apple/b64/x86_64/align.rs",
        "vendor/libc-0.2.97/src/unix/bsd/apple/b64/x86_64/mod.rs",
        "vendor/libc-0.2.97/src/unix/bsd/apple/mod.rs",
        "vendor/libc-0.2.97/src/unix/bsd/freebsdlike/dragonfly/errno.rs",
        "vendor/libc-0.2.97/src/unix/bsd/freebsdlike/dragonfly/mod.rs",
        "vendor/libc-0.2.97/src/unix/bsd/freebsdlike/freebsd/aarch64.rs",
        "vendor/libc-0.2.97/src/unix/bsd/freebsdlike/freebsd/arm.rs",
        "vendor/libc-0.2.97/src/unix/bsd/freebsdlike/freebsd/freebsd11/b64.rs",
        "vendor/libc-0.2.97/src/unix/bsd/freebsdlike/freebsd/freebsd11/mod.rs",
        "vendor/libc-0.2.97/src/unix/bsd/freebsdlike/freebsd/freebsd12/b64.rs",
        "vendor/libc-0.2.97/src/unix/bsd/freebsdlike/freebsd/freebsd12/mod.rs",
        "vendor/libc-0.2.97/src/unix/bsd/freebsdlike/freebsd/freebsd13/b64.rs",
        "vendor/libc-0.2.97/src/unix/bsd/freebsdlike/freebsd/freebsd13/mod.rs",
        "vendor/libc-0.2.97/src/unix/bsd/freebsdlike/freebsd/mod.rs",
        "vendor/libc-0.2.97/src/unix/bsd/freebsdlike/freebsd/powerpc64.rs",
        "vendor/libc-0.2.97/src/unix/bsd/freebsdlike/freebsd/x86.rs",
        "vendor/libc-0.2.97/src/unix/bsd/freebsdlike/freebsd/x86_64/align.rs",
        "vendor/libc-0.2.97/src/unix/bsd/freebsdlike/freebsd/x86_64/mod.rs",
        "vendor/libc-0.2.97/src/unix/bsd/freebsdlike/mod.rs",
        "vendor/libc-0.2.97/src/unix/bsd/mod.rs",
        "vendor/libc-0.2.97/src/unix/bsd/netbsdlike/mod.rs",
        "vendor/libc-0.2.97/src/unix/bsd/netbsdlike/netbsd/aarch64.rs",
        "vendor/libc-0.2.97/src/unix/bsd/netbsdlike/netbsd/arm.rs",
        "vendor/libc-0.2.97/src/unix/bsd/netbsdlike/netbsd/mod.rs",
        "vendor/libc-0.2.97/src/unix/bsd/netbsdlike/netbsd/powerpc.rs",
        "vendor/libc-0.2.97/src/unix/bsd/netbsdlike/netbsd/sparc64.rs",
        "vendor/libc-0.2.97/src/unix/bsd/netbsdlike/netbsd/x86.rs",
        "vendor/libc-0.2.97/src/unix/bsd/netbsdlike/netbsd/x86_64.rs",
        "vendor/libc-0.2.97/src/unix/bsd/netbsdlike/openbsd/aarch64.rs",
        "vendor/libc-0.2.97/src/unix/bsd/netbsdlike/openbsd/mod.rs",
        "vendor/libc-0.2.97/src/unix/bsd/netbsdlike/openbsd/sparc64.rs",
        "vendor/libc-0.2.97/src/unix/bsd/netbsdlike/openbsd/x86.rs",
        "vendor/libc-0.2.97/src/unix/bsd/netbsdlike/openbsd/x86_64.rs",
        "vendor/libc-0.2.97/src/unix/haiku/b32.rs",
        "vendor/libc-0.2.97/src/unix/haiku/b64.rs",
        "vendor/libc-0.2.97/src/unix/haiku/mod.rs",
        "vendor/libc-0.2.97/src/unix/haiku/native.rs",
        "vendor/libc-0.2.97/src/unix/hermit/aarch64.rs",
        "vendor/libc-0.2.97/src/unix/hermit/mod.rs",
        "vendor/libc-0.2.97/src/unix/hermit/x86_64.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/android/b32/arm.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/android/b32/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/android/b32/x86/align.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/android/b32/x86/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/android/b64/aarch64/align.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/android/b64/aarch64/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/android/b64/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/android/b64/x86_64/align.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/android/b64/x86_64/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/android/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/emscripten/align.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/emscripten/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/emscripten/no_align.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/align.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/arch/generic/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/arch/mips/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/arch/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/arch/powerpc/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/arch/sparc/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/gnu/align.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/gnu/b32/arm/align.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/gnu/b32/arm/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/gnu/b32/mips/align.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/gnu/b32/mips/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/gnu/b32/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/gnu/b32/powerpc.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/gnu/b32/riscv32/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/gnu/b32/sparc/align.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/gnu/b32/sparc/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/gnu/b32/x86/align.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/gnu/b32/x86/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/gnu/b64/aarch64/align.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/gnu/b64/aarch64/ilp32.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/gnu/b64/aarch64/lp64.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/gnu/b64/aarch64/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/gnu/b64/mips64/align.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/gnu/b64/mips64/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/gnu/b64/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/gnu/b64/powerpc64/align.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/gnu/b64/powerpc64/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/gnu/b64/riscv64/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/gnu/b64/s390x.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/gnu/b64/sparc64/align.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/gnu/b64/sparc64/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/gnu/b64/x86_64/align.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/gnu/b64/x86_64/x32.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/gnu/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/gnu/no_align.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/musl/b32/arm/align.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/musl/b32/arm/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/musl/b32/hexagon.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/musl/b32/mips/align.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/musl/b32/mips/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/musl/b32/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/musl/b32/powerpc.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/musl/b32/x86/align.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/musl/b32/x86/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/musl/b64/aarch64/align.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/musl/b64/aarch64/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/musl/b64/mips64.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/musl/b64/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/musl/b64/powerpc64.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/musl/b64/s390x.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/musl/b64/x86_64/align.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/musl/b64/x86_64/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/musl/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/no_align.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/uclibc/align.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/uclibc/arm/align.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/uclibc/arm/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/uclibc/arm/no_align.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/uclibc/mips/mips32/align.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/uclibc/mips/mips32/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/uclibc/mips/mips32/no_align.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/uclibc/mips/mips64/align.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/uclibc/mips/mips64/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/uclibc/mips/mips64/no_align.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/uclibc/mips/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/uclibc/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/uclibc/no_align.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/uclibc/x86_64/l4re.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/uclibc/x86_64/mod.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/linux/uclibc/x86_64/other.rs",
        "vendor/libc-0.2.97/src/unix/linux_like/mod.rs",
        "vendor/libc-0.2.97/src/unix/mod.rs",
        "vendor/libc-0.2.97/src/unix/newlib/aarch64/mod.rs",
        "vendor/libc-0.2.97/src/unix/newlib/align.rs",
        "vendor/libc-0.2.97/src/unix/newlib/arm/mod.rs",
        "vendor/libc-0.2.97/src/unix/newlib/mod.rs",
        "vendor/libc-0.2.97/src/unix/newlib/no_align.rs",
        "vendor/libc-0.2.97/src/unix/newlib/powerpc/mod.rs",
        "vendor/libc-0.2.97/src/unix/newlib/xtensa/mod.rs",
        "vendor/libc-0.2.97/src/unix/no_align.rs",
        "vendor/libc-0.2.97/src/unix/redox/mod.rs",
        "vendor/libc-0.2.97/src/unix/solarish/compat.rs",
        "vendor/libc-0.2.97/src/unix/solarish/illumos.rs",
        "vendor/libc-0.2.97/src/unix/solarish/mod.rs",
        "vendor/libc-0.2.97/src/unix/solarish/solaris.rs",
        "vendor/libc-0.2.97/src/vxworks/aarch64.rs",
        "vendor/libc-0.2.97/src/vxworks/arm.rs",
        "vendor/libc-0.2.97/src/vxworks/mod.rs",
        "vendor/libc-0.2.97/src/vxworks/powerpc.rs",
        "vendor/libc-0.2.97/src/vxworks/powerpc64.rs",
        "vendor/libc-0.2.97/src/vxworks/x86.rs",
        "vendor/libc-0.2.97/src/vxworks/x86_64.rs",
        "vendor/libc-0.2.97/src/wasi.rs",
        "vendor/libc-0.2.97/src/windows/gnu/align.rs",
        "vendor/libc-0.2.97/src/windows/gnu/mod.rs",
        "vendor/libc-0.2.97/src/windows/mod.rs",
        "vendor/libc-0.2.97/src/windows/msvc.rs",
        "vendor/libc-0.2.97/tests/const_fn.rs",
    ],
    crate = "build_script_build",
    crate_root = "vendor/libc-0.2.97/build.rs",
    edition = "2015",
    features = [
        "align",
        "default",
        "extra_traits",
        "std",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

rust_buildscript_genrule_filter(
    name = "libc-0.2.97-build-script-build-args",
    package_name = "libc",
    buildscript_rule = ":libc-0.2.97-build-script-build",
    cfgs = [],
    features = [
        "align",
        "default",
        "extra_traits",
        "std",
    ],
    outfile = "args.txt",
    version = "0.2.97",
)

third_party_rust_library(
    name = "linked-hash-map-0.5.4",
    srcs = [
        "vendor/linked-hash-map-0.5.4/src/heapsize.rs",
        "vendor/linked-hash-map-0.5.4/src/lib.rs",
        "vendor/linked-hash-map-0.5.4/src/serde.rs",
    ],
    crate = "linked_hash_map",
    crate_root = "vendor/linked-hash-map-0.5.4/src/lib.rs",
    edition = "2015",
    licenses = [
        "vendor/linked-hash-map-0.5.4/LICENSE-APACHE",
        "vendor/linked-hash-map-0.5.4/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

third_party_rust_library(
    name = "lock_api-0.4.4",
    srcs = [
        "vendor/lock_api-0.4.4/src/lib.rs",
        "vendor/lock_api-0.4.4/src/mutex.rs",
        "vendor/lock_api-0.4.4/src/remutex.rs",
        "vendor/lock_api-0.4.4/src/rwlock.rs",
    ],
    crate = "lock_api",
    crate_root = "vendor/lock_api-0.4.4/src/lib.rs",
    edition = "2018",
    licenses = [
        "vendor/lock_api-0.4.4/LICENSE-APACHE",
        "vendor/lock_api-0.4.4/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [":scopeguard-1.1.0"],
)

third_party_rust_library(
    name = "log-0.4.14",
    srcs = [
        "vendor/log-0.4.14/src/kv/error.rs",
        "vendor/log-0.4.14/src/kv/key.rs",
        "vendor/log-0.4.14/src/kv/mod.rs",
        "vendor/log-0.4.14/src/kv/source.rs",
        "vendor/log-0.4.14/src/kv/value.rs",
        "vendor/log-0.4.14/src/lib.rs",
        "vendor/log-0.4.14/src/macros.rs",
        "vendor/log-0.4.14/src/serde.rs",
    ],
    crate = "log",
    crate_root = "vendor/log-0.4.14/src/lib.rs",
    edition = "2015",
    licenses = [
        "vendor/log-0.4.14/LICENSE-APACHE",
        "vendor/log-0.4.14/LICENSE-MIT",
    ],
    rustc_flags = [
        "--cap-lints=allow",
        "@$(location :log-0.4.14-build-script-build-args)",
    ],
    visibility = [],
    deps = [":cfg-if-1.0.0"],
)

third_party_rust_binary(
    name = "log-0.4.14-build-script-build",
    srcs = [
        "vendor/log-0.4.14/benches/value.rs",
        "vendor/log-0.4.14/build.rs",
        "vendor/log-0.4.14/src/kv/error.rs",
        "vendor/log-0.4.14/src/kv/key.rs",
        "vendor/log-0.4.14/src/kv/mod.rs",
        "vendor/log-0.4.14/src/kv/source.rs",
        "vendor/log-0.4.14/src/kv/value.rs",
        "vendor/log-0.4.14/src/lib.rs",
        "vendor/log-0.4.14/src/macros.rs",
        "vendor/log-0.4.14/src/serde.rs",
    ],
    crate = "build_script_build",
    crate_root = "vendor/log-0.4.14/build.rs",
    edition = "2015",
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

rust_buildscript_genrule_filter(
    name = "log-0.4.14-build-script-build-args",
    package_name = "log",
    buildscript_rule = ":log-0.4.14-build-script-build",
    cfgs = [],
    features = [],
    outfile = "args.txt",
    version = "0.4.14",
)

third_party_rust_library(
    name = "lru-cache-0.1.2",
    srcs = [
        "vendor/lru-cache-0.1.2/src/heapsize.rs",
        "vendor/lru-cache-0.1.2/src/lib.rs",
    ],
    crate = "lru_cache",
    crate_root = "vendor/lru-cache-0.1.2/src/lib.rs",
    edition = "2015",
    licenses = [
        "vendor/lru-cache-0.1.2/LICENSE-APACHE",
        "vendor/lru-cache-0.1.2/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [":linked-hash-map-0.5.4"],
)

third_party_rust_library(
    name = "match_cfg-0.1.0",
    srcs = ["vendor/match_cfg-0.1.0/src/lib.rs"],
    crate = "match_cfg",
    crate_root = "vendor/match_cfg-0.1.0/src/lib.rs",
    edition = "2015",
    features = [
        "default",
        "use_core",
    ],
    licenses = [
        "vendor/match_cfg-0.1.0/LICENSE-APACHE",
        "vendor/match_cfg-0.1.0/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

third_party_rust_library(
    name = "matches-0.1.8",
    srcs = [
        "vendor/matches-0.1.8/lib.rs",
        "vendor/matches-0.1.8/tests/macro_use_one.rs",
    ],
    crate = "matches",
    crate_root = "vendor/matches-0.1.8/lib.rs",
    edition = "2015",
    licenses = ["vendor/matches-0.1.8/LICENSE"],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

third_party_rust_library(
    name = "memchr-2.4.0",
    srcs = [
        "vendor/memchr-2.4.0/src/cow.rs",
        "vendor/memchr-2.4.0/src/lib.rs",
        "vendor/memchr-2.4.0/src/memchr/c.rs",
        "vendor/memchr-2.4.0/src/memchr/fallback.rs",
        "vendor/memchr-2.4.0/src/memchr/iter.rs",
        "vendor/memchr-2.4.0/src/memchr/mod.rs",
        "vendor/memchr-2.4.0/src/memchr/naive.rs",
        "vendor/memchr-2.4.0/src/memchr/x86/avx.rs",
        "vendor/memchr-2.4.0/src/memchr/x86/mod.rs",
        "vendor/memchr-2.4.0/src/memchr/x86/sse2.rs",
        "vendor/memchr-2.4.0/src/memmem/byte_frequencies.rs",
        "vendor/memchr-2.4.0/src/memmem/genericsimd.rs",
        "vendor/memchr-2.4.0/src/memmem/mod.rs",
        "vendor/memchr-2.4.0/src/memmem/prefilter/fallback.rs",
        "vendor/memchr-2.4.0/src/memmem/prefilter/genericsimd.rs",
        "vendor/memchr-2.4.0/src/memmem/prefilter/mod.rs",
        "vendor/memchr-2.4.0/src/memmem/prefilter/x86/avx.rs",
        "vendor/memchr-2.4.0/src/memmem/prefilter/x86/mod.rs",
        "vendor/memchr-2.4.0/src/memmem/prefilter/x86/sse.rs",
        "vendor/memchr-2.4.0/src/memmem/rabinkarp.rs",
        "vendor/memchr-2.4.0/src/memmem/rarebytes.rs",
        "vendor/memchr-2.4.0/src/memmem/twoway.rs",
        "vendor/memchr-2.4.0/src/memmem/util.rs",
        "vendor/memchr-2.4.0/src/memmem/vector.rs",
        "vendor/memchr-2.4.0/src/memmem/x86/avx.rs",
        "vendor/memchr-2.4.0/src/memmem/x86/mod.rs",
        "vendor/memchr-2.4.0/src/memmem/x86/sse.rs",
        "vendor/memchr-2.4.0/src/tests/memchr/iter.rs",
        "vendor/memchr-2.4.0/src/tests/memchr/memchr.rs",
        "vendor/memchr-2.4.0/src/tests/memchr/mod.rs",
        "vendor/memchr-2.4.0/src/tests/memchr/simple.rs",
        "vendor/memchr-2.4.0/src/tests/memchr/testdata.rs",
        "vendor/memchr-2.4.0/src/tests/mod.rs",
    ],
    crate = "memchr",
    crate_root = "vendor/memchr-2.4.0/src/lib.rs",
    edition = "2018",
    features = [
        "default",
        "std",
        "use_std",
    ],
    licenses = [
        "vendor/memchr-2.4.0/COPYING",
        "vendor/memchr-2.4.0/LICENSE-MIT",
        "vendor/memchr-2.4.0/UNLICENSE",
    ],
    rustc_flags = [
        "--cap-lints=allow",
        "@$(location :memchr-2.4.0-build-script-build-args)",
    ],
    visibility = [],
)

third_party_rust_binary(
    name = "memchr-2.4.0-build-script-build",
    srcs = ["vendor/memchr-2.4.0/build.rs"],
    crate = "build_script_build",
    crate_root = "vendor/memchr-2.4.0/build.rs",
    edition = "2018",
    features = [
        "default",
        "std",
        "use_std",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

rust_buildscript_genrule_filter(
    name = "memchr-2.4.0-build-script-build-args",
    package_name = "memchr",
    buildscript_rule = ":memchr-2.4.0-build-script-build",
    cfgs = [],
    features = [
        "default",
        "std",
        "use_std",
    ],
    outfile = "args.txt",
    version = "2.4.0",
)

third_party_rust_library(
    name = "mime-0.3.16",
    srcs = [
        "vendor/mime-0.3.16/src/lib.rs",
        "vendor/mime-0.3.16/src/parse.rs",
    ],
    crate = "mime",
    crate_root = "vendor/mime-0.3.16/src/lib.rs",
    edition = "2015",
    licenses = [
        "vendor/mime-0.3.16/LICENSE-APACHE",
        "vendor/mime-0.3.16/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

third_party_rust_library(
    name = "mime_guess-2.0.3",
    srcs = [
        "vendor/mime_guess-2.0.3/src/impl_bin_search.rs",
        "vendor/mime_guess-2.0.3/src/impl_phf.rs",
        "vendor/mime_guess-2.0.3/src/lib.rs",
        "vendor/mime_guess-2.0.3/src/mime_types.rs",
    ],
    crate = "mime_guess",
    crate_root = "vendor/mime_guess-2.0.3/src/lib.rs",
    edition = "2015",
    env = {
        "OUT_DIR": ".",
    },
    features = [
        "default",
        "rev-mappings",
    ],
    licenses = ["vendor/mime_guess-2.0.3/LICENSE"],
    mapped_srcs = {
        ":mime_guess-2.0.3-build-script-build-srcs=mime_types_generated.rs": "vendor/mime_guess-2.0.3/src/mime_types_generated.rs",
    },
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [
        ":mime-0.3.16",
        ":unicase-2.6.0",
    ],
)

third_party_rust_binary(
    name = "mime_guess-2.0.3-build-script-build",
    srcs = [
        "vendor/mime_guess-2.0.3/benches/benchmark.rs",
        "vendor/mime_guess-2.0.3/build.rs",
        "vendor/mime_guess-2.0.3/examples/rev_map.rs",
        "vendor/mime_guess-2.0.3/src/impl_bin_search.rs",
        "vendor/mime_guess-2.0.3/src/impl_phf.rs",
        "vendor/mime_guess-2.0.3/src/lib.rs",
        "vendor/mime_guess-2.0.3/src/mime_types.rs",
    ],
    crate = "build_script_build",
    crate_root = "vendor/mime_guess-2.0.3/build.rs",
    edition = "2015",
    env = {
        "OUT_DIR": ".",
    },
    features = [
        "default",
        "rev-mappings",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [":unicase-2.6.0"],
)

rust_buildscript_genrule_srcs(
    name = "mime_guess-2.0.3-build-script-build-srcs",
    package_name = "mime_guess",
    buildscript_rule = ":mime_guess-2.0.3-build-script-build",
    cfgs = [],
    features = [
        "default",
        "rev-mappings",
    ],
    files = ["mime_types_generated.rs"],
    version = "2.0.3",
)

third_party_rust_library(
    name = "miniz_oxide-0.4.4",
    srcs = [
        "vendor/miniz_oxide-0.4.4/src/deflate/buffer.rs",
        "vendor/miniz_oxide-0.4.4/src/deflate/core.rs",
        "vendor/miniz_oxide-0.4.4/src/deflate/mod.rs",
        "vendor/miniz_oxide-0.4.4/src/deflate/stream.rs",
        "vendor/miniz_oxide-0.4.4/src/inflate/core.rs",
        "vendor/miniz_oxide-0.4.4/src/inflate/mod.rs",
        "vendor/miniz_oxide-0.4.4/src/inflate/output_buffer.rs",
        "vendor/miniz_oxide-0.4.4/src/inflate/stream.rs",
        "vendor/miniz_oxide-0.4.4/src/lib.rs",
        "vendor/miniz_oxide-0.4.4/src/shared.rs",
    ],
    crate = "miniz_oxide",
    crate_root = "vendor/miniz_oxide-0.4.4/src/lib.rs",
    edition = "2018",
    licenses = [
        "vendor/miniz_oxide-0.4.4/LICENSE",
        "vendor/miniz_oxide-0.4.4/LICENSE-APACHE.md",
        "vendor/miniz_oxide-0.4.4/LICENSE-MIT.md",
        "vendor/miniz_oxide-0.4.4/LICENSE-ZLIB.md",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [":adler-1.0.2"],
)

third_party_rust_library(
    name = "mio-0.7.11",
    srcs = [
        "vendor/mio-0.7.11/src/event/event.rs",
        "vendor/mio-0.7.11/src/event/events.rs",
        "vendor/mio-0.7.11/src/event/mod.rs",
        "vendor/mio-0.7.11/src/event/source.rs",
        "vendor/mio-0.7.11/src/interest.rs",
        "vendor/mio-0.7.11/src/io_source.rs",
        "vendor/mio-0.7.11/src/lib.rs",
        "vendor/mio-0.7.11/src/macros.rs",
        "vendor/mio-0.7.11/src/net/mod.rs",
        "vendor/mio-0.7.11/src/net/tcp/listener.rs",
        "vendor/mio-0.7.11/src/net/tcp/mod.rs",
        "vendor/mio-0.7.11/src/net/tcp/socket.rs",
        "vendor/mio-0.7.11/src/net/tcp/stream.rs",
        "vendor/mio-0.7.11/src/net/udp.rs",
        "vendor/mio-0.7.11/src/net/uds/datagram.rs",
        "vendor/mio-0.7.11/src/net/uds/listener.rs",
        "vendor/mio-0.7.11/src/net/uds/mod.rs",
        "vendor/mio-0.7.11/src/net/uds/stream.rs",
        "vendor/mio-0.7.11/src/poll.rs",
        "vendor/mio-0.7.11/src/sys/mod.rs",
        "vendor/mio-0.7.11/src/sys/shell/mod.rs",
        "vendor/mio-0.7.11/src/sys/shell/selector.rs",
        "vendor/mio-0.7.11/src/sys/shell/tcp.rs",
        "vendor/mio-0.7.11/src/sys/shell/udp.rs",
        "vendor/mio-0.7.11/src/sys/shell/uds.rs",
        "vendor/mio-0.7.11/src/sys/shell/waker.rs",
        "vendor/mio-0.7.11/src/sys/unix/mod.rs",
        "vendor/mio-0.7.11/src/sys/unix/net.rs",
        "vendor/mio-0.7.11/src/sys/unix/pipe.rs",
        "vendor/mio-0.7.11/src/sys/unix/selector/epoll.rs",
        "vendor/mio-0.7.11/src/sys/unix/selector/kqueue.rs",
        "vendor/mio-0.7.11/src/sys/unix/selector/mod.rs",
        "vendor/mio-0.7.11/src/sys/unix/sourcefd.rs",
        "vendor/mio-0.7.11/src/sys/unix/tcp.rs",
        "vendor/mio-0.7.11/src/sys/unix/udp.rs",
        "vendor/mio-0.7.11/src/sys/unix/uds/datagram.rs",
        "vendor/mio-0.7.11/src/sys/unix/uds/listener.rs",
        "vendor/mio-0.7.11/src/sys/unix/uds/mod.rs",
        "vendor/mio-0.7.11/src/sys/unix/uds/socketaddr.rs",
        "vendor/mio-0.7.11/src/sys/unix/uds/stream.rs",
        "vendor/mio-0.7.11/src/sys/unix/waker.rs",
        "vendor/mio-0.7.11/src/sys/windows/afd.rs",
        "vendor/mio-0.7.11/src/sys/windows/event.rs",
        "vendor/mio-0.7.11/src/sys/windows/io_status_block.rs",
        "vendor/mio-0.7.11/src/sys/windows/mod.rs",
        "vendor/mio-0.7.11/src/sys/windows/named_pipe.rs",
        "vendor/mio-0.7.11/src/sys/windows/net.rs",
        "vendor/mio-0.7.11/src/sys/windows/overlapped.rs",
        "vendor/mio-0.7.11/src/sys/windows/selector.rs",
        "vendor/mio-0.7.11/src/sys/windows/tcp.rs",
        "vendor/mio-0.7.11/src/sys/windows/udp.rs",
        "vendor/mio-0.7.11/src/sys/windows/waker.rs",
        "vendor/mio-0.7.11/src/token.rs",
        "vendor/mio-0.7.11/src/waker.rs",
    ],
    crate = "mio",
    crate_root = "vendor/mio-0.7.11/src/lib.rs",
    edition = "2018",
    features = [
        "default",
        "net",
        "os-ext",
        "os-poll",
        "os-util",
        "tcp",
        "udp",
        "uds",
    ],
    licenses = ["vendor/mio-0.7.11/LICENSE"],
    platform = {
        "linux-x86_64": {
            "deps": [":libc-0.2.97"],
        },
    },
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [":log-0.4.14"],
)

third_party_rust_library(
    name = "multipart-0.17.1",
    srcs = [
        "vendor/multipart-0.17.1/src/bin/form_test.rs",
        "vendor/multipart-0.17.1/src/bin/read_file.rs",
        "vendor/multipart-0.17.1/src/client/hyper.rs",
        "vendor/multipart-0.17.1/src/client/lazy.rs",
        "vendor/multipart-0.17.1/src/client/mod.rs",
        "vendor/multipart-0.17.1/src/client/sized.rs",
        "vendor/multipart-0.17.1/src/lib.rs",
        "vendor/multipart-0.17.1/src/local_test.rs",
        "vendor/multipart-0.17.1/src/mock.rs",
        "vendor/multipart-0.17.1/src/server/boundary.rs",
        "vendor/multipart-0.17.1/src/server/field.rs",
        "vendor/multipart-0.17.1/src/server/hyper.rs",
        "vendor/multipart-0.17.1/src/server/iron.rs",
        "vendor/multipart-0.17.1/src/server/mod.rs",
        "vendor/multipart-0.17.1/src/server/nickel.rs",
        "vendor/multipart-0.17.1/src/server/save.rs",
        "vendor/multipart-0.17.1/src/server/tiny_http.rs",
    ],
    crate = "multipart",
    crate_root = "vendor/multipart-0.17.1/src/lib.rs",
    edition = "2015",
    features = [
        "buf_redux",
        "httparse",
        "quick-error",
        "safemem",
        "server",
        "twoway",
    ],
    licenses = [
        "vendor/multipart-0.17.1/LICENSE",
        "vendor/multipart-0.17.1/LICENSE-APACHE",
        "vendor/multipart-0.17.1/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [
        ":buf_redux-0.8.4",
        ":httparse-1.4.1",
        ":log-0.4.14",
        ":mime-0.3.16",
        ":mime_guess-2.0.3",
        ":quick-error-1.2.3",
        ":rand-0.7.3",
        ":safemem-0.3.3",
        ":tempfile-3.2.0",
        ":twoway-0.1.8",
    ],
)

third_party_rust_library(
    name = "native-tls-0.2.7",
    srcs = [
        "vendor/native-tls-0.2.7/src/imp/openssl.rs",
        "vendor/native-tls-0.2.7/src/imp/schannel.rs",
        "vendor/native-tls-0.2.7/src/imp/security_framework.rs",
        "vendor/native-tls-0.2.7/src/lib.rs",
        "vendor/native-tls-0.2.7/src/test.rs",
    ],
    crate = "native_tls",
    crate_root = "vendor/native-tls-0.2.7/src/lib.rs",
    edition = "2015",
    licenses = [
        "vendor/native-tls-0.2.7/LICENSE-APACHE",
        "vendor/native-tls-0.2.7/LICENSE-MIT",
    ],
    platform = {
        "linux-x86_64": {
            "deps": [
                ":log-0.4.14",
                ":openssl-0.10.34",
                ":openssl-probe-0.1.4",
                ":openssl-sys-0.9.63",
            ],
        },
    },
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

third_party_rust_binary(
    name = "native-tls-0.2.7-build-script-build",
    srcs = [
        "vendor/native-tls-0.2.7/build.rs",
        "vendor/native-tls-0.2.7/examples/google-connect.rs",
        "vendor/native-tls-0.2.7/examples/simple-server.rs",
        "vendor/native-tls-0.2.7/src/imp/openssl.rs",
        "vendor/native-tls-0.2.7/src/imp/schannel.rs",
        "vendor/native-tls-0.2.7/src/imp/security_framework.rs",
        "vendor/native-tls-0.2.7/src/lib.rs",
        "vendor/native-tls-0.2.7/src/test.rs",
    ],
    crate = "build_script_build",
    crate_root = "vendor/native-tls-0.2.7/build.rs",
    edition = "2015",
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

third_party_rust_library(
    name = "nix",
    srcs = [
        "vendor/nix-0.19.1/src/dir.rs",
        "vendor/nix-0.19.1/src/env.rs",
        "vendor/nix-0.19.1/src/errno.rs",
        "vendor/nix-0.19.1/src/fcntl.rs",
        "vendor/nix-0.19.1/src/features.rs",
        "vendor/nix-0.19.1/src/ifaddrs.rs",
        "vendor/nix-0.19.1/src/kmod.rs",
        "vendor/nix-0.19.1/src/lib.rs",
        "vendor/nix-0.19.1/src/macros.rs",
        "vendor/nix-0.19.1/src/mount.rs",
        "vendor/nix-0.19.1/src/mqueue.rs",
        "vendor/nix-0.19.1/src/net/if_.rs",
        "vendor/nix-0.19.1/src/net/mod.rs",
        "vendor/nix-0.19.1/src/poll.rs",
        "vendor/nix-0.19.1/src/pty.rs",
        "vendor/nix-0.19.1/src/sched.rs",
        "vendor/nix-0.19.1/src/sys/aio.rs",
        "vendor/nix-0.19.1/src/sys/epoll.rs",
        "vendor/nix-0.19.1/src/sys/event.rs",
        "vendor/nix-0.19.1/src/sys/eventfd.rs",
        "vendor/nix-0.19.1/src/sys/inotify.rs",
        "vendor/nix-0.19.1/src/sys/ioctl/bsd.rs",
        "vendor/nix-0.19.1/src/sys/ioctl/linux.rs",
        "vendor/nix-0.19.1/src/sys/ioctl/mod.rs",
        "vendor/nix-0.19.1/src/sys/memfd.rs",
        "vendor/nix-0.19.1/src/sys/mman.rs",
        "vendor/nix-0.19.1/src/sys/mod.rs",
        "vendor/nix-0.19.1/src/sys/pthread.rs",
        "vendor/nix-0.19.1/src/sys/ptrace/bsd.rs",
        "vendor/nix-0.19.1/src/sys/ptrace/linux.rs",
        "vendor/nix-0.19.1/src/sys/ptrace/mod.rs",
        "vendor/nix-0.19.1/src/sys/quota.rs",
        "vendor/nix-0.19.1/src/sys/reboot.rs",
        "vendor/nix-0.19.1/src/sys/select.rs",
        "vendor/nix-0.19.1/src/sys/sendfile.rs",
        "vendor/nix-0.19.1/src/sys/signal.rs",
        "vendor/nix-0.19.1/src/sys/signalfd.rs",
        "vendor/nix-0.19.1/src/sys/socket/addr.rs",
        "vendor/nix-0.19.1/src/sys/socket/mod.rs",
        "vendor/nix-0.19.1/src/sys/socket/sockopt.rs",
        "vendor/nix-0.19.1/src/sys/stat.rs",
        "vendor/nix-0.19.1/src/sys/statfs.rs",
        "vendor/nix-0.19.1/src/sys/statvfs.rs",
        "vendor/nix-0.19.1/src/sys/sysinfo.rs",
        "vendor/nix-0.19.1/src/sys/termios.rs",
        "vendor/nix-0.19.1/src/sys/time.rs",
        "vendor/nix-0.19.1/src/sys/timerfd.rs",
        "vendor/nix-0.19.1/src/sys/uio.rs",
        "vendor/nix-0.19.1/src/sys/utsname.rs",
        "vendor/nix-0.19.1/src/sys/wait.rs",
        "vendor/nix-0.19.1/src/time.rs",
        "vendor/nix-0.19.1/src/ucontext.rs",
        "vendor/nix-0.19.1/src/unistd.rs",
    ],
    crate = "nix",
    crate_root = "vendor/nix-0.19.1/src/lib.rs",
    edition = "2018",
    licenses = ["vendor/nix-0.19.1/LICENSE"],
    rustc_flags = ["--cap-lints=allow"],
    visibility = ["PUBLIC"],
    deps = [
        ":bitflags-1.2.1",
        ":cfg-if-1.0.0",
        ":libc-0.2.97",
    ],
)

third_party_rust_library(
    name = "nix-0.17.0",
    srcs = [
        "vendor/nix-0.17.0/src/dir.rs",
        "vendor/nix-0.17.0/src/errno.rs",
        "vendor/nix-0.17.0/src/fcntl.rs",
        "vendor/nix-0.17.0/src/features.rs",
        "vendor/nix-0.17.0/src/ifaddrs.rs",
        "vendor/nix-0.17.0/src/kmod.rs",
        "vendor/nix-0.17.0/src/lib.rs",
        "vendor/nix-0.17.0/src/macros.rs",
        "vendor/nix-0.17.0/src/mount.rs",
        "vendor/nix-0.17.0/src/mqueue.rs",
        "vendor/nix-0.17.0/src/net/if_.rs",
        "vendor/nix-0.17.0/src/net/mod.rs",
        "vendor/nix-0.17.0/src/poll.rs",
        "vendor/nix-0.17.0/src/pty.rs",
        "vendor/nix-0.17.0/src/sched.rs",
        "vendor/nix-0.17.0/src/sys/aio.rs",
        "vendor/nix-0.17.0/src/sys/epoll.rs",
        "vendor/nix-0.17.0/src/sys/event.rs",
        "vendor/nix-0.17.0/src/sys/eventfd.rs",
        "vendor/nix-0.17.0/src/sys/inotify.rs",
        "vendor/nix-0.17.0/src/sys/ioctl/bsd.rs",
        "vendor/nix-0.17.0/src/sys/ioctl/linux.rs",
        "vendor/nix-0.17.0/src/sys/ioctl/mod.rs",
        "vendor/nix-0.17.0/src/sys/memfd.rs",
        "vendor/nix-0.17.0/src/sys/mman.rs",
        "vendor/nix-0.17.0/src/sys/mod.rs",
        "vendor/nix-0.17.0/src/sys/pthread.rs",
        "vendor/nix-0.17.0/src/sys/ptrace/bsd.rs",
        "vendor/nix-0.17.0/src/sys/ptrace/linux.rs",
        "vendor/nix-0.17.0/src/sys/ptrace/mod.rs",
        "vendor/nix-0.17.0/src/sys/quota.rs",
        "vendor/nix-0.17.0/src/sys/reboot.rs",
        "vendor/nix-0.17.0/src/sys/select.rs",
        "vendor/nix-0.17.0/src/sys/sendfile.rs",
        "vendor/nix-0.17.0/src/sys/signal.rs",
        "vendor/nix-0.17.0/src/sys/signalfd.rs",
        "vendor/nix-0.17.0/src/sys/socket/addr.rs",
        "vendor/nix-0.17.0/src/sys/socket/mod.rs",
        "vendor/nix-0.17.0/src/sys/socket/sockopt.rs",
        "vendor/nix-0.17.0/src/sys/stat.rs",
        "vendor/nix-0.17.0/src/sys/statfs.rs",
        "vendor/nix-0.17.0/src/sys/statvfs.rs",
        "vendor/nix-0.17.0/src/sys/sysinfo.rs",
        "vendor/nix-0.17.0/src/sys/termios.rs",
        "vendor/nix-0.17.0/src/sys/time.rs",
        "vendor/nix-0.17.0/src/sys/uio.rs",
        "vendor/nix-0.17.0/src/sys/utsname.rs",
        "vendor/nix-0.17.0/src/sys/wait.rs",
        "vendor/nix-0.17.0/src/ucontext.rs",
        "vendor/nix-0.17.0/src/unistd.rs",
    ],
    crate = "nix",
    crate_root = "vendor/nix-0.17.0/src/lib.rs",
    edition = "2015",
    licenses = ["vendor/nix-0.17.0/LICENSE"],
    rustc_flags = [
        "--cap-lints=allow",
        "@$(location :nix-0.17.0-build-script-build-args)",
    ],
    visibility = [],
    deps = [
        ":bitflags-1.2.1",
        ":cfg-if-0.1.10",
        ":libc-0.2.97",
        ":void-1.0.2",
    ],
)

third_party_rust_binary(
    name = "nix-0.17.0-build-script-build",
    srcs = [
        "vendor/nix-0.17.0/build.rs",
        "vendor/nix-0.17.0/src/dir.rs",
        "vendor/nix-0.17.0/src/errno.rs",
        "vendor/nix-0.17.0/src/fcntl.rs",
        "vendor/nix-0.17.0/src/features.rs",
        "vendor/nix-0.17.0/src/ifaddrs.rs",
        "vendor/nix-0.17.0/src/kmod.rs",
        "vendor/nix-0.17.0/src/lib.rs",
        "vendor/nix-0.17.0/src/macros.rs",
        "vendor/nix-0.17.0/src/mount.rs",
        "vendor/nix-0.17.0/src/mqueue.rs",
        "vendor/nix-0.17.0/src/net/if_.rs",
        "vendor/nix-0.17.0/src/net/mod.rs",
        "vendor/nix-0.17.0/src/poll.rs",
        "vendor/nix-0.17.0/src/pty.rs",
        "vendor/nix-0.17.0/src/sched.rs",
        "vendor/nix-0.17.0/src/sys/aio.rs",
        "vendor/nix-0.17.0/src/sys/epoll.rs",
        "vendor/nix-0.17.0/src/sys/event.rs",
        "vendor/nix-0.17.0/src/sys/eventfd.rs",
        "vendor/nix-0.17.0/src/sys/inotify.rs",
        "vendor/nix-0.17.0/src/sys/ioctl/bsd.rs",
        "vendor/nix-0.17.0/src/sys/ioctl/linux.rs",
        "vendor/nix-0.17.0/src/sys/ioctl/mod.rs",
        "vendor/nix-0.17.0/src/sys/memfd.rs",
        "vendor/nix-0.17.0/src/sys/mman.rs",
        "vendor/nix-0.17.0/src/sys/mod.rs",
        "vendor/nix-0.17.0/src/sys/pthread.rs",
        "vendor/nix-0.17.0/src/sys/ptrace/bsd.rs",
        "vendor/nix-0.17.0/src/sys/ptrace/linux.rs",
        "vendor/nix-0.17.0/src/sys/ptrace/mod.rs",
        "vendor/nix-0.17.0/src/sys/quota.rs",
        "vendor/nix-0.17.0/src/sys/reboot.rs",
        "vendor/nix-0.17.0/src/sys/select.rs",
        "vendor/nix-0.17.0/src/sys/sendfile.rs",
        "vendor/nix-0.17.0/src/sys/signal.rs",
        "vendor/nix-0.17.0/src/sys/signalfd.rs",
        "vendor/nix-0.17.0/src/sys/socket/addr.rs",
        "vendor/nix-0.17.0/src/sys/socket/mod.rs",
        "vendor/nix-0.17.0/src/sys/socket/sockopt.rs",
        "vendor/nix-0.17.0/src/sys/stat.rs",
        "vendor/nix-0.17.0/src/sys/statfs.rs",
        "vendor/nix-0.17.0/src/sys/statvfs.rs",
        "vendor/nix-0.17.0/src/sys/sysinfo.rs",
        "vendor/nix-0.17.0/src/sys/termios.rs",
        "vendor/nix-0.17.0/src/sys/time.rs",
        "vendor/nix-0.17.0/src/sys/uio.rs",
        "vendor/nix-0.17.0/src/sys/utsname.rs",
        "vendor/nix-0.17.0/src/sys/wait.rs",
        "vendor/nix-0.17.0/src/ucontext.rs",
        "vendor/nix-0.17.0/src/unistd.rs",
        "vendor/nix-0.17.0/test/sys/mod.rs",
        "vendor/nix-0.17.0/test/sys/test_aio.rs",
        "vendor/nix-0.17.0/test/sys/test_aio_drop.rs",
        "vendor/nix-0.17.0/test/sys/test_epoll.rs",
        "vendor/nix-0.17.0/test/sys/test_inotify.rs",
        "vendor/nix-0.17.0/test/sys/test_ioctl.rs",
        "vendor/nix-0.17.0/test/sys/test_lio_listio_resubmit.rs",
        "vendor/nix-0.17.0/test/sys/test_pthread.rs",
        "vendor/nix-0.17.0/test/sys/test_ptrace.rs",
        "vendor/nix-0.17.0/test/sys/test_select.rs",
        "vendor/nix-0.17.0/test/sys/test_signal.rs",
        "vendor/nix-0.17.0/test/sys/test_signalfd.rs",
        "vendor/nix-0.17.0/test/sys/test_socket.rs",
        "vendor/nix-0.17.0/test/sys/test_sockopt.rs",
        "vendor/nix-0.17.0/test/sys/test_sysinfo.rs",
        "vendor/nix-0.17.0/test/sys/test_termios.rs",
        "vendor/nix-0.17.0/test/sys/test_uio.rs",
        "vendor/nix-0.17.0/test/sys/test_wait.rs",
        "vendor/nix-0.17.0/test/test.rs",
        "vendor/nix-0.17.0/test/test_dir.rs",
        "vendor/nix-0.17.0/test/test_fcntl.rs",
        "vendor/nix-0.17.0/test/test_kmod/mod.rs",
        "vendor/nix-0.17.0/test/test_mount.rs",
        "vendor/nix-0.17.0/test/test_mq.rs",
        "vendor/nix-0.17.0/test/test_net.rs",
        "vendor/nix-0.17.0/test/test_nix_path.rs",
        "vendor/nix-0.17.0/test/test_poll.rs",
        "vendor/nix-0.17.0/test/test_pty.rs",
        "vendor/nix-0.17.0/test/test_ptymaster_drop.rs",
        "vendor/nix-0.17.0/test/test_sched.rs",
        "vendor/nix-0.17.0/test/test_sendfile.rs",
        "vendor/nix-0.17.0/test/test_stat.rs",
        "vendor/nix-0.17.0/test/test_unistd.rs",
    ],
    crate = "build_script_build",
    crate_root = "vendor/nix-0.17.0/build.rs",
    edition = "2015",
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

rust_buildscript_genrule_filter(
    name = "nix-0.17.0-build-script-build-args",
    package_name = "nix",
    buildscript_rule = ":nix-0.17.0-build-script-build",
    cfgs = [],
    features = [],
    outfile = "args.txt",
    version = "0.17.0",
)

third_party_rust_library(
    name = "num-integer-0.1.44",
    srcs = [
        "vendor/num-integer-0.1.44/src/average.rs",
        "vendor/num-integer-0.1.44/src/lib.rs",
        "vendor/num-integer-0.1.44/src/roots.rs",
    ],
    crate = "num_integer",
    crate_root = "vendor/num-integer-0.1.44/src/lib.rs",
    edition = "2015",
    licenses = [
        "vendor/num-integer-0.1.44/LICENSE-APACHE",
        "vendor/num-integer-0.1.44/LICENSE-MIT",
    ],
    rustc_flags = [
        "--cap-lints=allow",
        "@$(location :num-integer-0.1.44-build-script-build-args)",
    ],
    visibility = [],
    deps = [":num-traits-0.2.14"],
)

third_party_rust_binary(
    name = "num-integer-0.1.44-build-script-build",
    srcs = [
        "vendor/num-integer-0.1.44/benches/average.rs",
        "vendor/num-integer-0.1.44/benches/gcd.rs",
        "vendor/num-integer-0.1.44/benches/roots.rs",
        "vendor/num-integer-0.1.44/build.rs",
        "vendor/num-integer-0.1.44/src/average.rs",
        "vendor/num-integer-0.1.44/src/lib.rs",
        "vendor/num-integer-0.1.44/src/roots.rs",
        "vendor/num-integer-0.1.44/tests/average.rs",
        "vendor/num-integer-0.1.44/tests/roots.rs",
    ],
    crate = "build_script_build",
    crate_root = "vendor/num-integer-0.1.44/build.rs",
    edition = "2015",
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [":autocfg-1.0.1"],
)

rust_buildscript_genrule_filter(
    name = "num-integer-0.1.44-build-script-build-args",
    package_name = "num-integer",
    buildscript_rule = ":num-integer-0.1.44-build-script-build",
    cfgs = [],
    features = [],
    outfile = "args.txt",
    version = "0.1.44",
)

third_party_rust_library(
    name = "num-traits-0.2.14",
    srcs = [
        "vendor/num-traits-0.2.14/src/bounds.rs",
        "vendor/num-traits-0.2.14/src/cast.rs",
        "vendor/num-traits-0.2.14/src/float.rs",
        "vendor/num-traits-0.2.14/src/identities.rs",
        "vendor/num-traits-0.2.14/src/int.rs",
        "vendor/num-traits-0.2.14/src/lib.rs",
        "vendor/num-traits-0.2.14/src/macros.rs",
        "vendor/num-traits-0.2.14/src/ops/checked.rs",
        "vendor/num-traits-0.2.14/src/ops/inv.rs",
        "vendor/num-traits-0.2.14/src/ops/mod.rs",
        "vendor/num-traits-0.2.14/src/ops/mul_add.rs",
        "vendor/num-traits-0.2.14/src/ops/overflowing.rs",
        "vendor/num-traits-0.2.14/src/ops/saturating.rs",
        "vendor/num-traits-0.2.14/src/ops/wrapping.rs",
        "vendor/num-traits-0.2.14/src/pow.rs",
        "vendor/num-traits-0.2.14/src/real.rs",
        "vendor/num-traits-0.2.14/src/sign.rs",
    ],
    crate = "num_traits",
    crate_root = "vendor/num-traits-0.2.14/src/lib.rs",
    edition = "2015",
    licenses = [
        "vendor/num-traits-0.2.14/LICENSE-APACHE",
        "vendor/num-traits-0.2.14/LICENSE-MIT",
    ],
    rustc_flags = [
        "--cap-lints=allow",
        "@$(location :num-traits-0.2.14-build-script-build-args)",
    ],
    visibility = [],
)

third_party_rust_binary(
    name = "num-traits-0.2.14-build-script-build",
    srcs = [
        "vendor/num-traits-0.2.14/build.rs",
        "vendor/num-traits-0.2.14/src/bounds.rs",
        "vendor/num-traits-0.2.14/src/cast.rs",
        "vendor/num-traits-0.2.14/src/float.rs",
        "vendor/num-traits-0.2.14/src/identities.rs",
        "vendor/num-traits-0.2.14/src/int.rs",
        "vendor/num-traits-0.2.14/src/lib.rs",
        "vendor/num-traits-0.2.14/src/macros.rs",
        "vendor/num-traits-0.2.14/src/ops/checked.rs",
        "vendor/num-traits-0.2.14/src/ops/inv.rs",
        "vendor/num-traits-0.2.14/src/ops/mod.rs",
        "vendor/num-traits-0.2.14/src/ops/mul_add.rs",
        "vendor/num-traits-0.2.14/src/ops/overflowing.rs",
        "vendor/num-traits-0.2.14/src/ops/saturating.rs",
        "vendor/num-traits-0.2.14/src/ops/wrapping.rs",
        "vendor/num-traits-0.2.14/src/pow.rs",
        "vendor/num-traits-0.2.14/src/real.rs",
        "vendor/num-traits-0.2.14/src/sign.rs",
        "vendor/num-traits-0.2.14/tests/cast.rs",
    ],
    crate = "build_script_build",
    crate_root = "vendor/num-traits-0.2.14/build.rs",
    edition = "2015",
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [":autocfg-1.0.1"],
)

rust_buildscript_genrule_filter(
    name = "num-traits-0.2.14-build-script-build-args",
    package_name = "num-traits",
    buildscript_rule = ":num-traits-0.2.14-build-script-build",
    cfgs = [],
    features = [],
    outfile = "args.txt",
    version = "0.2.14",
)

third_party_rust_library(
    name = "num_cpus-1.13.0",
    srcs = [
        "vendor/num_cpus-1.13.0/src/lib.rs",
        "vendor/num_cpus-1.13.0/src/linux.rs",
    ],
    crate = "num_cpus",
    crate_root = "vendor/num_cpus-1.13.0/src/lib.rs",
    edition = "2015",
    licenses = [
        "vendor/num_cpus-1.13.0/LICENSE-APACHE",
        "vendor/num_cpus-1.13.0/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [":libc-0.2.97"],
)

third_party_rust_library(
    name = "object-0.25.2",
    srcs = [
        "vendor/object-0.25.2/src/archive.rs",
        "vendor/object-0.25.2/src/common.rs",
        "vendor/object-0.25.2/src/elf.rs",
        "vendor/object-0.25.2/src/endian.rs",
        "vendor/object-0.25.2/src/lib.rs",
        "vendor/object-0.25.2/src/macho.rs",
        "vendor/object-0.25.2/src/pe.rs",
        "vendor/object-0.25.2/src/pod.rs",
        "vendor/object-0.25.2/src/read/any.rs",
        "vendor/object-0.25.2/src/read/archive.rs",
        "vendor/object-0.25.2/src/read/coff/comdat.rs",
        "vendor/object-0.25.2/src/read/coff/file.rs",
        "vendor/object-0.25.2/src/read/coff/mod.rs",
        "vendor/object-0.25.2/src/read/coff/relocation.rs",
        "vendor/object-0.25.2/src/read/coff/section.rs",
        "vendor/object-0.25.2/src/read/coff/symbol.rs",
        "vendor/object-0.25.2/src/read/elf/comdat.rs",
        "vendor/object-0.25.2/src/read/elf/compression.rs",
        "vendor/object-0.25.2/src/read/elf/dynamic.rs",
        "vendor/object-0.25.2/src/read/elf/file.rs",
        "vendor/object-0.25.2/src/read/elf/mod.rs",
        "vendor/object-0.25.2/src/read/elf/note.rs",
        "vendor/object-0.25.2/src/read/elf/relocation.rs",
        "vendor/object-0.25.2/src/read/elf/section.rs",
        "vendor/object-0.25.2/src/read/elf/segment.rs",
        "vendor/object-0.25.2/src/read/elf/symbol.rs",
        "vendor/object-0.25.2/src/read/macho/dyld_cache.rs",
        "vendor/object-0.25.2/src/read/macho/fat.rs",
        "vendor/object-0.25.2/src/read/macho/file.rs",
        "vendor/object-0.25.2/src/read/macho/load_command.rs",
        "vendor/object-0.25.2/src/read/macho/mod.rs",
        "vendor/object-0.25.2/src/read/macho/relocation.rs",
        "vendor/object-0.25.2/src/read/macho/section.rs",
        "vendor/object-0.25.2/src/read/macho/segment.rs",
        "vendor/object-0.25.2/src/read/macho/symbol.rs",
        "vendor/object-0.25.2/src/read/mod.rs",
        "vendor/object-0.25.2/src/read/pe/file.rs",
        "vendor/object-0.25.2/src/read/pe/mod.rs",
        "vendor/object-0.25.2/src/read/pe/section.rs",
        "vendor/object-0.25.2/src/read/read_cache.rs",
        "vendor/object-0.25.2/src/read/read_ref.rs",
        "vendor/object-0.25.2/src/read/traits.rs",
        "vendor/object-0.25.2/src/read/util.rs",
        "vendor/object-0.25.2/src/read/wasm.rs",
        "vendor/object-0.25.2/src/write/coff.rs",
        "vendor/object-0.25.2/src/write/elf.rs",
        "vendor/object-0.25.2/src/write/macho.rs",
        "vendor/object-0.25.2/src/write/mod.rs",
        "vendor/object-0.25.2/src/write/string.rs",
        "vendor/object-0.25.2/src/write/util.rs",
    ],
    crate = "object",
    crate_root = "vendor/object-0.25.2/src/lib.rs",
    edition = "2018",
    features = [
        "archive",
        "coff",
        "elf",
        "macho",
        "pe",
        "read_core",
        "unaligned",
    ],
    licenses = [
        "vendor/object-0.25.2/LICENSE-APACHE",
        "vendor/object-0.25.2/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [":memchr-2.4.0"],
)

third_party_rust_library(
    name = "once_cell",
    srcs = [
        "vendor/once_cell-1.7.2/src/imp_pl.rs",
        "vendor/once_cell-1.7.2/src/imp_std.rs",
        "vendor/once_cell-1.7.2/src/lib.rs",
        "vendor/once_cell-1.7.2/src/race.rs",
    ],
    crate = "once_cell",
    crate_root = "vendor/once_cell-1.7.2/src/lib.rs",
    edition = "2018",
    features = [
        "alloc",
        "default",
        "race",
        "std",
    ],
    licenses = [
        "vendor/once_cell-1.7.2/LICENSE-APACHE",
        "vendor/once_cell-1.7.2/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = ["PUBLIC"],
)

third_party_rust_library(
    name = "opaque-debug-0.3.0",
    srcs = ["vendor/opaque-debug-0.3.0/src/lib.rs"],
    crate = "opaque_debug",
    crate_root = "vendor/opaque-debug-0.3.0/src/lib.rs",
    edition = "2018",
    licenses = [
        "vendor/opaque-debug-0.3.0/LICENSE-APACHE",
        "vendor/opaque-debug-0.3.0/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

third_party_rust_library(
    name = "openssl-0.10.34",
    srcs = [
        "vendor/openssl-0.10.34/src/aes.rs",
        "vendor/openssl-0.10.34/src/asn1.rs",
        "vendor/openssl-0.10.34/src/base64.rs",
        "vendor/openssl-0.10.34/src/bio.rs",
        "vendor/openssl-0.10.34/src/bn.rs",
        "vendor/openssl-0.10.34/src/cms.rs",
        "vendor/openssl-0.10.34/src/conf.rs",
        "vendor/openssl-0.10.34/src/derive.rs",
        "vendor/openssl-0.10.34/src/dh.rs",
        "vendor/openssl-0.10.34/src/dsa.rs",
        "vendor/openssl-0.10.34/src/ec.rs",
        "vendor/openssl-0.10.34/src/ecdsa.rs",
        "vendor/openssl-0.10.34/src/encrypt.rs",
        "vendor/openssl-0.10.34/src/envelope.rs",
        "vendor/openssl-0.10.34/src/error.rs",
        "vendor/openssl-0.10.34/src/ex_data.rs",
        "vendor/openssl-0.10.34/src/fips.rs",
        "vendor/openssl-0.10.34/src/hash.rs",
        "vendor/openssl-0.10.34/src/lib.rs",
        "vendor/openssl-0.10.34/src/macros.rs",
        "vendor/openssl-0.10.34/src/memcmp.rs",
        "vendor/openssl-0.10.34/src/nid.rs",
        "vendor/openssl-0.10.34/src/ocsp.rs",
        "vendor/openssl-0.10.34/src/pkcs12.rs",
        "vendor/openssl-0.10.34/src/pkcs5.rs",
        "vendor/openssl-0.10.34/src/pkcs7.rs",
        "vendor/openssl-0.10.34/src/pkey.rs",
        "vendor/openssl-0.10.34/src/rand.rs",
        "vendor/openssl-0.10.34/src/rsa.rs",
        "vendor/openssl-0.10.34/src/sha.rs",
        "vendor/openssl-0.10.34/src/sign.rs",
        "vendor/openssl-0.10.34/src/srtp.rs",
        "vendor/openssl-0.10.34/src/ssl/bio.rs",
        "vendor/openssl-0.10.34/src/ssl/callbacks.rs",
        "vendor/openssl-0.10.34/src/ssl/connector.rs",
        "vendor/openssl-0.10.34/src/ssl/error.rs",
        "vendor/openssl-0.10.34/src/ssl/mod.rs",
        "vendor/openssl-0.10.34/src/ssl/test/mod.rs",
        "vendor/openssl-0.10.34/src/ssl/test/server.rs",
        "vendor/openssl-0.10.34/src/stack.rs",
        "vendor/openssl-0.10.34/src/string.rs",
        "vendor/openssl-0.10.34/src/symm.rs",
        "vendor/openssl-0.10.34/src/util.rs",
        "vendor/openssl-0.10.34/src/version.rs",
        "vendor/openssl-0.10.34/src/x509/extension.rs",
        "vendor/openssl-0.10.34/src/x509/mod.rs",
        "vendor/openssl-0.10.34/src/x509/store.rs",
        "vendor/openssl-0.10.34/src/x509/tests.rs",
        "vendor/openssl-0.10.34/src/x509/verify.rs",
        "vendor/openssl-0.10.34/test/aia_test_cert.pem",
        "vendor/openssl-0.10.34/test/alt_name_cert.pem",
        "vendor/openssl-0.10.34/test/cert.pem",
        "vendor/openssl-0.10.34/test/certs.pem",
        "vendor/openssl-0.10.34/test/cms.p12",
        "vendor/openssl-0.10.34/test/cms_pubkey.der",
        "vendor/openssl-0.10.34/test/dhparams.pem",
        "vendor/openssl-0.10.34/test/identity.p12",
        "vendor/openssl-0.10.34/test/key.der",
        "vendor/openssl-0.10.34/test/key.der.pub",
        "vendor/openssl-0.10.34/test/key.pem",
        "vendor/openssl-0.10.34/test/key.pem.pub",
        "vendor/openssl-0.10.34/test/keystore-empty-chain.p12",
        "vendor/openssl-0.10.34/test/nid_test_cert.pem",
        "vendor/openssl-0.10.34/test/nid_uid_test_cert.pem",
        "vendor/openssl-0.10.34/test/pkcs1.pem.pub",
        "vendor/openssl-0.10.34/test/pkcs8.der",
        "vendor/openssl-0.10.34/test/pkcs8-nocrypt.der",
        "vendor/openssl-0.10.34/test/root-ca.pem",
        "vendor/openssl-0.10.34/test/rsa.pem",
        "vendor/openssl-0.10.34/test/rsa.pem.pub",
        "vendor/openssl-0.10.34/test/rsa-encrypted.pem",
    ],
    crate = "openssl",
    crate_root = "vendor/openssl-0.10.34/src/lib.rs",
    edition = "2018",
    licenses = ["vendor/openssl-0.10.34/LICENSE"],
    named_deps = {
        "ffi": ":openssl-sys-0.9.63",
    },
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [
        ":bitflags-1.2.1",
        ":cfg-if-1.0.0",
        ":foreign-types-0.3.2",
        ":libc-0.2.97",
        ":once_cell",
    ],
)

third_party_rust_binary(
    name = "openssl-0.10.34-build-script-build",
    srcs = ["vendor/openssl-0.10.34/build.rs"],
    crate = "build_script_build",
    crate_root = "vendor/openssl-0.10.34/build.rs",
    edition = "2018",
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

third_party_rust_library(
    name = "openssl-probe-0.1.4",
    srcs = ["vendor/openssl-probe-0.1.4/src/lib.rs"],
    crate = "openssl_probe",
    crate_root = "vendor/openssl-probe-0.1.4/src/lib.rs",
    edition = "2015",
    licenses = [
        "vendor/openssl-probe-0.1.4/LICENSE-APACHE",
        "vendor/openssl-probe-0.1.4/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

third_party_rust_library(
    name = "openssl-sys-0.9.63",
    srcs = [
        "vendor/openssl-sys-0.9.63/src/aes.rs",
        "vendor/openssl-sys-0.9.63/src/asn1.rs",
        "vendor/openssl-sys-0.9.63/src/bio.rs",
        "vendor/openssl-sys-0.9.63/src/bn.rs",
        "vendor/openssl-sys-0.9.63/src/cms.rs",
        "vendor/openssl-sys-0.9.63/src/conf.rs",
        "vendor/openssl-sys-0.9.63/src/crypto.rs",
        "vendor/openssl-sys-0.9.63/src/dh.rs",
        "vendor/openssl-sys-0.9.63/src/dsa.rs",
        "vendor/openssl-sys-0.9.63/src/dtls1.rs",
        "vendor/openssl-sys-0.9.63/src/ec.rs",
        "vendor/openssl-sys-0.9.63/src/err.rs",
        "vendor/openssl-sys-0.9.63/src/evp.rs",
        "vendor/openssl-sys-0.9.63/src/hmac.rs",
        "vendor/openssl-sys-0.9.63/src/lib.rs",
        "vendor/openssl-sys-0.9.63/src/macros.rs",
        "vendor/openssl-sys-0.9.63/src/obj_mac.rs",
        "vendor/openssl-sys-0.9.63/src/object.rs",
        "vendor/openssl-sys-0.9.63/src/ocsp.rs",
        "vendor/openssl-sys-0.9.63/src/ossl_typ.rs",
        "vendor/openssl-sys-0.9.63/src/pem.rs",
        "vendor/openssl-sys-0.9.63/src/pkcs12.rs",
        "vendor/openssl-sys-0.9.63/src/pkcs7.rs",
        "vendor/openssl-sys-0.9.63/src/rand.rs",
        "vendor/openssl-sys-0.9.63/src/rsa.rs",
        "vendor/openssl-sys-0.9.63/src/safestack.rs",
        "vendor/openssl-sys-0.9.63/src/sha.rs",
        "vendor/openssl-sys-0.9.63/src/srtp.rs",
        "vendor/openssl-sys-0.9.63/src/ssl.rs",
        "vendor/openssl-sys-0.9.63/src/ssl3.rs",
        "vendor/openssl-sys-0.9.63/src/stack.rs",
        "vendor/openssl-sys-0.9.63/src/tls1.rs",
        "vendor/openssl-sys-0.9.63/src/x509.rs",
        "vendor/openssl-sys-0.9.63/src/x509_vfy.rs",
        "vendor/openssl-sys-0.9.63/src/x509v3.rs",
    ],
    crate = "openssl_sys",
    crate_root = "vendor/openssl-sys-0.9.63/src/lib.rs",
    edition = "2015",
    env = {
        "CARGO_MANIFEST_DIR": "vendor/openssl-sys-0.9.63",
        "CARGO_PKG_NAME": "openssl-sys",
        "CARGO_PKG_VERSION": "0.9.63",
        "CARGO_PKG_VERSION_MAJOR": "0",
        "CARGO_PKG_VERSION_MINOR": "9",
        "CARGO_PKG_VERSION_PATCH": "63",
    },
    licenses = ["vendor/openssl-sys-0.9.63/LICENSE-MIT"],
    rustc_flags = [
        "--cap-lints=allow",
        "@$(location :openssl-sys-0.9.63-build-script-main-args)",
    ],
    visibility = [],
    deps = [":libc-0.2.97"],
)

third_party_rust_binary(
    name = "openssl-sys-0.9.63-build-script-main",
    srcs = [
        "vendor/openssl-sys-0.9.63/build/cfgs.rs",
        "vendor/openssl-sys-0.9.63/build/find_normal.rs",
        "vendor/openssl-sys-0.9.63/build/find_vendored.rs",
        "vendor/openssl-sys-0.9.63/build/main.rs",
    ],
    crate = "build_script_main",
    crate_root = "vendor/openssl-sys-0.9.63/build/main.rs",
    edition = "2015",
    env = {
        "CARGO_MANIFEST_DIR": "vendor/openssl-sys-0.9.63",
        "CARGO_PKG_NAME": "openssl-sys",
        "CARGO_PKG_VERSION": "0.9.63",
        "CARGO_PKG_VERSION_MAJOR": "0",
        "CARGO_PKG_VERSION_MINOR": "9",
        "CARGO_PKG_VERSION_PATCH": "63",
    },
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [
        ":autocfg-1.0.1",
        ":cc-1.0.68",
        ":pkg-config-0.3.19",
    ],
)

rust_buildscript_genrule_filter(
    name = "openssl-sys-0.9.63-build-script-main-args",
    package_name = "openssl-sys",
    buildscript_rule = ":openssl-sys-0.9.63-build-script-main",
    cfgs = [],
    features = [],
    outfile = "args.txt",
    version = "0.9.63",
)

third_party_rust_library(
    name = "parking_lot-0.11.1",
    srcs = [
        "vendor/parking_lot-0.11.1/src/condvar.rs",
        "vendor/parking_lot-0.11.1/src/deadlock.rs",
        "vendor/parking_lot-0.11.1/src/elision.rs",
        "vendor/parking_lot-0.11.1/src/fair_mutex.rs",
        "vendor/parking_lot-0.11.1/src/lib.rs",
        "vendor/parking_lot-0.11.1/src/mutex.rs",
        "vendor/parking_lot-0.11.1/src/once.rs",
        "vendor/parking_lot-0.11.1/src/raw_fair_mutex.rs",
        "vendor/parking_lot-0.11.1/src/raw_mutex.rs",
        "vendor/parking_lot-0.11.1/src/raw_rwlock.rs",
        "vendor/parking_lot-0.11.1/src/remutex.rs",
        "vendor/parking_lot-0.11.1/src/rwlock.rs",
        "vendor/parking_lot-0.11.1/src/util.rs",
    ],
    crate = "parking_lot",
    crate_root = "vendor/parking_lot-0.11.1/src/lib.rs",
    edition = "2018",
    features = ["default"],
    licenses = [
        "vendor/parking_lot-0.11.1/LICENSE-APACHE",
        "vendor/parking_lot-0.11.1/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [
        ":instant-0.1.9",
        ":lock_api-0.4.4",
        ":parking_lot_core-0.8.3",
    ],
)

third_party_rust_library(
    name = "parking_lot_core-0.8.3",
    srcs = [
        "vendor/parking_lot_core-0.8.3/src/lib.rs",
        "vendor/parking_lot_core-0.8.3/src/parking_lot.rs",
        "vendor/parking_lot_core-0.8.3/src/spinwait.rs",
        "vendor/parking_lot_core-0.8.3/src/thread_parker/generic.rs",
        "vendor/parking_lot_core-0.8.3/src/thread_parker/linux.rs",
        "vendor/parking_lot_core-0.8.3/src/thread_parker/mod.rs",
        "vendor/parking_lot_core-0.8.3/src/thread_parker/redox.rs",
        "vendor/parking_lot_core-0.8.3/src/thread_parker/sgx.rs",
        "vendor/parking_lot_core-0.8.3/src/thread_parker/unix.rs",
        "vendor/parking_lot_core-0.8.3/src/thread_parker/wasm.rs",
        "vendor/parking_lot_core-0.8.3/src/thread_parker/wasm_atomic.rs",
        "vendor/parking_lot_core-0.8.3/src/thread_parker/windows/keyed_event.rs",
        "vendor/parking_lot_core-0.8.3/src/thread_parker/windows/mod.rs",
        "vendor/parking_lot_core-0.8.3/src/thread_parker/windows/waitaddress.rs",
        "vendor/parking_lot_core-0.8.3/src/util.rs",
        "vendor/parking_lot_core-0.8.3/src/word_lock.rs",
    ],
    crate = "parking_lot_core",
    crate_root = "vendor/parking_lot_core-0.8.3/src/lib.rs",
    edition = "2018",
    licenses = [
        "vendor/parking_lot_core-0.8.3/LICENSE-APACHE",
        "vendor/parking_lot_core-0.8.3/LICENSE-MIT",
    ],
    platform = {
        "linux-x86_64": {
            "deps": [":libc-0.2.97"],
        },
    },
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [
        ":cfg-if-1.0.0",
        ":instant-0.1.9",
        ":smallvec-1.6.1",
    ],
)

third_party_rust_library(
    name = "percent-encoding-2.1.0",
    srcs = ["vendor/percent-encoding-2.1.0/lib.rs"],
    crate = "percent_encoding",
    crate_root = "vendor/percent-encoding-2.1.0/lib.rs",
    edition = "2015",
    licenses = [
        "vendor/percent-encoding-2.1.0/LICENSE-APACHE",
        "vendor/percent-encoding-2.1.0/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

third_party_rust_library(
    name = "pin-project-1.0.7",
    srcs = ["vendor/pin-project-1.0.7/src/lib.rs"],
    crate = "pin_project",
    crate_root = "vendor/pin-project-1.0.7/src/lib.rs",
    edition = "2018",
    licenses = [
        "vendor/pin-project-1.0.7/LICENSE-APACHE",
        "vendor/pin-project-1.0.7/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [":pin-project-internal-1.0.7"],
)

third_party_rust_library(
    name = "pin-project-internal-1.0.7",
    srcs = [
        "vendor/pin-project-internal-1.0.7/src/lib.rs",
        "vendor/pin-project-internal-1.0.7/src/pin_project/args.rs",
        "vendor/pin-project-internal-1.0.7/src/pin_project/attribute.rs",
        "vendor/pin-project-internal-1.0.7/src/pin_project/derive.rs",
        "vendor/pin-project-internal-1.0.7/src/pin_project/mod.rs",
        "vendor/pin-project-internal-1.0.7/src/pinned_drop.rs",
        "vendor/pin-project-internal-1.0.7/src/utils.rs",
    ],
    crate = "pin_project_internal",
    crate_root = "vendor/pin-project-internal-1.0.7/src/lib.rs",
    edition = "2018",
    licenses = [
        "vendor/pin-project-internal-1.0.7/LICENSE-APACHE",
        "vendor/pin-project-internal-1.0.7/LICENSE-MIT",
    ],
    proc_macro = True,
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [
        ":proc-macro2-1.0.27",
        ":quote-1.0.9",
        ":syn-1.0.73",
    ],
)

third_party_rust_library(
    name = "pin-project-lite-0.2.6",
    srcs = ["vendor/pin-project-lite-0.2.6/src/lib.rs"],
    crate = "pin_project_lite",
    crate_root = "vendor/pin-project-lite-0.2.6/src/lib.rs",
    edition = "2018",
    licenses = [
        "vendor/pin-project-lite-0.2.6/LICENSE-APACHE",
        "vendor/pin-project-lite-0.2.6/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

third_party_rust_library(
    name = "pin-utils-0.1.0",
    srcs = [
        "vendor/pin-utils-0.1.0/src/lib.rs",
        "vendor/pin-utils-0.1.0/src/projection.rs",
        "vendor/pin-utils-0.1.0/src/stack_pin.rs",
    ],
    crate = "pin_utils",
    crate_root = "vendor/pin-utils-0.1.0/src/lib.rs",
    edition = "2018",
    licenses = [
        "vendor/pin-utils-0.1.0/LICENSE-APACHE",
        "vendor/pin-utils-0.1.0/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

third_party_rust_library(
    name = "pkg-config-0.3.19",
    srcs = ["vendor/pkg-config-0.3.19/src/lib.rs"],
    crate = "pkg_config",
    crate_root = "vendor/pkg-config-0.3.19/src/lib.rs",
    edition = "2015",
    licenses = [
        "vendor/pkg-config-0.3.19/LICENSE-APACHE",
        "vendor/pkg-config-0.3.19/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

third_party_rust_library(
    name = "plain-0.2.3",
    srcs = [
        "vendor/plain-0.2.3/src/error.rs",
        "vendor/plain-0.2.3/src/lib.rs",
        "vendor/plain-0.2.3/src/methods.rs",
        "vendor/plain-0.2.3/src/plain.rs",
        "vendor/plain-0.2.3/src/tests.rs",
    ],
    crate = "plain",
    crate_root = "vendor/plain-0.2.3/src/lib.rs",
    edition = "2015",
    licenses = [
        "vendor/plain-0.2.3/LICENSE-APACHE",
        "vendor/plain-0.2.3/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

third_party_rust_library(
    name = "ppv-lite86-0.2.10",
    srcs = [
        "vendor/ppv-lite86-0.2.10/src/generic.rs",
        "vendor/ppv-lite86-0.2.10/src/lib.rs",
        "vendor/ppv-lite86-0.2.10/src/soft.rs",
        "vendor/ppv-lite86-0.2.10/src/types.rs",
        "vendor/ppv-lite86-0.2.10/src/x86_64/mod.rs",
        "vendor/ppv-lite86-0.2.10/src/x86_64/sse2.rs",
    ],
    crate = "ppv_lite86",
    crate_root = "vendor/ppv-lite86-0.2.10/src/lib.rs",
    edition = "2018",
    features = [
        "simd",
        "std",
    ],
    licenses = [
        "vendor/ppv-lite86-0.2.10/LICENSE-APACHE",
        "vendor/ppv-lite86-0.2.10/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

third_party_rust_library(
    name = "proc-macro-error-1.0.4",
    srcs = [
        "vendor/proc-macro-error-1.0.4/src/diagnostic.rs",
        "vendor/proc-macro-error-1.0.4/src/dummy.rs",
        "vendor/proc-macro-error-1.0.4/src/imp/delegate.rs",
        "vendor/proc-macro-error-1.0.4/src/imp/fallback.rs",
        "vendor/proc-macro-error-1.0.4/src/lib.rs",
        "vendor/proc-macro-error-1.0.4/src/macros.rs",
        "vendor/proc-macro-error-1.0.4/src/sealed.rs",
    ],
    crate = "proc_macro_error",
    crate_root = "vendor/proc-macro-error-1.0.4/src/lib.rs",
    edition = "2018",
    features = [
        "default",
        "syn",
        "syn-error",
    ],
    licenses = [
        "vendor/proc-macro-error-1.0.4/LICENSE-APACHE",
        "vendor/proc-macro-error-1.0.4/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [
        ":proc-macro-error-attr-1.0.4",
        ":proc-macro2-1.0.27",
        ":quote-1.0.9",
        ":syn-1.0.73",
    ],
)

third_party_rust_library(
    name = "proc-macro-error-attr-1.0.4",
    srcs = [
        "vendor/proc-macro-error-attr-1.0.4/src/lib.rs",
        "vendor/proc-macro-error-attr-1.0.4/src/parse.rs",
        "vendor/proc-macro-error-attr-1.0.4/src/settings.rs",
    ],
    crate = "proc_macro_error_attr",
    crate_root = "vendor/proc-macro-error-attr-1.0.4/src/lib.rs",
    edition = "2018",
    licenses = [
        "vendor/proc-macro-error-attr-1.0.4/LICENSE-APACHE",
        "vendor/proc-macro-error-attr-1.0.4/LICENSE-MIT",
    ],
    proc_macro = True,
    rustc_flags = [
        "--cap-lints=allow",
        "@$(location :proc-macro-error-attr-1.0.4-build-script-build-args)",
    ],
    visibility = [],
    deps = [
        ":proc-macro2-1.0.27",
        ":quote-1.0.9",
    ],
)

third_party_rust_binary(
    name = "proc-macro-error-attr-1.0.4-build-script-build",
    srcs = ["vendor/proc-macro-error-attr-1.0.4/build.rs"],
    crate = "build_script_build",
    crate_root = "vendor/proc-macro-error-attr-1.0.4/build.rs",
    edition = "2018",
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [":version_check-0.9.3"],
)

rust_buildscript_genrule_filter(
    name = "proc-macro-error-attr-1.0.4-build-script-build-args",
    package_name = "proc-macro-error-attr",
    buildscript_rule = ":proc-macro-error-attr-1.0.4-build-script-build",
    cfgs = [],
    features = [],
    outfile = "args.txt",
    version = "1.0.4",
)

third_party_rust_library(
    name = "proc-macro-hack-0.5.19",
    srcs = [
        "vendor/proc-macro-hack-0.5.19/src/error.rs",
        "vendor/proc-macro-hack-0.5.19/src/iter.rs",
        "vendor/proc-macro-hack-0.5.19/src/lib.rs",
        "vendor/proc-macro-hack-0.5.19/src/parse.rs",
        "vendor/proc-macro-hack-0.5.19/src/quote.rs",
    ],
    crate = "proc_macro_hack",
    crate_root = "vendor/proc-macro-hack-0.5.19/src/lib.rs",
    edition = "2018",
    licenses = [
        "vendor/proc-macro-hack-0.5.19/LICENSE-APACHE",
        "vendor/proc-macro-hack-0.5.19/LICENSE-MIT",
    ],
    proc_macro = True,
    rustc_flags = [
        "--cap-lints=allow",
        "@$(location :proc-macro-hack-0.5.19-build-script-build-args)",
    ],
    visibility = [],
)

third_party_rust_binary(
    name = "proc-macro-hack-0.5.19-build-script-build",
    srcs = ["vendor/proc-macro-hack-0.5.19/build.rs"],
    crate = "build_script_build",
    crate_root = "vendor/proc-macro-hack-0.5.19/build.rs",
    edition = "2018",
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

rust_buildscript_genrule_filter(
    name = "proc-macro-hack-0.5.19-build-script-build-args",
    package_name = "proc-macro-hack",
    buildscript_rule = ":proc-macro-hack-0.5.19-build-script-build",
    cfgs = [],
    features = [],
    outfile = "args.txt",
    version = "0.5.19",
)

third_party_rust_library(
    name = "proc-macro-nested-0.1.7",
    srcs = ["vendor/proc-macro-nested-0.1.7/src/lib.rs"],
    crate = "proc_macro_nested",
    crate_root = "vendor/proc-macro-nested-0.1.7/src/lib.rs",
    edition = "2015",
    env = {
        "OUT_DIR": ".",
        "PATH_SEPARATOR": "/",
    },
    licenses = [
        "vendor/proc-macro-nested-0.1.7/LICENSE-APACHE",
        "vendor/proc-macro-nested-0.1.7/LICENSE-MIT",
    ],
    mapped_srcs = {
        ":proc-macro-nested-0.1.7-build-script-build-srcs=count.rs": "vendor/proc-macro-nested-0.1.7/src/count.rs",
    },
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

third_party_rust_binary(
    name = "proc-macro-nested-0.1.7-build-script-build",
    srcs = [
        "vendor/proc-macro-nested-0.1.7/build.rs",
        "vendor/proc-macro-nested-0.1.7/src/lib.rs",
    ],
    crate = "build_script_build",
    crate_root = "vendor/proc-macro-nested-0.1.7/build.rs",
    edition = "2015",
    env = {
        "OUT_DIR": ".",
        "PATH_SEPARATOR": "/",
    },
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

rust_buildscript_genrule_srcs(
    name = "proc-macro-nested-0.1.7-build-script-build-srcs",
    package_name = "proc-macro-nested",
    buildscript_rule = ":proc-macro-nested-0.1.7-build-script-build",
    cfgs = [],
    features = [],
    files = ["count.rs"],
    version = "0.1.7",
)

third_party_rust_library(
    name = "proc-macro2-1.0.27",
    srcs = [
        "vendor/proc-macro2-1.0.27/src/detection.rs",
        "vendor/proc-macro2-1.0.27/src/fallback.rs",
        "vendor/proc-macro2-1.0.27/src/lib.rs",
        "vendor/proc-macro2-1.0.27/src/marker.rs",
        "vendor/proc-macro2-1.0.27/src/parse.rs",
        "vendor/proc-macro2-1.0.27/src/wrapper.rs",
    ],
    crate = "proc_macro2",
    crate_root = "vendor/proc-macro2-1.0.27/src/lib.rs",
    edition = "2018",
    features = [
        "default",
        "proc-macro",
    ],
    licenses = [
        "vendor/proc-macro2-1.0.27/LICENSE-APACHE",
        "vendor/proc-macro2-1.0.27/LICENSE-MIT",
    ],
    rustc_flags = [
        "--cap-lints=allow",
        "@$(location :proc-macro2-1.0.27-build-script-build-args)",
    ],
    visibility = [],
    deps = [":unicode-xid-0.2.2"],
)

third_party_rust_binary(
    name = "proc-macro2-1.0.27-build-script-build",
    srcs = ["vendor/proc-macro2-1.0.27/build.rs"],
    crate = "build_script_build",
    crate_root = "vendor/proc-macro2-1.0.27/build.rs",
    edition = "2018",
    features = [
        "default",
        "proc-macro",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

rust_buildscript_genrule_filter(
    name = "proc-macro2-1.0.27-build-script-build-args",
    package_name = "proc-macro2",
    buildscript_rule = ":proc-macro2-1.0.27-build-script-build",
    cfgs = [],
    features = [
        "default",
        "proc-macro",
    ],
    outfile = "args.txt",
    version = "1.0.27",
)

third_party_rust_library(
    name = "quick-error-1.2.3",
    srcs = ["vendor/quick-error-1.2.3/src/lib.rs"],
    crate = "quick_error",
    crate_root = "vendor/quick-error-1.2.3/src/lib.rs",
    edition = "2015",
    licenses = [
        "vendor/quick-error-1.2.3/LICENSE-APACHE",
        "vendor/quick-error-1.2.3/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

third_party_rust_library(
    name = "quote-1.0.9",
    srcs = [
        "vendor/quote-1.0.9/src/ext.rs",
        "vendor/quote-1.0.9/src/format.rs",
        "vendor/quote-1.0.9/src/ident_fragment.rs",
        "vendor/quote-1.0.9/src/lib.rs",
        "vendor/quote-1.0.9/src/runtime.rs",
        "vendor/quote-1.0.9/src/spanned.rs",
        "vendor/quote-1.0.9/src/to_tokens.rs",
    ],
    crate = "quote",
    crate_root = "vendor/quote-1.0.9/src/lib.rs",
    edition = "2018",
    features = [
        "default",
        "proc-macro",
    ],
    licenses = [
        "vendor/quote-1.0.9/LICENSE-APACHE",
        "vendor/quote-1.0.9/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [":proc-macro2-1.0.27"],
)

third_party_rust_library(
    name = "rand-0.7.3",
    srcs = [
        "vendor/rand-0.7.3/src/distributions/bernoulli.rs",
        "vendor/rand-0.7.3/src/distributions/binomial.rs",
        "vendor/rand-0.7.3/src/distributions/cauchy.rs",
        "vendor/rand-0.7.3/src/distributions/dirichlet.rs",
        "vendor/rand-0.7.3/src/distributions/exponential.rs",
        "vendor/rand-0.7.3/src/distributions/float.rs",
        "vendor/rand-0.7.3/src/distributions/gamma.rs",
        "vendor/rand-0.7.3/src/distributions/integer.rs",
        "vendor/rand-0.7.3/src/distributions/mod.rs",
        "vendor/rand-0.7.3/src/distributions/normal.rs",
        "vendor/rand-0.7.3/src/distributions/other.rs",
        "vendor/rand-0.7.3/src/distributions/pareto.rs",
        "vendor/rand-0.7.3/src/distributions/poisson.rs",
        "vendor/rand-0.7.3/src/distributions/triangular.rs",
        "vendor/rand-0.7.3/src/distributions/uniform.rs",
        "vendor/rand-0.7.3/src/distributions/unit_circle.rs",
        "vendor/rand-0.7.3/src/distributions/unit_sphere.rs",
        "vendor/rand-0.7.3/src/distributions/utils.rs",
        "vendor/rand-0.7.3/src/distributions/weibull.rs",
        "vendor/rand-0.7.3/src/distributions/weighted/alias_method.rs",
        "vendor/rand-0.7.3/src/distributions/weighted/mod.rs",
        "vendor/rand-0.7.3/src/distributions/ziggurat_tables.rs",
        "vendor/rand-0.7.3/src/lib.rs",
        "vendor/rand-0.7.3/src/prelude.rs",
        "vendor/rand-0.7.3/src/rngs/adapter/mod.rs",
        "vendor/rand-0.7.3/src/rngs/adapter/read.rs",
        "vendor/rand-0.7.3/src/rngs/adapter/reseeding.rs",
        "vendor/rand-0.7.3/src/rngs/entropy.rs",
        "vendor/rand-0.7.3/src/rngs/mock.rs",
        "vendor/rand-0.7.3/src/rngs/mod.rs",
        "vendor/rand-0.7.3/src/rngs/small.rs",
        "vendor/rand-0.7.3/src/rngs/std.rs",
        "vendor/rand-0.7.3/src/rngs/thread.rs",
        "vendor/rand-0.7.3/src/seq/index.rs",
        "vendor/rand-0.7.3/src/seq/mod.rs",
    ],
    crate = "rand",
    crate_root = "vendor/rand-0.7.3/src/lib.rs",
    edition = "2018",
    features = [
        "alloc",
        "default",
        "getrandom",
        "getrandom_package",
        "libc",
        "std",
    ],
    licenses = [
        "vendor/rand-0.7.3/LICENSE-APACHE",
        "vendor/rand-0.7.3/LICENSE-MIT",
    ],
    named_deps = {
        "getrandom_package": ":getrandom-0.1.16",
    },
    platform = {
        "linux-x86_64": {
            "deps": [
                ":libc-0.2.97",
                ":rand_chacha-0.2.2",
            ],
        },
    },
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [":rand_core-0.5.1"],
)

third_party_rust_library(
    name = "rand-0.8.3",
    srcs = [
        "vendor/rand-0.8.3/src/distributions/bernoulli.rs",
        "vendor/rand-0.8.3/src/distributions/float.rs",
        "vendor/rand-0.8.3/src/distributions/integer.rs",
        "vendor/rand-0.8.3/src/distributions/mod.rs",
        "vendor/rand-0.8.3/src/distributions/other.rs",
        "vendor/rand-0.8.3/src/distributions/uniform.rs",
        "vendor/rand-0.8.3/src/distributions/utils.rs",
        "vendor/rand-0.8.3/src/distributions/weighted.rs",
        "vendor/rand-0.8.3/src/distributions/weighted_index.rs",
        "vendor/rand-0.8.3/src/lib.rs",
        "vendor/rand-0.8.3/src/prelude.rs",
        "vendor/rand-0.8.3/src/rng.rs",
        "vendor/rand-0.8.3/src/rngs/adapter/mod.rs",
        "vendor/rand-0.8.3/src/rngs/adapter/read.rs",
        "vendor/rand-0.8.3/src/rngs/adapter/reseeding.rs",
        "vendor/rand-0.8.3/src/rngs/mock.rs",
        "vendor/rand-0.8.3/src/rngs/mod.rs",
        "vendor/rand-0.8.3/src/rngs/small.rs",
        "vendor/rand-0.8.3/src/rngs/std.rs",
        "vendor/rand-0.8.3/src/rngs/thread.rs",
        "vendor/rand-0.8.3/src/rngs/xoshiro128plusplus.rs",
        "vendor/rand-0.8.3/src/rngs/xoshiro256plusplus.rs",
        "vendor/rand-0.8.3/src/seq/index.rs",
        "vendor/rand-0.8.3/src/seq/mod.rs",
    ],
    crate = "rand",
    crate_root = "vendor/rand-0.8.3/src/lib.rs",
    edition = "2018",
    features = [
        "alloc",
        "default",
        "getrandom",
        "libc",
        "rand_chacha",
        "rand_hc",
        "std",
        "std_rng",
    ],
    licenses = [
        "vendor/rand-0.8.3/LICENSE-APACHE",
        "vendor/rand-0.8.3/LICENSE-MIT",
    ],
    platform = {
        "linux-x86_64": {
            "deps": [
                ":libc-0.2.97",
                ":rand_chacha-0.3.1",
            ],
        },
    },
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [":rand_core-0.6.2"],
)

third_party_rust_library(
    name = "rand_chacha-0.2.2",
    srcs = [
        "vendor/rand_chacha-0.2.2/src/chacha.rs",
        "vendor/rand_chacha-0.2.2/src/guts.rs",
        "vendor/rand_chacha-0.2.2/src/lib.rs",
    ],
    crate = "rand_chacha",
    crate_root = "vendor/rand_chacha-0.2.2/src/lib.rs",
    edition = "2018",
    features = ["std"],
    licenses = [
        "vendor/rand_chacha-0.2.2/LICENSE-APACHE",
        "vendor/rand_chacha-0.2.2/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [
        ":ppv-lite86-0.2.10",
        ":rand_core-0.5.1",
    ],
)

third_party_rust_library(
    name = "rand_chacha-0.3.1",
    srcs = [
        "vendor/rand_chacha-0.3.1/src/chacha.rs",
        "vendor/rand_chacha-0.3.1/src/guts.rs",
        "vendor/rand_chacha-0.3.1/src/lib.rs",
    ],
    crate = "rand_chacha",
    crate_root = "vendor/rand_chacha-0.3.1/src/lib.rs",
    edition = "2018",
    features = ["std"],
    licenses = [
        "vendor/rand_chacha-0.3.1/LICENSE-APACHE",
        "vendor/rand_chacha-0.3.1/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [
        ":ppv-lite86-0.2.10",
        ":rand_core-0.6.2",
    ],
)

third_party_rust_library(
    name = "rand_core-0.5.1",
    srcs = [
        "vendor/rand_core-0.5.1/src/block.rs",
        "vendor/rand_core-0.5.1/src/error.rs",
        "vendor/rand_core-0.5.1/src/impls.rs",
        "vendor/rand_core-0.5.1/src/le.rs",
        "vendor/rand_core-0.5.1/src/lib.rs",
        "vendor/rand_core-0.5.1/src/os.rs",
    ],
    crate = "rand_core",
    crate_root = "vendor/rand_core-0.5.1/src/lib.rs",
    edition = "2018",
    features = [
        "alloc",
        "getrandom",
        "std",
    ],
    licenses = [
        "vendor/rand_core-0.5.1/LICENSE-APACHE",
        "vendor/rand_core-0.5.1/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [":getrandom-0.1.16"],
)

third_party_rust_library(
    name = "rand_core-0.6.2",
    srcs = [
        "vendor/rand_core-0.6.2/src/block.rs",
        "vendor/rand_core-0.6.2/src/error.rs",
        "vendor/rand_core-0.6.2/src/impls.rs",
        "vendor/rand_core-0.6.2/src/le.rs",
        "vendor/rand_core-0.6.2/src/lib.rs",
        "vendor/rand_core-0.6.2/src/os.rs",
    ],
    crate = "rand_core",
    crate_root = "vendor/rand_core-0.6.2/src/lib.rs",
    edition = "2018",
    features = [
        "alloc",
        "getrandom",
        "std",
    ],
    licenses = [
        "vendor/rand_core-0.6.2/LICENSE-APACHE",
        "vendor/rand_core-0.6.2/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [":getrandom-0.2.3"],
)

third_party_rust_library(
    name = "regex",
    srcs = [
        "vendor/regex-1.5.4/src/backtrack.rs",
        "vendor/regex-1.5.4/src/compile.rs",
        "vendor/regex-1.5.4/src/dfa.rs",
        "vendor/regex-1.5.4/src/error.rs",
        "vendor/regex-1.5.4/src/exec.rs",
        "vendor/regex-1.5.4/src/expand.rs",
        "vendor/regex-1.5.4/src/find_byte.rs",
        "vendor/regex-1.5.4/src/input.rs",
        "vendor/regex-1.5.4/src/lib.rs",
        "vendor/regex-1.5.4/src/literal/imp.rs",
        "vendor/regex-1.5.4/src/literal/mod.rs",
        "vendor/regex-1.5.4/src/pattern.rs",
        "vendor/regex-1.5.4/src/pikevm.rs",
        "vendor/regex-1.5.4/src/pool.rs",
        "vendor/regex-1.5.4/src/prog.rs",
        "vendor/regex-1.5.4/src/re_builder.rs",
        "vendor/regex-1.5.4/src/re_bytes.rs",
        "vendor/regex-1.5.4/src/re_set.rs",
        "vendor/regex-1.5.4/src/re_trait.rs",
        "vendor/regex-1.5.4/src/re_unicode.rs",
        "vendor/regex-1.5.4/src/sparse.rs",
        "vendor/regex-1.5.4/src/utf8.rs",
    ],
    crate = "regex",
    crate_root = "vendor/regex-1.5.4/src/lib.rs",
    edition = "2018",
    features = [
        "aho-corasick",
        "default",
        "memchr",
        "perf",
        "perf-cache",
        "perf-dfa",
        "perf-inline",
        "perf-literal",
        "std",
        "unicode",
        "unicode-age",
        "unicode-bool",
        "unicode-case",
        "unicode-gencat",
        "unicode-perl",
        "unicode-script",
        "unicode-segment",
    ],
    licenses = [
        "vendor/regex-1.5.4/LICENSE-APACHE",
        "vendor/regex-1.5.4/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = ["PUBLIC"],
    deps = [
        ":aho-corasick-0.7.18",
        ":memchr-2.4.0",
        ":regex-syntax-0.6.25",
    ],
)

third_party_rust_library(
    name = "regex-syntax-0.6.25",
    srcs = [
        "vendor/regex-syntax-0.6.25/src/ast/mod.rs",
        "vendor/regex-syntax-0.6.25/src/ast/parse.rs",
        "vendor/regex-syntax-0.6.25/src/ast/print.rs",
        "vendor/regex-syntax-0.6.25/src/ast/visitor.rs",
        "vendor/regex-syntax-0.6.25/src/either.rs",
        "vendor/regex-syntax-0.6.25/src/error.rs",
        "vendor/regex-syntax-0.6.25/src/hir/interval.rs",
        "vendor/regex-syntax-0.6.25/src/hir/literal/mod.rs",
        "vendor/regex-syntax-0.6.25/src/hir/mod.rs",
        "vendor/regex-syntax-0.6.25/src/hir/print.rs",
        "vendor/regex-syntax-0.6.25/src/hir/translate.rs",
        "vendor/regex-syntax-0.6.25/src/hir/visitor.rs",
        "vendor/regex-syntax-0.6.25/src/lib.rs",
        "vendor/regex-syntax-0.6.25/src/parser.rs",
        "vendor/regex-syntax-0.6.25/src/unicode.rs",
        "vendor/regex-syntax-0.6.25/src/unicode_tables/age.rs",
        "vendor/regex-syntax-0.6.25/src/unicode_tables/case_folding_simple.rs",
        "vendor/regex-syntax-0.6.25/src/unicode_tables/general_category.rs",
        "vendor/regex-syntax-0.6.25/src/unicode_tables/grapheme_cluster_break.rs",
        "vendor/regex-syntax-0.6.25/src/unicode_tables/mod.rs",
        "vendor/regex-syntax-0.6.25/src/unicode_tables/perl_decimal.rs",
        "vendor/regex-syntax-0.6.25/src/unicode_tables/perl_space.rs",
        "vendor/regex-syntax-0.6.25/src/unicode_tables/perl_word.rs",
        "vendor/regex-syntax-0.6.25/src/unicode_tables/property_bool.rs",
        "vendor/regex-syntax-0.6.25/src/unicode_tables/property_names.rs",
        "vendor/regex-syntax-0.6.25/src/unicode_tables/property_values.rs",
        "vendor/regex-syntax-0.6.25/src/unicode_tables/script.rs",
        "vendor/regex-syntax-0.6.25/src/unicode_tables/script_extension.rs",
        "vendor/regex-syntax-0.6.25/src/unicode_tables/sentence_break.rs",
        "vendor/regex-syntax-0.6.25/src/unicode_tables/word_break.rs",
        "vendor/regex-syntax-0.6.25/src/utf8.rs",
    ],
    crate = "regex_syntax",
    crate_root = "vendor/regex-syntax-0.6.25/src/lib.rs",
    edition = "2018",
    features = [
        "default",
        "unicode",
        "unicode-age",
        "unicode-bool",
        "unicode-case",
        "unicode-gencat",
        "unicode-perl",
        "unicode-script",
        "unicode-segment",
    ],
    licenses = [
        "vendor/regex-syntax-0.6.25/LICENSE-APACHE",
        "vendor/regex-syntax-0.6.25/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

third_party_rust_library(
    name = "remove_dir_all-0.5.3",
    srcs = [
        "vendor/remove_dir_all-0.5.3/src/fs.rs",
        "vendor/remove_dir_all-0.5.3/src/lib.rs",
    ],
    crate = "remove_dir_all",
    crate_root = "vendor/remove_dir_all-0.5.3/src/lib.rs",
    edition = "2015",
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

third_party_rust_library(
    name = "reqwest",
    srcs = [
        "vendor/reqwest-0.11.3/src/error.rs",
        "vendor/reqwest-0.11.3/src/into_url.rs",
        "vendor/reqwest-0.11.3/src/lib.rs",
    ],
    crate = "reqwest",
    crate_root = "vendor/reqwest-0.11.3/src/lib.rs",
    edition = "2018",
    features = [
        "__rustls",
        "__tls",
        "blocking",
        "default",
        "default-tls",
        "hyper-rustls",
        "hyper-tls",
        "json",
        "native-tls-crate",
        "rustls",
        "rustls-tls",
        "rustls-tls-webpki-roots",
        "serde_json",
        "tokio-native-tls",
        "tokio-rustls",
        "webpki-roots",
    ],
    licenses = [
        "vendor/reqwest-0.11.3/LICENSE-APACHE",
        "vendor/reqwest-0.11.3/LICENSE-MIT",
    ],
    platform = {
        "linux-x86_64": {
            "deps": [
                ":base64-0.13.0",
                ":encoding_rs-0.8.28",
                ":futures-core",
                ":futures-util",
                ":http-body-0.4.2",
                ":hyper",
                ":hyper-rustls",
                ":hyper-tls-0.5.0",
                ":ipnet-2.3.0",
                ":lazy_static-1.4.0",
                ":log-0.4.14",
                ":mime-0.3.16",
                ":percent-encoding-2.1.0",
                ":pin-project-lite-0.2.6",
                ":rustls",
                ":tokio",
                ":tokio-native-tls-0.3.0",
                ":tokio-rustls-0.22.0",
                ":webpki-roots-0.21.1",
            ],
            "named_deps": {
                "native_tls_crate": ":native-tls-0.2.7",
            },
        },
    },
    rustc_flags = ["--cap-lints=allow"],
    visibility = ["PUBLIC"],
    deps = [
        ":bytes",
        ":http-0.2.4",
        ":serde",
        ":serde_json-1.0.64",
        ":serde_urlencoded-0.7.0",
        ":url-2.2.2",
    ],
)

third_party_rust_library(
    name = "resolv-conf-0.7.0",
    srcs = [
        "vendor/resolv-conf-0.7.0/src/config.rs",
        "vendor/resolv-conf-0.7.0/src/grammar.rs",
        "vendor/resolv-conf-0.7.0/src/ip.rs",
        "vendor/resolv-conf-0.7.0/src/lib.rs",
    ],
    crate = "resolv_conf",
    crate_root = "vendor/resolv-conf-0.7.0/src/lib.rs",
    edition = "2015",
    features = [
        "hostname",
        "system",
    ],
    licenses = [
        "vendor/resolv-conf-0.7.0/LICENSE-APACHE",
        "vendor/resolv-conf-0.7.0/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [
        ":hostname-0.3.1",
        ":quick-error-1.2.3",
    ],
)

third_party_rust_library(
    name = "ring-0.16.20",
    srcs = [
        "vendor/ring-0.16.20/src/aead.rs",
        "vendor/ring-0.16.20/src/aead/aes.rs",
        "vendor/ring-0.16.20/src/aead/aes_gcm.rs",
        "vendor/ring-0.16.20/src/aead/block.rs",
        "vendor/ring-0.16.20/src/aead/chacha.rs",
        "vendor/ring-0.16.20/src/aead/chacha20_poly1305.rs",
        "vendor/ring-0.16.20/src/aead/chacha20_poly1305_openssh.rs",
        "vendor/ring-0.16.20/src/aead/counter.rs",
        "vendor/ring-0.16.20/src/aead/gcm.rs",
        "vendor/ring-0.16.20/src/aead/gcm/gcm_nohw.rs",
        "vendor/ring-0.16.20/src/aead/iv.rs",
        "vendor/ring-0.16.20/src/aead/nonce.rs",
        "vendor/ring-0.16.20/src/aead/poly1305.rs",
        "vendor/ring-0.16.20/src/aead/quic.rs",
        "vendor/ring-0.16.20/src/aead/shift.rs",
        "vendor/ring-0.16.20/src/agreement.rs",
        "vendor/ring-0.16.20/src/arithmetic.rs",
        "vendor/ring-0.16.20/src/arithmetic/bigint.rs",
        "vendor/ring-0.16.20/src/arithmetic/constant.rs",
        "vendor/ring-0.16.20/src/arithmetic/montgomery.rs",
        "vendor/ring-0.16.20/src/bits.rs",
        "vendor/ring-0.16.20/src/bssl.rs",
        "vendor/ring-0.16.20/src/c.rs",
        "vendor/ring-0.16.20/src/constant_time.rs",
        "vendor/ring-0.16.20/src/cpu.rs",
        "vendor/ring-0.16.20/src/data/alg-rsa-encryption.der",
        "vendor/ring-0.16.20/src/debug.rs",
        "vendor/ring-0.16.20/src/digest.rs",
        "vendor/ring-0.16.20/src/digest/sha1.rs",
        "vendor/ring-0.16.20/src/digest/sha2.rs",
        "vendor/ring-0.16.20/src/ec.rs",
        "vendor/ring-0.16.20/src/ec/curve25519.rs",
        "vendor/ring-0.16.20/src/ec/curve25519/ed25519.rs",
        "vendor/ring-0.16.20/src/ec/curve25519/ed25519/ed25519_pkcs8_v2_template.der",
        "vendor/ring-0.16.20/src/ec/curve25519/ed25519/signing.rs",
        "vendor/ring-0.16.20/src/ec/curve25519/ed25519/verification.rs",
        "vendor/ring-0.16.20/src/ec/curve25519/ops.rs",
        "vendor/ring-0.16.20/src/ec/curve25519/scalar.rs",
        "vendor/ring-0.16.20/src/ec/curve25519/x25519.rs",
        "vendor/ring-0.16.20/src/ec/keys.rs",
        "vendor/ring-0.16.20/src/ec/suite_b.rs",
        "vendor/ring-0.16.20/src/ec/suite_b/curve.rs",
        "vendor/ring-0.16.20/src/ec/suite_b/ecdh.rs",
        "vendor/ring-0.16.20/src/ec/suite_b/ecdsa.rs",
        "vendor/ring-0.16.20/src/ec/suite_b/ecdsa/digest_scalar.rs",
        "vendor/ring-0.16.20/src/ec/suite_b/ecdsa/ecPublicKey_p256_pkcs8_v1_template.der",
        "vendor/ring-0.16.20/src/ec/suite_b/ecdsa/ecPublicKey_p384_pkcs8_v1_template.der",
        "vendor/ring-0.16.20/src/ec/suite_b/ecdsa/signing.rs",
        "vendor/ring-0.16.20/src/ec/suite_b/ecdsa/verification.rs",
        "vendor/ring-0.16.20/src/ec/suite_b/ops.rs",
        "vendor/ring-0.16.20/src/ec/suite_b/ops/elem.rs",
        "vendor/ring-0.16.20/src/ec/suite_b/ops/p256.rs",
        "vendor/ring-0.16.20/src/ec/suite_b/ops/p384.rs",
        "vendor/ring-0.16.20/src/ec/suite_b/private_key.rs",
        "vendor/ring-0.16.20/src/ec/suite_b/public_key.rs",
        "vendor/ring-0.16.20/src/endian.rs",
        "vendor/ring-0.16.20/src/error.rs",
        "vendor/ring-0.16.20/src/hkdf.rs",
        "vendor/ring-0.16.20/src/hmac.rs",
        "vendor/ring-0.16.20/src/io.rs",
        "vendor/ring-0.16.20/src/io/der.rs",
        "vendor/ring-0.16.20/src/io/der_writer.rs",
        "vendor/ring-0.16.20/src/io/positive.rs",
        "vendor/ring-0.16.20/src/io/writer.rs",
        "vendor/ring-0.16.20/src/lib.rs",
        "vendor/ring-0.16.20/src/limb.rs",
        "vendor/ring-0.16.20/src/pbkdf2.rs",
        "vendor/ring-0.16.20/src/pkcs8.rs",
        "vendor/ring-0.16.20/src/polyfill.rs",
        "vendor/ring-0.16.20/src/rand.rs",
        "vendor/ring-0.16.20/src/rsa.rs",
        "vendor/ring-0.16.20/src/rsa/padding.rs",
        "vendor/ring-0.16.20/src/rsa/signature_rsa_example_private_key.der",
        "vendor/ring-0.16.20/src/rsa/signing.rs",
        "vendor/ring-0.16.20/src/rsa/verification.rs",
        "vendor/ring-0.16.20/src/signature.rs",
        "vendor/ring-0.16.20/src/test.rs",
    ],
    crate = "ring",
    crate_root = "vendor/ring-0.16.20/src/lib.rs",
    edition = "2018",
    features = [
        "alloc",
        "default",
        "dev_urandom_fallback",
        "once_cell",
    ],
    licenses = ["vendor/ring-0.16.20/LICENSE"],
    platform = {
        "linux-x86_64": {
            "deps": [
                ":libc-0.2.97",
                ":once_cell",
                ":ring-0.16.20-ring-c-asm-elf",
                ":spin-0.5.2",
            ],
        },
    },
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [":untrusted-0.7.1"],
)

third_party_rust_cxx_library(
    name = "ring-0.16.20-ring-c-asm-elf",
    srcs = [
        "vendor/ring-0.16.20/crypto/constant_time_test.c",
        "vendor/ring-0.16.20/crypto/cpu-intel.c",
        "vendor/ring-0.16.20/crypto/crypto.c",
        "vendor/ring-0.16.20/crypto/curve25519/curve25519.c",
        "vendor/ring-0.16.20/crypto/fipsmodule/aes/aes_nohw.c",
        "vendor/ring-0.16.20/crypto/fipsmodule/bn/montgomery.c",
        "vendor/ring-0.16.20/crypto/fipsmodule/bn/montgomery_inv.c",
        "vendor/ring-0.16.20/crypto/fipsmodule/ec/ecp_nistz.c",
        "vendor/ring-0.16.20/crypto/fipsmodule/ec/ecp_nistz256.c",
        "vendor/ring-0.16.20/crypto/fipsmodule/ec/gfp_p256.c",
        "vendor/ring-0.16.20/crypto/fipsmodule/ec/gfp_p384.c",
        "vendor/ring-0.16.20/crypto/limbs/limbs.c",
        "vendor/ring-0.16.20/crypto/mem.c",
        "vendor/ring-0.16.20/crypto/poly1305/poly1305.c",
        "vendor/ring-0.16.20/crypto/poly1305/poly1305_arm.c",
        "vendor/ring-0.16.20/crypto/poly1305/poly1305_vec.c",
        "vendor/ring-0.16.20/pregenerated/aesni-gcm-x86_64-elf.S",
        "vendor/ring-0.16.20/pregenerated/aesni-x86_64-elf.S",
        "vendor/ring-0.16.20/pregenerated/chacha-x86_64-elf.S",
        "vendor/ring-0.16.20/pregenerated/chacha20_poly1305_x86_64-elf.S",
        "vendor/ring-0.16.20/pregenerated/ghash-x86_64-elf.S",
        "vendor/ring-0.16.20/pregenerated/p256-x86_64-asm-elf.S",
        "vendor/ring-0.16.20/pregenerated/sha256-x86_64-elf.S",
        "vendor/ring-0.16.20/pregenerated/sha512-x86_64-elf.S",
        "vendor/ring-0.16.20/pregenerated/vpaes-x86_64-elf.S",
        "vendor/ring-0.16.20/pregenerated/x86_64-mont-elf.S",
        "vendor/ring-0.16.20/pregenerated/x86_64-mont5-elf.S",
    ],
    headers = [
        "vendor/ring-0.16.20/crypto/curve25519/curve25519_tables.h",
        "vendor/ring-0.16.20/crypto/curve25519/internal.h",
        "vendor/ring-0.16.20/crypto/fipsmodule/bn/internal.h",
        "vendor/ring-0.16.20/crypto/fipsmodule/ec/ecp_nistz.h",
        "vendor/ring-0.16.20/crypto/fipsmodule/ec/ecp_nistz256.h",
        "vendor/ring-0.16.20/crypto/fipsmodule/ec/ecp_nistz256_table.inl",
        "vendor/ring-0.16.20/crypto/fipsmodule/ec/ecp_nistz384.h",
        "vendor/ring-0.16.20/crypto/fipsmodule/ec/ecp_nistz384.inl",
        "vendor/ring-0.16.20/crypto/internal.h",
        "vendor/ring-0.16.20/crypto/limbs/limbs.h",
        "vendor/ring-0.16.20/crypto/limbs/limbs.inl",
        "vendor/ring-0.16.20/crypto/poly1305/internal.h",
        "vendor/ring-0.16.20/include/GFp/aes.h",
        "vendor/ring-0.16.20/include/GFp/arm_arch.h",
        "vendor/ring-0.16.20/include/GFp/base.h",
        "vendor/ring-0.16.20/include/GFp/check.h",
        "vendor/ring-0.16.20/include/GFp/cpu.h",
        "vendor/ring-0.16.20/include/GFp/mem.h",
        "vendor/ring-0.16.20/include/GFp/poly1305.h",
        "vendor/ring-0.16.20/include/GFp/type_check.h",
        "vendor/ring-0.16.20/third_party/fiat/curve25519_32.h",
        "vendor/ring-0.16.20/third_party/fiat/curve25519_64.h",
    ],
    compiler_flags = ["-Wno-error"],
    include_directories = ["vendor/ring-0.16.20/include"],
    preferred_linkage = "static",
    visibility = [],
)

third_party_rust_library(
    name = "rustc-demangle-0.1.19",
    srcs = [
        "vendor/rustc-demangle-0.1.19/src/legacy.rs",
        "vendor/rustc-demangle-0.1.19/src/lib.rs",
        "vendor/rustc-demangle-0.1.19/src/v0.rs",
    ],
    crate = "rustc_demangle",
    crate_root = "vendor/rustc-demangle-0.1.19/src/lib.rs",
    edition = "2015",
    licenses = [
        "vendor/rustc-demangle-0.1.19/LICENSE-APACHE",
        "vendor/rustc-demangle-0.1.19/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

third_party_rust_library(
    name = "rustls",
    srcs = [
        "vendor/rustls-0.19.1/src/anchors.rs",
        "vendor/rustls-0.19.1/src/bs_debug.rs",
        "vendor/rustls-0.19.1/src/check.rs",
        "vendor/rustls-0.19.1/src/cipher.rs",
        "vendor/rustls-0.19.1/src/client/common.rs",
        "vendor/rustls-0.19.1/src/client/handy.rs",
        "vendor/rustls-0.19.1/src/client/hs.rs",
        "vendor/rustls-0.19.1/src/client/mod.rs",
        "vendor/rustls-0.19.1/src/client/tls12.rs",
        "vendor/rustls-0.19.1/src/client/tls13.rs",
        "vendor/rustls-0.19.1/src/error.rs",
        "vendor/rustls-0.19.1/src/hash_hs.rs",
        "vendor/rustls-0.19.1/src/key.rs",
        "vendor/rustls-0.19.1/src/key_schedule.rs",
        "vendor/rustls-0.19.1/src/keylog.rs",
        "vendor/rustls-0.19.1/src/lib.rs",
        "vendor/rustls-0.19.1/src/manual/features.rs",
        "vendor/rustls-0.19.1/src/manual/howto.rs",
        "vendor/rustls-0.19.1/src/manual/implvulns.rs",
        "vendor/rustls-0.19.1/src/manual/mod.rs",
        "vendor/rustls-0.19.1/src/manual/tlsvulns.rs",
        "vendor/rustls-0.19.1/src/msgs/alert.rs",
        "vendor/rustls-0.19.1/src/msgs/base.rs",
        "vendor/rustls-0.19.1/src/msgs/ccs.rs",
        "vendor/rustls-0.19.1/src/msgs/codec.rs",
        "vendor/rustls-0.19.1/src/msgs/deframer.rs",
        "vendor/rustls-0.19.1/src/msgs/enums.rs",
        "vendor/rustls-0.19.1/src/msgs/enums_test.rs",
        "vendor/rustls-0.19.1/src/msgs/fragmenter.rs",
        "vendor/rustls-0.19.1/src/msgs/handshake.rs",
        "vendor/rustls-0.19.1/src/msgs/handshake-test.1.bin",
        "vendor/rustls-0.19.1/src/msgs/handshake_test.rs",
        "vendor/rustls-0.19.1/src/msgs/hsjoiner.rs",
        "vendor/rustls-0.19.1/src/msgs/macros.rs",
        "vendor/rustls-0.19.1/src/msgs/message.rs",
        "vendor/rustls-0.19.1/src/msgs/message_test.rs",
        "vendor/rustls-0.19.1/src/msgs/mod.rs",
        "vendor/rustls-0.19.1/src/msgs/persist.rs",
        "vendor/rustls-0.19.1/src/msgs/persist_test.rs",
        "vendor/rustls-0.19.1/src/pemfile.rs",
        "vendor/rustls-0.19.1/src/prf.rs",
        "vendor/rustls-0.19.1/src/quic.rs",
        "vendor/rustls-0.19.1/src/rand.rs",
        "vendor/rustls-0.19.1/src/record_layer.rs",
        "vendor/rustls-0.19.1/src/server/common.rs",
        "vendor/rustls-0.19.1/src/server/handy.rs",
        "vendor/rustls-0.19.1/src/server/hs.rs",
        "vendor/rustls-0.19.1/src/server/mod.rs",
        "vendor/rustls-0.19.1/src/server/tls12.rs",
        "vendor/rustls-0.19.1/src/server/tls13.rs",
        "vendor/rustls-0.19.1/src/session.rs",
        "vendor/rustls-0.19.1/src/sign.rs",
        "vendor/rustls-0.19.1/src/stream.rs",
        "vendor/rustls-0.19.1/src/suites.rs",
        "vendor/rustls-0.19.1/src/testdata/cert-arstechnica.0.der",
        "vendor/rustls-0.19.1/src/testdata/cert-arstechnica.1.der",
        "vendor/rustls-0.19.1/src/testdata/cert-arstechnica.2.der",
        "vendor/rustls-0.19.1/src/testdata/cert-duckduckgo.0.der",
        "vendor/rustls-0.19.1/src/testdata/cert-duckduckgo.1.der",
        "vendor/rustls-0.19.1/src/testdata/cert-github.0.der",
        "vendor/rustls-0.19.1/src/testdata/cert-github.1.der",
        "vendor/rustls-0.19.1/src/testdata/cert-google.0.der",
        "vendor/rustls-0.19.1/src/testdata/cert-google.1.der",
        "vendor/rustls-0.19.1/src/testdata/cert-google.2.der",
        "vendor/rustls-0.19.1/src/testdata/cert-hn.0.der",
        "vendor/rustls-0.19.1/src/testdata/cert-hn.1.der",
        "vendor/rustls-0.19.1/src/testdata/cert-hn.2.der",
        "vendor/rustls-0.19.1/src/testdata/cert-reddit.0.der",
        "vendor/rustls-0.19.1/src/testdata/cert-reddit.1.der",
        "vendor/rustls-0.19.1/src/testdata/cert-rustlang.0.der",
        "vendor/rustls-0.19.1/src/testdata/cert-rustlang.1.der",
        "vendor/rustls-0.19.1/src/testdata/cert-rustlang.2.der",
        "vendor/rustls-0.19.1/src/testdata/cert-servo.0.der",
        "vendor/rustls-0.19.1/src/testdata/cert-servo.1.der",
        "vendor/rustls-0.19.1/src/testdata/cert-servo.2.der",
        "vendor/rustls-0.19.1/src/testdata/cert-stackoverflow.0.der",
        "vendor/rustls-0.19.1/src/testdata/cert-stackoverflow.1.der",
        "vendor/rustls-0.19.1/src/testdata/cert-twitter.0.der",
        "vendor/rustls-0.19.1/src/testdata/cert-twitter.1.der",
        "vendor/rustls-0.19.1/src/testdata/cert-wapo.0.der",
        "vendor/rustls-0.19.1/src/testdata/cert-wapo.1.der",
        "vendor/rustls-0.19.1/src/testdata/cert-wapo.2.der",
        "vendor/rustls-0.19.1/src/testdata/cert-wikipedia.0.der",
        "vendor/rustls-0.19.1/src/testdata/cert-wikipedia.1.der",
        "vendor/rustls-0.19.1/src/testdata/deframer-test.1.bin",
        "vendor/rustls-0.19.1/src/testdata/deframer-test.2.bin",
        "vendor/rustls-0.19.1/src/testdata/prf-result.1.bin",
        "vendor/rustls-0.19.1/src/testdata/prf-result.2.bin",
        "vendor/rustls-0.19.1/src/ticketer.rs",
        "vendor/rustls-0.19.1/src/vecbuf.rs",
        "vendor/rustls-0.19.1/src/verify.rs",
        "vendor/rustls-0.19.1/src/verifybench.rs",
        "vendor/rustls-0.19.1/src/x509.rs",
    ],
    crate = "rustls",
    crate_root = "vendor/rustls-0.19.1/src/lib.rs",
    edition = "2018",
    features = [
        "dangerous_configuration",
        "default",
        "log",
        "logging",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = ["PUBLIC"],
    deps = [
        ":base64-0.13.0",
        ":log-0.4.14",
        ":ring-0.16.20",
        ":sct-0.6.1",
        ":webpki-0.21.4",
    ],
)

third_party_rust_library(
    name = "rustls-native-certs",
    srcs = [
        "vendor/rustls-native-certs-0.5.0/src/lib.rs",
        "vendor/rustls-native-certs-0.5.0/src/macos.rs",
        "vendor/rustls-native-certs-0.5.0/src/rustls.rs",
        "vendor/rustls-native-certs-0.5.0/src/unix.rs",
        "vendor/rustls-native-certs-0.5.0/src/windows.rs",
    ],
    crate = "rustls_native_certs",
    crate_root = "vendor/rustls-native-certs-0.5.0/src/lib.rs",
    edition = "2018",
    features = [
        "default",
        "rustls",
    ],
    licenses = [
        "vendor/rustls-native-certs-0.5.0/LICENSE",
        "vendor/rustls-native-certs-0.5.0/LICENSE-APACHE",
        "vendor/rustls-native-certs-0.5.0/LICENSE-ISC",
        "vendor/rustls-native-certs-0.5.0/LICENSE-MIT",
    ],
    platform = {
        "linux-x86_64": {
            "deps": [":openssl-probe-0.1.4"],
        },
    },
    rustc_flags = ["--cap-lints=allow"],
    visibility = ["PUBLIC"],
    deps = [":rustls"],
)

third_party_rust_library(
    name = "ryu-1.0.5",
    srcs = [
        "vendor/ryu-1.0.5/src/buffer/mod.rs",
        "vendor/ryu-1.0.5/src/common.rs",
        "vendor/ryu-1.0.5/src/d2s.rs",
        "vendor/ryu-1.0.5/src/d2s_full_table.rs",
        "vendor/ryu-1.0.5/src/d2s_intrinsics.rs",
        "vendor/ryu-1.0.5/src/d2s_small_table.rs",
        "vendor/ryu-1.0.5/src/digit_table.rs",
        "vendor/ryu-1.0.5/src/f2s.rs",
        "vendor/ryu-1.0.5/src/f2s_intrinsics.rs",
        "vendor/ryu-1.0.5/src/lib.rs",
        "vendor/ryu-1.0.5/src/pretty/exponent.rs",
        "vendor/ryu-1.0.5/src/pretty/mantissa.rs",
        "vendor/ryu-1.0.5/src/pretty/mod.rs",
    ],
    crate = "ryu",
    crate_root = "vendor/ryu-1.0.5/src/lib.rs",
    edition = "2018",
    licenses = [
        "vendor/ryu-1.0.5/LICENSE-APACHE",
        "vendor/ryu-1.0.5/LICENSE-BOOST",
    ],
    rustc_flags = [
        "--cap-lints=allow",
        "@$(location :ryu-1.0.5-build-script-build-args)",
    ],
    visibility = [],
)

third_party_rust_binary(
    name = "ryu-1.0.5-build-script-build",
    srcs = ["vendor/ryu-1.0.5/build.rs"],
    crate = "build_script_build",
    crate_root = "vendor/ryu-1.0.5/build.rs",
    edition = "2018",
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

rust_buildscript_genrule_filter(
    name = "ryu-1.0.5-build-script-build-args",
    package_name = "ryu",
    buildscript_rule = ":ryu-1.0.5-build-script-build",
    cfgs = [],
    features = [],
    outfile = "args.txt",
    version = "1.0.5",
)

third_party_rust_library(
    name = "safemem-0.3.3",
    srcs = ["vendor/safemem-0.3.3/src/lib.rs"],
    crate = "safemem",
    crate_root = "vendor/safemem-0.3.3/src/lib.rs",
    edition = "2015",
    features = [
        "default",
        "std",
    ],
    licenses = [
        "vendor/safemem-0.3.3/LICENSE-APACHE",
        "vendor/safemem-0.3.3/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

third_party_rust_library(
    name = "scoped-tls-1.0.0",
    srcs = ["vendor/scoped-tls-1.0.0/src/lib.rs"],
    crate = "scoped_tls",
    crate_root = "vendor/scoped-tls-1.0.0/src/lib.rs",
    edition = "2015",
    licenses = [
        "vendor/scoped-tls-1.0.0/LICENSE-APACHE",
        "vendor/scoped-tls-1.0.0/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

third_party_rust_library(
    name = "scopeguard-1.1.0",
    srcs = ["vendor/scopeguard-1.1.0/src/lib.rs"],
    crate = "scopeguard",
    crate_root = "vendor/scopeguard-1.1.0/src/lib.rs",
    edition = "2015",
    licenses = [
        "vendor/scopeguard-1.1.0/LICENSE-APACHE",
        "vendor/scopeguard-1.1.0/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

third_party_rust_library(
    name = "scroll-0.10.2",
    srcs = [
        "vendor/scroll-0.10.2/README.md",
        "vendor/scroll-0.10.2/src/ctx.rs",
        "vendor/scroll-0.10.2/src/endian.rs",
        "vendor/scroll-0.10.2/src/error.rs",
        "vendor/scroll-0.10.2/src/greater.rs",
        "vendor/scroll-0.10.2/src/leb128.rs",
        "vendor/scroll-0.10.2/src/lesser.rs",
        "vendor/scroll-0.10.2/src/lib.rs",
        "vendor/scroll-0.10.2/src/pread.rs",
        "vendor/scroll-0.10.2/src/pwrite.rs",
    ],
    crate = "scroll",
    crate_root = "vendor/scroll-0.10.2/src/lib.rs",
    edition = "2018",
    features = [
        "derive",
        "scroll_derive",
        "std",
    ],
    licenses = ["vendor/scroll-0.10.2/LICENSE"],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [":scroll_derive-0.10.5"],
)

third_party_rust_library(
    name = "scroll_derive-0.10.5",
    srcs = ["vendor/scroll_derive-0.10.5/src/lib.rs"],
    crate = "scroll_derive",
    crate_root = "vendor/scroll_derive-0.10.5/src/lib.rs",
    edition = "2018",
    licenses = ["vendor/scroll_derive-0.10.5/LICENSE"],
    proc_macro = True,
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [
        ":proc-macro2-1.0.27",
        ":quote-1.0.9",
        ":syn-1.0.73",
    ],
)

third_party_rust_library(
    name = "sct-0.6.1",
    srcs = [
        "vendor/sct-0.6.1/src/lib.rs",
        "vendor/sct-0.6.1/src/testdata/ecdsa-prime256v1-pub.raw",
        "vendor/sct-0.6.1/src/testdata/ecdsa-secp384r1-pub.raw",
        "vendor/sct-0.6.1/src/testdata/ecdsa_p256-badsigalg-sct.bin",
        "vendor/sct-0.6.1/src/testdata/ecdsa_p256-basic-sct.bin",
        "vendor/sct-0.6.1/src/testdata/ecdsa_p256-future-sct.bin",
        "vendor/sct-0.6.1/src/testdata/ecdsa_p256-junk-sct.bin",
        "vendor/sct-0.6.1/src/testdata/ecdsa_p256-short-sct.bin",
        "vendor/sct-0.6.1/src/testdata/ecdsa_p256-version-sct.bin",
        "vendor/sct-0.6.1/src/testdata/ecdsa_p256-wrongcert-sct.bin",
        "vendor/sct-0.6.1/src/testdata/ecdsa_p256-wrongext-sct.bin",
        "vendor/sct-0.6.1/src/testdata/ecdsa_p256-wrongid-sct.bin",
        "vendor/sct-0.6.1/src/testdata/ecdsa_p256-wrongtime-sct.bin",
        "vendor/sct-0.6.1/src/testdata/ecdsa_p384-basic-sct.bin",
        "vendor/sct-0.6.1/src/testdata/ecdsa_p384-wrongcert-sct.bin",
        "vendor/sct-0.6.1/src/testdata/ecdsa_p384-wrongtime-sct.bin",
        "vendor/sct-0.6.1/src/testdata/google-cert.bin",
        "vendor/sct-0.6.1/src/testdata/google-pilot-pubkey.bin",
        "vendor/sct-0.6.1/src/testdata/google-sct0.bin",
        "vendor/sct-0.6.1/src/testdata/google-sct1.bin",
        "vendor/sct-0.6.1/src/testdata/rsa-2048-pub.raw",
        "vendor/sct-0.6.1/src/testdata/rsa-3072-pub.raw",
        "vendor/sct-0.6.1/src/testdata/rsa-4096-pub.raw",
        "vendor/sct-0.6.1/src/testdata/rsa2048-basic-sct.bin",
        "vendor/sct-0.6.1/src/testdata/rsa2048-wrongcert-sct.bin",
        "vendor/sct-0.6.1/src/testdata/rsa2048-wrongtime-sct.bin",
        "vendor/sct-0.6.1/src/testdata/rsa3072-basic-sct.bin",
        "vendor/sct-0.6.1/src/testdata/rsa3072-wrongcert-sct.bin",
        "vendor/sct-0.6.1/src/testdata/rsa3072-wrongtime-sct.bin",
        "vendor/sct-0.6.1/src/testdata/rsa4096-basic-sct.bin",
        "vendor/sct-0.6.1/src/testdata/rsa4096-wrongcert-sct.bin",
        "vendor/sct-0.6.1/src/testdata/rsa4096-wrongtime-sct.bin",
        "vendor/sct-0.6.1/src/testdata/symantec-log-pubkey.bin",
        "vendor/sct-0.6.1/src/tests.rs",
        "vendor/sct-0.6.1/src/tests_generated.rs",
        "vendor/sct-0.6.1/src/tests_google.rs",
    ],
    crate = "sct",
    crate_root = "vendor/sct-0.6.1/src/lib.rs",
    edition = "2018",
    licenses = [
        "vendor/sct-0.6.1/LICENSE",
        "vendor/sct-0.6.1/LICENSE-APACHE",
        "vendor/sct-0.6.1/LICENSE-ISC",
        "vendor/sct-0.6.1/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [
        ":ring-0.16.20",
        ":untrusted-0.7.1",
    ],
)

third_party_rust_library(
    name = "serde",
    srcs = [
        "vendor/serde-1.0.126/src/de/ignored_any.rs",
        "vendor/serde-1.0.126/src/de/impls.rs",
        "vendor/serde-1.0.126/src/de/mod.rs",
        "vendor/serde-1.0.126/src/de/seed.rs",
        "vendor/serde-1.0.126/src/de/utf8.rs",
        "vendor/serde-1.0.126/src/de/value.rs",
        "vendor/serde-1.0.126/src/integer128.rs",
        "vendor/serde-1.0.126/src/lib.rs",
        "vendor/serde-1.0.126/src/macros.rs",
        "vendor/serde-1.0.126/src/private/de.rs",
        "vendor/serde-1.0.126/src/private/doc.rs",
        "vendor/serde-1.0.126/src/private/mod.rs",
        "vendor/serde-1.0.126/src/private/ser.rs",
        "vendor/serde-1.0.126/src/private/size_hint.rs",
        "vendor/serde-1.0.126/src/ser/fmt.rs",
        "vendor/serde-1.0.126/src/ser/impls.rs",
        "vendor/serde-1.0.126/src/ser/impossible.rs",
        "vendor/serde-1.0.126/src/ser/mod.rs",
        "vendor/serde-1.0.126/src/std_error.rs",
    ],
    crate = "serde",
    crate_root = "vendor/serde-1.0.126/src/lib.rs",
    edition = "2015",
    features = [
        "alloc",
        "default",
        "derive",
        "serde_derive",
        "std",
    ],
    licenses = [
        "vendor/serde-1.0.126/LICENSE-APACHE",
        "vendor/serde-1.0.126/LICENSE-MIT",
    ],
    rustc_flags = [
        "--cap-lints=allow",
        "@$(location :serde-1.0.126-build-script-build-args)",
    ],
    visibility = ["PUBLIC"],
    deps = [":serde_derive-1.0.126"],
)

third_party_rust_binary(
    name = "serde-1.0.126-build-script-build",
    srcs = [
        "vendor/serde-1.0.126/build.rs",
        "vendor/serde-1.0.126/src/de/ignored_any.rs",
        "vendor/serde-1.0.126/src/de/impls.rs",
        "vendor/serde-1.0.126/src/de/mod.rs",
        "vendor/serde-1.0.126/src/de/seed.rs",
        "vendor/serde-1.0.126/src/de/utf8.rs",
        "vendor/serde-1.0.126/src/de/value.rs",
        "vendor/serde-1.0.126/src/integer128.rs",
        "vendor/serde-1.0.126/src/lib.rs",
        "vendor/serde-1.0.126/src/macros.rs",
        "vendor/serde-1.0.126/src/private/de.rs",
        "vendor/serde-1.0.126/src/private/doc.rs",
        "vendor/serde-1.0.126/src/private/mod.rs",
        "vendor/serde-1.0.126/src/private/ser.rs",
        "vendor/serde-1.0.126/src/private/size_hint.rs",
        "vendor/serde-1.0.126/src/ser/fmt.rs",
        "vendor/serde-1.0.126/src/ser/impls.rs",
        "vendor/serde-1.0.126/src/ser/impossible.rs",
        "vendor/serde-1.0.126/src/ser/mod.rs",
        "vendor/serde-1.0.126/src/std_error.rs",
    ],
    crate = "build_script_build",
    crate_root = "vendor/serde-1.0.126/build.rs",
    edition = "2015",
    features = [
        "alloc",
        "default",
        "derive",
        "serde_derive",
        "std",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

rust_buildscript_genrule_filter(
    name = "serde-1.0.126-build-script-build-args",
    package_name = "serde",
    buildscript_rule = ":serde-1.0.126-build-script-build",
    cfgs = [],
    features = [
        "alloc",
        "default",
        "derive",
        "serde_derive",
        "std",
    ],
    outfile = "args.txt",
    version = "1.0.126",
)

third_party_rust_library(
    name = "serde_derive-1.0.126",
    srcs = [
        "vendor/serde_derive-1.0.126/src/bound.rs",
        "vendor/serde_derive-1.0.126/src/de.rs",
        "vendor/serde_derive-1.0.126/src/dummy.rs",
        "vendor/serde_derive-1.0.126/src/fragment.rs",
        "vendor/serde_derive-1.0.126/src/internals/ast.rs",
        "vendor/serde_derive-1.0.126/src/internals/attr.rs",
        "vendor/serde_derive-1.0.126/src/internals/case.rs",
        "vendor/serde_derive-1.0.126/src/internals/check.rs",
        "vendor/serde_derive-1.0.126/src/internals/ctxt.rs",
        "vendor/serde_derive-1.0.126/src/internals/mod.rs",
        "vendor/serde_derive-1.0.126/src/internals/receiver.rs",
        "vendor/serde_derive-1.0.126/src/internals/respan.rs",
        "vendor/serde_derive-1.0.126/src/internals/symbol.rs",
        "vendor/serde_derive-1.0.126/src/lib.rs",
        "vendor/serde_derive-1.0.126/src/pretend.rs",
        "vendor/serde_derive-1.0.126/src/ser.rs",
        "vendor/serde_derive-1.0.126/src/try.rs",
    ],
    crate = "serde_derive",
    crate_root = "vendor/serde_derive-1.0.126/src/lib.rs",
    edition = "2015",
    features = ["default"],
    licenses = [
        "vendor/serde_derive-1.0.126/LICENSE-APACHE",
        "vendor/serde_derive-1.0.126/LICENSE-MIT",
    ],
    proc_macro = True,
    rustc_flags = [
        "--cap-lints=allow",
        "@$(location :serde_derive-1.0.126-build-script-build-args)",
    ],
    visibility = [],
    deps = [
        ":proc-macro2-1.0.27",
        ":quote-1.0.9",
        ":syn-1.0.73",
    ],
)

third_party_rust_binary(
    name = "serde_derive-1.0.126-build-script-build",
    srcs = [
        "vendor/serde_derive-1.0.126/build.rs",
        "vendor/serde_derive-1.0.126/src/bound.rs",
        "vendor/serde_derive-1.0.126/src/de.rs",
        "vendor/serde_derive-1.0.126/src/dummy.rs",
        "vendor/serde_derive-1.0.126/src/fragment.rs",
        "vendor/serde_derive-1.0.126/src/internals/ast.rs",
        "vendor/serde_derive-1.0.126/src/internals/attr.rs",
        "vendor/serde_derive-1.0.126/src/internals/case.rs",
        "vendor/serde_derive-1.0.126/src/internals/check.rs",
        "vendor/serde_derive-1.0.126/src/internals/ctxt.rs",
        "vendor/serde_derive-1.0.126/src/internals/mod.rs",
        "vendor/serde_derive-1.0.126/src/internals/receiver.rs",
        "vendor/serde_derive-1.0.126/src/internals/respan.rs",
        "vendor/serde_derive-1.0.126/src/internals/symbol.rs",
        "vendor/serde_derive-1.0.126/src/lib.rs",
        "vendor/serde_derive-1.0.126/src/pretend.rs",
        "vendor/serde_derive-1.0.126/src/ser.rs",
        "vendor/serde_derive-1.0.126/src/try.rs",
    ],
    crate = "build_script_build",
    crate_root = "vendor/serde_derive-1.0.126/build.rs",
    edition = "2015",
    features = ["default"],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

rust_buildscript_genrule_filter(
    name = "serde_derive-1.0.126-build-script-build-args",
    package_name = "serde_derive",
    buildscript_rule = ":serde_derive-1.0.126-build-script-build",
    cfgs = [],
    features = ["default"],
    outfile = "args.txt",
    version = "1.0.126",
)

third_party_rust_library(
    name = "serde_json-1.0.64",
    srcs = [
        "vendor/serde_json-1.0.64/src/de.rs",
        "vendor/serde_json-1.0.64/src/error.rs",
        "vendor/serde_json-1.0.64/src/features_check/mod.rs",
        "vendor/serde_json-1.0.64/src/io/core.rs",
        "vendor/serde_json-1.0.64/src/io/mod.rs",
        "vendor/serde_json-1.0.64/src/iter.rs",
        "vendor/serde_json-1.0.64/src/lexical/algorithm.rs",
        "vendor/serde_json-1.0.64/src/lexical/bhcomp.rs",
        "vendor/serde_json-1.0.64/src/lexical/bignum.rs",
        "vendor/serde_json-1.0.64/src/lexical/cached.rs",
        "vendor/serde_json-1.0.64/src/lexical/cached_float80.rs",
        "vendor/serde_json-1.0.64/src/lexical/digit.rs",
        "vendor/serde_json-1.0.64/src/lexical/errors.rs",
        "vendor/serde_json-1.0.64/src/lexical/exponent.rs",
        "vendor/serde_json-1.0.64/src/lexical/float.rs",
        "vendor/serde_json-1.0.64/src/lexical/large_powers.rs",
        "vendor/serde_json-1.0.64/src/lexical/large_powers32.rs",
        "vendor/serde_json-1.0.64/src/lexical/large_powers64.rs",
        "vendor/serde_json-1.0.64/src/lexical/math.rs",
        "vendor/serde_json-1.0.64/src/lexical/mod.rs",
        "vendor/serde_json-1.0.64/src/lexical/num.rs",
        "vendor/serde_json-1.0.64/src/lexical/parse.rs",
        "vendor/serde_json-1.0.64/src/lexical/rounding.rs",
        "vendor/serde_json-1.0.64/src/lexical/shift.rs",
        "vendor/serde_json-1.0.64/src/lexical/small_powers.rs",
        "vendor/serde_json-1.0.64/src/lib.rs",
        "vendor/serde_json-1.0.64/src/macros.rs",
        "vendor/serde_json-1.0.64/src/map.rs",
        "vendor/serde_json-1.0.64/src/number.rs",
        "vendor/serde_json-1.0.64/src/raw.rs",
        "vendor/serde_json-1.0.64/src/read.rs",
        "vendor/serde_json-1.0.64/src/ser.rs",
        "vendor/serde_json-1.0.64/src/value/de.rs",
        "vendor/serde_json-1.0.64/src/value/from.rs",
        "vendor/serde_json-1.0.64/src/value/index.rs",
        "vendor/serde_json-1.0.64/src/value/mod.rs",
        "vendor/serde_json-1.0.64/src/value/partial_eq.rs",
        "vendor/serde_json-1.0.64/src/value/ser.rs",
    ],
    crate = "serde_json",
    crate_root = "vendor/serde_json-1.0.64/src/lib.rs",
    edition = "2018",
    features = [
        "default",
        "std",
    ],
    licenses = [
        "vendor/serde_json-1.0.64/LICENSE-APACHE",
        "vendor/serde_json-1.0.64/LICENSE-MIT",
    ],
    rustc_flags = [
        "--cap-lints=allow",
        "--cfg=limb_width_64",
    ],
    visibility = [],
    deps = [
        ":itoa-0.4.7",
        ":ryu-1.0.5",
        ":serde",
    ],
)

third_party_rust_library(
    name = "serde_urlencoded-0.7.0",
    srcs = [
        "vendor/serde_urlencoded-0.7.0/src/de.rs",
        "vendor/serde_urlencoded-0.7.0/src/lib.rs",
        "vendor/serde_urlencoded-0.7.0/src/ser/key.rs",
        "vendor/serde_urlencoded-0.7.0/src/ser/mod.rs",
        "vendor/serde_urlencoded-0.7.0/src/ser/pair.rs",
        "vendor/serde_urlencoded-0.7.0/src/ser/part.rs",
        "vendor/serde_urlencoded-0.7.0/src/ser/value.rs",
    ],
    crate = "serde_urlencoded",
    crate_root = "vendor/serde_urlencoded-0.7.0/src/lib.rs",
    edition = "2018",
    licenses = [
        "vendor/serde_urlencoded-0.7.0/LICENSE-APACHE",
        "vendor/serde_urlencoded-0.7.0/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [
        ":form_urlencoded-1.0.1",
        ":itoa-0.4.7",
        ":ryu-1.0.5",
        ":serde",
    ],
)

third_party_rust_library(
    name = "sha-1-0.9.6",
    srcs = [
        "vendor/sha-1-0.9.6/src/compress.rs",
        "vendor/sha-1-0.9.6/src/compress/aarch64.rs",
        "vendor/sha-1-0.9.6/src/compress/soft.rs",
        "vendor/sha-1-0.9.6/src/compress/x86.rs",
        "vendor/sha-1-0.9.6/src/consts.rs",
        "vendor/sha-1-0.9.6/src/lib.rs",
    ],
    crate = "sha1",
    crate_root = "vendor/sha-1-0.9.6/src/lib.rs",
    edition = "2018",
    features = [
        "default",
        "std",
    ],
    licenses = [
        "vendor/sha-1-0.9.6/LICENSE-APACHE",
        "vendor/sha-1-0.9.6/LICENSE-MIT",
    ],
    platform = {
        "linux-x86_64": {
            "deps": [":cpufeatures-0.1.4"],
        },
    },
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [
        ":block-buffer-0.9.0",
        ":cfg-if-1.0.0",
        ":digest-0.9.0",
        ":opaque-debug-0.3.0",
    ],
)

third_party_rust_library(
    name = "signal-hook-registry-1.4.0",
    srcs = [
        "vendor/signal-hook-registry-1.4.0/src/half_lock.rs",
        "vendor/signal-hook-registry-1.4.0/src/lib.rs",
    ],
    crate = "signal_hook_registry",
    crate_root = "vendor/signal-hook-registry-1.4.0/src/lib.rs",
    edition = "2015",
    licenses = [
        "vendor/signal-hook-registry-1.4.0/LICENSE-APACHE",
        "vendor/signal-hook-registry-1.4.0/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [":libc-0.2.97"],
)

third_party_rust_library(
    name = "slab-0.4.3",
    srcs = [
        "vendor/slab-0.4.3/src/lib.rs",
        "vendor/slab-0.4.3/src/serde.rs",
    ],
    crate = "slab",
    crate_root = "vendor/slab-0.4.3/src/lib.rs",
    edition = "2015",
    features = [
        "default",
        "std",
    ],
    licenses = ["vendor/slab-0.4.3/LICENSE"],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

third_party_rust_library(
    name = "slog",
    srcs = [
        "vendor/slog-2.7.0/src/key/dynamic.rs",
        "vendor/slog-2.7.0/src/key/dynamic_nostd.rs",
        "vendor/slog-2.7.0/src/key/mod.rs",
        "vendor/slog-2.7.0/src/key/static.rs",
        "vendor/slog-2.7.0/src/lib.rs",
        "vendor/slog-2.7.0/src/tests.rs",
    ],
    crate = "slog",
    crate_root = "vendor/slog-2.7.0/src/lib.rs",
    edition = "2015",
    features = [
        "default",
        "max_level_debug",
        "std",
    ],
    licenses = [
        "vendor/slog-2.7.0/LICENSE-APACHE",
        "vendor/slog-2.7.0/LICENSE-MIT",
        "vendor/slog-2.7.0/LICENSE-MPL2",
    ],
    rustc_flags = [
        "--cap-lints=allow",
        "@$(location :slog-2.7.0-build-script-build-args)",
    ],
    visibility = ["PUBLIC"],
)

third_party_rust_binary(
    name = "slog-2.7.0-build-script-build",
    srcs = [
        "vendor/slog-2.7.0/build.rs",
        "vendor/slog-2.7.0/examples/common/mod.rs",
        "vendor/slog-2.7.0/examples/named.rs",
        "vendor/slog-2.7.0/examples/singlethread.rs",
        "vendor/slog-2.7.0/examples/struct-log-self.rs",
        "vendor/slog-2.7.0/src/key/dynamic.rs",
        "vendor/slog-2.7.0/src/key/dynamic_nostd.rs",
        "vendor/slog-2.7.0/src/key/mod.rs",
        "vendor/slog-2.7.0/src/key/static.rs",
        "vendor/slog-2.7.0/src/lib.rs",
        "vendor/slog-2.7.0/src/tests.rs",
    ],
    crate = "build_script_build",
    crate_root = "vendor/slog-2.7.0/build.rs",
    edition = "2015",
    features = [
        "default",
        "max_level_debug",
        "std",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

rust_buildscript_genrule_filter(
    name = "slog-2.7.0-build-script-build-args",
    package_name = "slog",
    buildscript_rule = ":slog-2.7.0-build-script-build",
    cfgs = [],
    features = [
        "default",
        "max_level_debug",
        "std",
    ],
    outfile = "args.txt",
    version = "2.7.0",
)

third_party_rust_library(
    name = "slog-async",
    srcs = ["vendor/slog-async-2.6.0/lib.rs"],
    crate = "slog_async",
    crate_root = "vendor/slog-async-2.6.0/lib.rs",
    edition = "2015",
    features = ["default"],
    licenses = [
        "vendor/slog-async-2.6.0/LICENSE-APACHE",
        "vendor/slog-async-2.6.0/LICENSE-MIT",
        "vendor/slog-async-2.6.0/LICENSE-MPL2",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = ["PUBLIC"],
    deps = [
        ":crossbeam-channel-0.5.1",
        ":slog",
        ":take_mut-0.2.2",
        ":thread_local-1.1.3",
    ],
)

third_party_rust_library(
    name = "slog-term",
    srcs = ["vendor/slog-term-2.8.0/src/lib.rs"],
    crate = "slog_term",
    crate_root = "vendor/slog-term-2.8.0/src/lib.rs",
    edition = "2018",
    licenses = [
        "vendor/slog-term-2.8.0/LICENSE-APACHE",
        "vendor/slog-term-2.8.0/LICENSE-MIT",
        "vendor/slog-term-2.8.0/LICENSE-MPL2",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = ["PUBLIC"],
    deps = [
        ":atty-0.2.14",
        ":chrono-0.4.19",
        ":slog",
        ":term-0.7.0",
        ":thread_local-1.1.3",
    ],
)

third_party_rust_library(
    name = "slog_glog_fmt",
    srcs = [
        "vendor/slog_glog_fmt-0.1.3/src/collector_serializer.rs",
        "vendor/slog_glog_fmt-0.1.3/src/glog_format.rs",
        "vendor/slog_glog_fmt-0.1.3/src/kv_categorizer.rs",
        "vendor/slog_glog_fmt-0.1.3/src/kv_defaults.rs",
        "vendor/slog_glog_fmt-0.1.3/src/lib.rs",
    ],
    crate = "slog_glog_fmt",
    crate_root = "vendor/slog_glog_fmt-0.1.3/src/lib.rs",
    edition = "2018",
    licenses = [
        "vendor/slog_glog_fmt-0.1.3/LICENSE-APACHE",
        "vendor/slog_glog_fmt-0.1.3/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = ["PUBLIC"],
    deps = [
        ":anyhow",
        ":chrono-0.4.19",
        ":fb_failure_ext-0.1.3",
        ":hostname-0.3.1",
        ":itertools-0.8.2",
        ":nix-0.17.0",
        ":slog",
        ":slog-term",
    ],
)

third_party_rust_binary(
    name = "slog_glog_fmt-slog_glog_fmt_example",
    srcs = ["vendor/slog_glog_fmt-0.1.3/example/main.rs"],
    crate = "slog_glog_fmt_example",
    crate_root = "vendor/slog_glog_fmt-0.1.3/example/main.rs",
    edition = "2018",
    licenses = [
        "vendor/slog_glog_fmt-0.1.3/LICENSE-APACHE",
        "vendor/slog_glog_fmt-0.1.3/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = ["PUBLIC"],
    deps = [
        ":anyhow",
        ":chrono-0.4.19",
        ":fb_failure_ext-0.1.3",
        ":hostname-0.3.1",
        ":itertools-0.8.2",
        ":nix-0.17.0",
        ":slog",
        ":slog-term",
        ":slog_glog_fmt",
    ],
)

third_party_rust_library(
    name = "smallvec-1.6.1",
    srcs = [
        "vendor/smallvec-1.6.1/src/lib.rs",
        "vendor/smallvec-1.6.1/src/specialization.rs",
        "vendor/smallvec-1.6.1/src/tests.rs",
    ],
    crate = "smallvec",
    crate_root = "vendor/smallvec-1.6.1/src/lib.rs",
    edition = "2018",
    licenses = [
        "vendor/smallvec-1.6.1/LICENSE-APACHE",
        "vendor/smallvec-1.6.1/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

third_party_rust_library(
    name = "socket2-0.4.0",
    srcs = [
        "vendor/socket2-0.4.0/src/lib.rs",
        "vendor/socket2-0.4.0/src/sockaddr.rs",
        "vendor/socket2-0.4.0/src/socket.rs",
        "vendor/socket2-0.4.0/src/sockref.rs",
        "vendor/socket2-0.4.0/src/sys/unix.rs",
        "vendor/socket2-0.4.0/src/sys/windows.rs",
    ],
    crate = "socket2",
    crate_root = "vendor/socket2-0.4.0/src/lib.rs",
    edition = "2018",
    licenses = [
        "vendor/socket2-0.4.0/LICENSE-APACHE",
        "vendor/socket2-0.4.0/LICENSE-MIT",
    ],
    platform = {
        "linux-x86_64": {
            "deps": [":libc-0.2.97"],
        },
    },
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

third_party_rust_library(
    name = "spin-0.5.2",
    srcs = [
        "vendor/spin-0.5.2/src/lib.rs",
        "vendor/spin-0.5.2/src/mutex.rs",
        "vendor/spin-0.5.2/src/once.rs",
        "vendor/spin-0.5.2/src/rw_lock.rs",
    ],
    crate = "spin",
    crate_root = "vendor/spin-0.5.2/src/lib.rs",
    edition = "2015",
    licenses = ["vendor/spin-0.5.2/LICENSE"],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

third_party_rust_library(
    name = "strsim-0.8.0",
    srcs = ["vendor/strsim-0.8.0/src/lib.rs"],
    crate = "strsim",
    crate_root = "vendor/strsim-0.8.0/src/lib.rs",
    edition = "2015",
    licenses = ["vendor/strsim-0.8.0/LICENSE"],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

third_party_rust_library(
    name = "structopt",
    srcs = ["vendor/structopt-0.3.21/src/lib.rs"],
    crate = "structopt",
    crate_root = "vendor/structopt-0.3.21/src/lib.rs",
    edition = "2018",
    features = ["default"],
    licenses = [
        "vendor/structopt-0.3.21/LICENSE-APACHE",
        "vendor/structopt-0.3.21/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = ["PUBLIC"],
    deps = [
        ":clap-2.33.3",
        ":lazy_static-1.4.0",
        ":structopt-derive-0.4.14",
    ],
)

third_party_rust_library(
    name = "structopt-derive-0.4.14",
    srcs = [
        "vendor/structopt-derive-0.4.14/src/attrs.rs",
        "vendor/structopt-derive-0.4.14/src/doc_comments.rs",
        "vendor/structopt-derive-0.4.14/src/lib.rs",
        "vendor/structopt-derive-0.4.14/src/parse.rs",
        "vendor/structopt-derive-0.4.14/src/spanned.rs",
        "vendor/structopt-derive-0.4.14/src/ty.rs",
    ],
    crate = "structopt_derive",
    crate_root = "vendor/structopt-derive-0.4.14/src/lib.rs",
    edition = "2018",
    licenses = [
        "vendor/structopt-derive-0.4.14/LICENSE-APACHE",
        "vendor/structopt-derive-0.4.14/LICENSE-MIT",
    ],
    proc_macro = True,
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [
        ":heck-0.3.3",
        ":proc-macro-error-1.0.4",
        ":proc-macro2-1.0.27",
        ":quote-1.0.9",
        ":syn-1.0.73",
    ],
)

third_party_rust_library(
    name = "syn-1.0.73",
    srcs = [
        "vendor/syn-1.0.73/src/attr.rs",
        "vendor/syn-1.0.73/src/await.rs",
        "vendor/syn-1.0.73/src/bigint.rs",
        "vendor/syn-1.0.73/src/buffer.rs",
        "vendor/syn-1.0.73/src/custom_keyword.rs",
        "vendor/syn-1.0.73/src/custom_punctuation.rs",
        "vendor/syn-1.0.73/src/data.rs",
        "vendor/syn-1.0.73/src/derive.rs",
        "vendor/syn-1.0.73/src/discouraged.rs",
        "vendor/syn-1.0.73/src/error.rs",
        "vendor/syn-1.0.73/src/export.rs",
        "vendor/syn-1.0.73/src/expr.rs",
        "vendor/syn-1.0.73/src/ext.rs",
        "vendor/syn-1.0.73/src/file.rs",
        "vendor/syn-1.0.73/src/gen/clone.rs",
        "vendor/syn-1.0.73/src/gen/debug.rs",
        "vendor/syn-1.0.73/src/gen/eq.rs",
        "vendor/syn-1.0.73/src/gen/fold.rs",
        "vendor/syn-1.0.73/src/gen/hash.rs",
        "vendor/syn-1.0.73/src/gen/visit.rs",
        "vendor/syn-1.0.73/src/gen/visit_mut.rs",
        "vendor/syn-1.0.73/src/gen_helper.rs",
        "vendor/syn-1.0.73/src/generics.rs",
        "vendor/syn-1.0.73/src/group.rs",
        "vendor/syn-1.0.73/src/ident.rs",
        "vendor/syn-1.0.73/src/item.rs",
        "vendor/syn-1.0.73/src/lib.rs",
        "vendor/syn-1.0.73/src/lifetime.rs",
        "vendor/syn-1.0.73/src/lit.rs",
        "vendor/syn-1.0.73/src/lookahead.rs",
        "vendor/syn-1.0.73/src/mac.rs",
        "vendor/syn-1.0.73/src/macros.rs",
        "vendor/syn-1.0.73/src/op.rs",
        "vendor/syn-1.0.73/src/parse.rs",
        "vendor/syn-1.0.73/src/parse_macro_input.rs",
        "vendor/syn-1.0.73/src/parse_quote.rs",
        "vendor/syn-1.0.73/src/pat.rs",
        "vendor/syn-1.0.73/src/path.rs",
        "vendor/syn-1.0.73/src/print.rs",
        "vendor/syn-1.0.73/src/punctuated.rs",
        "vendor/syn-1.0.73/src/reserved.rs",
        "vendor/syn-1.0.73/src/sealed.rs",
        "vendor/syn-1.0.73/src/span.rs",
        "vendor/syn-1.0.73/src/spanned.rs",
        "vendor/syn-1.0.73/src/stmt.rs",
        "vendor/syn-1.0.73/src/thread.rs",
        "vendor/syn-1.0.73/src/token.rs",
        "vendor/syn-1.0.73/src/tt.rs",
        "vendor/syn-1.0.73/src/ty.rs",
        "vendor/syn-1.0.73/src/verbatim.rs",
        "vendor/syn-1.0.73/src/whitespace.rs",
    ],
    crate = "syn",
    crate_root = "vendor/syn-1.0.73/src/lib.rs",
    edition = "2018",
    features = [
        "clone-impls",
        "default",
        "derive",
        "extra-traits",
        "full",
        "parsing",
        "printing",
        "proc-macro",
        "quote",
        "visit",
        "visit-mut",
    ],
    licenses = [
        "vendor/syn-1.0.73/LICENSE-APACHE",
        "vendor/syn-1.0.73/LICENSE-MIT",
    ],
    rustc_flags = [
        "--cap-lints=allow",
        "@$(location :syn-1.0.73-build-script-build-args)",
    ],
    visibility = [],
    deps = [
        ":proc-macro2-1.0.27",
        ":quote-1.0.9",
        ":unicode-xid-0.2.2",
    ],
)

third_party_rust_binary(
    name = "syn-1.0.73-build-script-build",
    srcs = ["vendor/syn-1.0.73/build.rs"],
    crate = "build_script_build",
    crate_root = "vendor/syn-1.0.73/build.rs",
    edition = "2018",
    features = [
        "clone-impls",
        "default",
        "derive",
        "extra-traits",
        "full",
        "parsing",
        "printing",
        "proc-macro",
        "quote",
        "visit",
        "visit-mut",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

rust_buildscript_genrule_filter(
    name = "syn-1.0.73-build-script-build-args",
    package_name = "syn",
    buildscript_rule = ":syn-1.0.73-build-script-build",
    cfgs = [],
    features = [
        "clone-impls",
        "default",
        "derive",
        "extra-traits",
        "full",
        "parsing",
        "printing",
        "proc-macro",
        "quote",
        "visit",
        "visit-mut",
    ],
    outfile = "args.txt",
    version = "1.0.73",
)

third_party_rust_library(
    name = "synstructure-0.12.4",
    srcs = [
        "vendor/synstructure-0.12.4/src/lib.rs",
        "vendor/synstructure-0.12.4/src/macros.rs",
    ],
    crate = "synstructure",
    crate_root = "vendor/synstructure-0.12.4/src/lib.rs",
    edition = "2018",
    features = [
        "default",
        "proc-macro",
    ],
    licenses = ["vendor/synstructure-0.12.4/LICENSE"],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [
        ":proc-macro2-1.0.27",
        ":quote-1.0.9",
        ":syn-1.0.73",
        ":unicode-xid-0.2.2",
    ],
)

third_party_rust_library(
    name = "take_mut-0.2.2",
    srcs = [
        "vendor/take_mut-0.2.2/src/lib.rs",
        "vendor/take_mut-0.2.2/src/scoped.rs",
    ],
    crate = "take_mut",
    crate_root = "vendor/take_mut-0.2.2/src/lib.rs",
    edition = "2015",
    licenses = ["vendor/take_mut-0.2.2/LICENSE"],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

third_party_rust_library(
    name = "tempfile-3.2.0",
    srcs = [
        "vendor/tempfile-3.2.0/src/dir.rs",
        "vendor/tempfile-3.2.0/src/error.rs",
        "vendor/tempfile-3.2.0/src/file/imp/mod.rs",
        "vendor/tempfile-3.2.0/src/file/imp/other.rs",
        "vendor/tempfile-3.2.0/src/file/imp/unix.rs",
        "vendor/tempfile-3.2.0/src/file/imp/windows.rs",
        "vendor/tempfile-3.2.0/src/file/mod.rs",
        "vendor/tempfile-3.2.0/src/lib.rs",
        "vendor/tempfile-3.2.0/src/spooled.rs",
        "vendor/tempfile-3.2.0/src/util.rs",
    ],
    crate = "tempfile",
    crate_root = "vendor/tempfile-3.2.0/src/lib.rs",
    edition = "2018",
    licenses = [
        "vendor/tempfile-3.2.0/LICENSE-APACHE",
        "vendor/tempfile-3.2.0/LICENSE-MIT",
    ],
    platform = {
        "linux-x86_64": {
            "deps": [":libc-0.2.97"],
        },
    },
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [
        ":cfg-if-1.0.0",
        ":rand-0.8.3",
        ":remove_dir_all-0.5.3",
    ],
)

third_party_rust_library(
    name = "term-0.7.0",
    srcs = [
        "vendor/term-0.7.0/src/lib.rs",
        "vendor/term-0.7.0/src/terminfo/mod.rs",
        "vendor/term-0.7.0/src/terminfo/parm.rs",
        "vendor/term-0.7.0/src/terminfo/parser/compiled.rs",
        "vendor/term-0.7.0/src/terminfo/parser/names.rs",
        "vendor/term-0.7.0/src/terminfo/searcher.rs",
        "vendor/term-0.7.0/src/win.rs",
    ],
    crate = "term",
    crate_root = "vendor/term-0.7.0/src/lib.rs",
    edition = "2018",
    features = ["default"],
    licenses = [
        "vendor/term-0.7.0/LICENSE-APACHE",
        "vendor/term-0.7.0/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [":dirs-next-2.0.0"],
)

third_party_rust_library(
    name = "textwrap-0.11.0",
    srcs = [
        "vendor/textwrap-0.11.0/src/indentation.rs",
        "vendor/textwrap-0.11.0/src/lib.rs",
        "vendor/textwrap-0.11.0/src/splitting.rs",
    ],
    crate = "textwrap",
    crate_root = "vendor/textwrap-0.11.0/src/lib.rs",
    edition = "2015",
    licenses = ["vendor/textwrap-0.11.0/LICENSE"],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [":unicode-width-0.1.8"],
)

third_party_rust_library(
    name = "thiserror-1.0.25",
    srcs = [
        "vendor/thiserror-1.0.25/src/aserror.rs",
        "vendor/thiserror-1.0.25/src/display.rs",
        "vendor/thiserror-1.0.25/src/lib.rs",
    ],
    crate = "thiserror",
    crate_root = "vendor/thiserror-1.0.25/src/lib.rs",
    edition = "2018",
    licenses = [
        "vendor/thiserror-1.0.25/LICENSE-APACHE",
        "vendor/thiserror-1.0.25/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [":thiserror-impl-1.0.25"],
)

third_party_rust_library(
    name = "thiserror-impl-1.0.25",
    srcs = [
        "vendor/thiserror-impl-1.0.25/src/ast.rs",
        "vendor/thiserror-impl-1.0.25/src/attr.rs",
        "vendor/thiserror-impl-1.0.25/src/expand.rs",
        "vendor/thiserror-impl-1.0.25/src/fmt.rs",
        "vendor/thiserror-impl-1.0.25/src/lib.rs",
        "vendor/thiserror-impl-1.0.25/src/prop.rs",
        "vendor/thiserror-impl-1.0.25/src/valid.rs",
    ],
    crate = "thiserror_impl",
    crate_root = "vendor/thiserror-impl-1.0.25/src/lib.rs",
    edition = "2018",
    licenses = [
        "vendor/thiserror-impl-1.0.25/LICENSE-APACHE",
        "vendor/thiserror-impl-1.0.25/LICENSE-MIT",
    ],
    proc_macro = True,
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [
        ":proc-macro2-1.0.27",
        ":quote-1.0.9",
        ":syn-1.0.73",
    ],
)

third_party_rust_library(
    name = "thread_local-1.1.3",
    srcs = [
        "vendor/thread_local-1.1.3/src/cached.rs",
        "vendor/thread_local-1.1.3/src/lib.rs",
        "vendor/thread_local-1.1.3/src/thread_id.rs",
        "vendor/thread_local-1.1.3/src/unreachable.rs",
    ],
    crate = "thread_local",
    crate_root = "vendor/thread_local-1.1.3/src/lib.rs",
    edition = "2018",
    licenses = [
        "vendor/thread_local-1.1.3/LICENSE-APACHE",
        "vendor/thread_local-1.1.3/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [":once_cell"],
)

third_party_rust_library(
    name = "time-0.1.43",
    srcs = [
        "vendor/time-0.1.43/src/display.rs",
        "vendor/time-0.1.43/src/duration.rs",
        "vendor/time-0.1.43/src/lib.rs",
        "vendor/time-0.1.43/src/parse.rs",
        "vendor/time-0.1.43/src/sys.rs",
    ],
    crate = "time",
    crate_root = "vendor/time-0.1.43/src/lib.rs",
    edition = "2015",
    licenses = [
        "vendor/time-0.1.43/LICENSE-APACHE",
        "vendor/time-0.1.43/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [":libc-0.2.97"],
)

third_party_rust_library(
    name = "tinyvec-1.2.0",
    srcs = [
        "vendor/tinyvec-1.2.0/src/array.rs",
        "vendor/tinyvec-1.2.0/src/array/const_generic_impl.rs",
        "vendor/tinyvec-1.2.0/src/array/generated_impl.rs",
        "vendor/tinyvec-1.2.0/src/arrayvec.rs",
        "vendor/tinyvec-1.2.0/src/arrayvec_drain.rs",
        "vendor/tinyvec-1.2.0/src/lib.rs",
        "vendor/tinyvec-1.2.0/src/slicevec.rs",
        "vendor/tinyvec-1.2.0/src/tinyvec.rs",
    ],
    crate = "tinyvec",
    crate_root = "vendor/tinyvec-1.2.0/src/lib.rs",
    edition = "2018",
    features = [
        "alloc",
        "default",
        "tinyvec_macros",
    ],
    licenses = [
        "vendor/tinyvec-1.2.0/LICENSE-APACHE.md",
        "vendor/tinyvec-1.2.0/LICENSE-MIT.md",
        "vendor/tinyvec-1.2.0/LICENSE-ZLIB.md",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [":tinyvec_macros-0.1.0"],
)

third_party_rust_library(
    name = "tinyvec_macros-0.1.0",
    srcs = ["vendor/tinyvec_macros-0.1.0/src/lib.rs"],
    crate = "tinyvec_macros",
    crate_root = "vendor/tinyvec_macros-0.1.0/src/lib.rs",
    edition = "2018",
    licenses = ["vendor/tinyvec_macros-0.1.0/LICENSE"],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

third_party_rust_library(
    name = "tokio",
    srcs = [
        "vendor/tokio-1.6.1/src/blocking.rs",
        "vendor/tokio-1.6.1/src/coop.rs",
        "vendor/tokio-1.6.1/src/fs/canonicalize.rs",
        "vendor/tokio-1.6.1/src/fs/copy.rs",
        "vendor/tokio-1.6.1/src/fs/create_dir.rs",
        "vendor/tokio-1.6.1/src/fs/create_dir_all.rs",
        "vendor/tokio-1.6.1/src/fs/dir_builder.rs",
        "vendor/tokio-1.6.1/src/fs/file.rs",
        "vendor/tokio-1.6.1/src/fs/hard_link.rs",
        "vendor/tokio-1.6.1/src/fs/metadata.rs",
        "vendor/tokio-1.6.1/src/fs/mod.rs",
        "vendor/tokio-1.6.1/src/fs/open_options.rs",
        "vendor/tokio-1.6.1/src/fs/read.rs",
        "vendor/tokio-1.6.1/src/fs/read_dir.rs",
        "vendor/tokio-1.6.1/src/fs/read_link.rs",
        "vendor/tokio-1.6.1/src/fs/read_to_string.rs",
        "vendor/tokio-1.6.1/src/fs/remove_dir.rs",
        "vendor/tokio-1.6.1/src/fs/remove_dir_all.rs",
        "vendor/tokio-1.6.1/src/fs/remove_file.rs",
        "vendor/tokio-1.6.1/src/fs/rename.rs",
        "vendor/tokio-1.6.1/src/fs/set_permissions.rs",
        "vendor/tokio-1.6.1/src/fs/symlink.rs",
        "vendor/tokio-1.6.1/src/fs/symlink_dir.rs",
        "vendor/tokio-1.6.1/src/fs/symlink_file.rs",
        "vendor/tokio-1.6.1/src/fs/symlink_metadata.rs",
        "vendor/tokio-1.6.1/src/fs/write.rs",
        "vendor/tokio-1.6.1/src/future/block_on.rs",
        "vendor/tokio-1.6.1/src/future/maybe_done.rs",
        "vendor/tokio-1.6.1/src/future/mod.rs",
        "vendor/tokio-1.6.1/src/future/poll_fn.rs",
        "vendor/tokio-1.6.1/src/future/ready.rs",
        "vendor/tokio-1.6.1/src/future/try_join.rs",
        "vendor/tokio-1.6.1/src/io/async_buf_read.rs",
        "vendor/tokio-1.6.1/src/io/async_fd.rs",
        "vendor/tokio-1.6.1/src/io/async_read.rs",
        "vendor/tokio-1.6.1/src/io/async_seek.rs",
        "vendor/tokio-1.6.1/src/io/async_write.rs",
        "vendor/tokio-1.6.1/src/io/blocking.rs",
        "vendor/tokio-1.6.1/src/io/driver/interest.rs",
        "vendor/tokio-1.6.1/src/io/driver/mod.rs",
        "vendor/tokio-1.6.1/src/io/driver/platform.rs",
        "vendor/tokio-1.6.1/src/io/driver/ready.rs",
        "vendor/tokio-1.6.1/src/io/driver/registration.rs",
        "vendor/tokio-1.6.1/src/io/driver/scheduled_io.rs",
        "vendor/tokio-1.6.1/src/io/mod.rs",
        "vendor/tokio-1.6.1/src/io/poll_evented.rs",
        "vendor/tokio-1.6.1/src/io/read_buf.rs",
        "vendor/tokio-1.6.1/src/io/seek.rs",
        "vendor/tokio-1.6.1/src/io/split.rs",
        "vendor/tokio-1.6.1/src/io/stderr.rs",
        "vendor/tokio-1.6.1/src/io/stdin.rs",
        "vendor/tokio-1.6.1/src/io/stdio_common.rs",
        "vendor/tokio-1.6.1/src/io/stdout.rs",
        "vendor/tokio-1.6.1/src/io/util/async_buf_read_ext.rs",
        "vendor/tokio-1.6.1/src/io/util/async_read_ext.rs",
        "vendor/tokio-1.6.1/src/io/util/async_seek_ext.rs",
        "vendor/tokio-1.6.1/src/io/util/async_write_ext.rs",
        "vendor/tokio-1.6.1/src/io/util/buf_reader.rs",
        "vendor/tokio-1.6.1/src/io/util/buf_stream.rs",
        "vendor/tokio-1.6.1/src/io/util/buf_writer.rs",
        "vendor/tokio-1.6.1/src/io/util/chain.rs",
        "vendor/tokio-1.6.1/src/io/util/copy.rs",
        "vendor/tokio-1.6.1/src/io/util/copy_bidirectional.rs",
        "vendor/tokio-1.6.1/src/io/util/copy_buf.rs",
        "vendor/tokio-1.6.1/src/io/util/empty.rs",
        "vendor/tokio-1.6.1/src/io/util/flush.rs",
        "vendor/tokio-1.6.1/src/io/util/lines.rs",
        "vendor/tokio-1.6.1/src/io/util/mem.rs",
        "vendor/tokio-1.6.1/src/io/util/mod.rs",
        "vendor/tokio-1.6.1/src/io/util/read.rs",
        "vendor/tokio-1.6.1/src/io/util/read_buf.rs",
        "vendor/tokio-1.6.1/src/io/util/read_exact.rs",
        "vendor/tokio-1.6.1/src/io/util/read_int.rs",
        "vendor/tokio-1.6.1/src/io/util/read_line.rs",
        "vendor/tokio-1.6.1/src/io/util/read_to_end.rs",
        "vendor/tokio-1.6.1/src/io/util/read_to_string.rs",
        "vendor/tokio-1.6.1/src/io/util/read_until.rs",
        "vendor/tokio-1.6.1/src/io/util/repeat.rs",
        "vendor/tokio-1.6.1/src/io/util/shutdown.rs",
        "vendor/tokio-1.6.1/src/io/util/sink.rs",
        "vendor/tokio-1.6.1/src/io/util/split.rs",
        "vendor/tokio-1.6.1/src/io/util/take.rs",
        "vendor/tokio-1.6.1/src/io/util/vec_with_initialized.rs",
        "vendor/tokio-1.6.1/src/io/util/write.rs",
        "vendor/tokio-1.6.1/src/io/util/write_all.rs",
        "vendor/tokio-1.6.1/src/io/util/write_all_buf.rs",
        "vendor/tokio-1.6.1/src/io/util/write_buf.rs",
        "vendor/tokio-1.6.1/src/io/util/write_int.rs",
        "vendor/tokio-1.6.1/src/io/util/write_vectored.rs",
        "vendor/tokio-1.6.1/src/lib.rs",
        "vendor/tokio-1.6.1/src/loom/mocked.rs",
        "vendor/tokio-1.6.1/src/loom/mod.rs",
        "vendor/tokio-1.6.1/src/loom/std/atomic_ptr.rs",
        "vendor/tokio-1.6.1/src/loom/std/atomic_u16.rs",
        "vendor/tokio-1.6.1/src/loom/std/atomic_u32.rs",
        "vendor/tokio-1.6.1/src/loom/std/atomic_u64.rs",
        "vendor/tokio-1.6.1/src/loom/std/atomic_u8.rs",
        "vendor/tokio-1.6.1/src/loom/std/atomic_usize.rs",
        "vendor/tokio-1.6.1/src/loom/std/mod.rs",
        "vendor/tokio-1.6.1/src/loom/std/mutex.rs",
        "vendor/tokio-1.6.1/src/loom/std/parking_lot.rs",
        "vendor/tokio-1.6.1/src/loom/std/unsafe_cell.rs",
        "vendor/tokio-1.6.1/src/macros/cfg.rs",
        "vendor/tokio-1.6.1/src/macros/join.rs",
        "vendor/tokio-1.6.1/src/macros/loom.rs",
        "vendor/tokio-1.6.1/src/macros/mod.rs",
        "vendor/tokio-1.6.1/src/macros/pin.rs",
        "vendor/tokio-1.6.1/src/macros/ready.rs",
        "vendor/tokio-1.6.1/src/macros/scoped_tls.rs",
        "vendor/tokio-1.6.1/src/macros/select.rs",
        "vendor/tokio-1.6.1/src/macros/support.rs",
        "vendor/tokio-1.6.1/src/macros/thread_local.rs",
        "vendor/tokio-1.6.1/src/macros/try_join.rs",
        "vendor/tokio-1.6.1/src/net/addr.rs",
        "vendor/tokio-1.6.1/src/net/lookup_host.rs",
        "vendor/tokio-1.6.1/src/net/mod.rs",
        "vendor/tokio-1.6.1/src/net/tcp/listener.rs",
        "vendor/tokio-1.6.1/src/net/tcp/mod.rs",
        "vendor/tokio-1.6.1/src/net/tcp/socket.rs",
        "vendor/tokio-1.6.1/src/net/tcp/split.rs",
        "vendor/tokio-1.6.1/src/net/tcp/split_owned.rs",
        "vendor/tokio-1.6.1/src/net/tcp/stream.rs",
        "vendor/tokio-1.6.1/src/net/udp.rs",
        "vendor/tokio-1.6.1/src/net/unix/datagram/mod.rs",
        "vendor/tokio-1.6.1/src/net/unix/datagram/socket.rs",
        "vendor/tokio-1.6.1/src/net/unix/listener.rs",
        "vendor/tokio-1.6.1/src/net/unix/mod.rs",
        "vendor/tokio-1.6.1/src/net/unix/socketaddr.rs",
        "vendor/tokio-1.6.1/src/net/unix/split.rs",
        "vendor/tokio-1.6.1/src/net/unix/split_owned.rs",
        "vendor/tokio-1.6.1/src/net/unix/stream.rs",
        "vendor/tokio-1.6.1/src/net/unix/ucred.rs",
        "vendor/tokio-1.6.1/src/park/either.rs",
        "vendor/tokio-1.6.1/src/park/mod.rs",
        "vendor/tokio-1.6.1/src/park/thread.rs",
        "vendor/tokio-1.6.1/src/process/kill.rs",
        "vendor/tokio-1.6.1/src/process/mod.rs",
        "vendor/tokio-1.6.1/src/process/unix/driver.rs",
        "vendor/tokio-1.6.1/src/process/unix/mod.rs",
        "vendor/tokio-1.6.1/src/process/unix/orphan.rs",
        "vendor/tokio-1.6.1/src/process/unix/reap.rs",
        "vendor/tokio-1.6.1/src/process/windows.rs",
        "vendor/tokio-1.6.1/src/runtime/basic_scheduler.rs",
        "vendor/tokio-1.6.1/src/runtime/blocking/mod.rs",
        "vendor/tokio-1.6.1/src/runtime/blocking/pool.rs",
        "vendor/tokio-1.6.1/src/runtime/blocking/schedule.rs",
        "vendor/tokio-1.6.1/src/runtime/blocking/shutdown.rs",
        "vendor/tokio-1.6.1/src/runtime/blocking/task.rs",
        "vendor/tokio-1.6.1/src/runtime/builder.rs",
        "vendor/tokio-1.6.1/src/runtime/context.rs",
        "vendor/tokio-1.6.1/src/runtime/driver.rs",
        "vendor/tokio-1.6.1/src/runtime/enter.rs",
        "vendor/tokio-1.6.1/src/runtime/handle.rs",
        "vendor/tokio-1.6.1/src/runtime/mod.rs",
        "vendor/tokio-1.6.1/src/runtime/park.rs",
        "vendor/tokio-1.6.1/src/runtime/queue.rs",
        "vendor/tokio-1.6.1/src/runtime/shell.rs",
        "vendor/tokio-1.6.1/src/runtime/spawner.rs",
        "vendor/tokio-1.6.1/src/runtime/task/core.rs",
        "vendor/tokio-1.6.1/src/runtime/task/error.rs",
        "vendor/tokio-1.6.1/src/runtime/task/harness.rs",
        "vendor/tokio-1.6.1/src/runtime/task/join.rs",
        "vendor/tokio-1.6.1/src/runtime/task/mod.rs",
        "vendor/tokio-1.6.1/src/runtime/task/raw.rs",
        "vendor/tokio-1.6.1/src/runtime/task/stack.rs",
        "vendor/tokio-1.6.1/src/runtime/task/state.rs",
        "vendor/tokio-1.6.1/src/runtime/task/waker.rs",
        "vendor/tokio-1.6.1/src/runtime/tests/loom_basic_scheduler.rs",
        "vendor/tokio-1.6.1/src/runtime/tests/loom_blocking.rs",
        "vendor/tokio-1.6.1/src/runtime/tests/loom_oneshot.rs",
        "vendor/tokio-1.6.1/src/runtime/tests/loom_pool.rs",
        "vendor/tokio-1.6.1/src/runtime/tests/loom_queue.rs",
        "vendor/tokio-1.6.1/src/runtime/tests/mod.rs",
        "vendor/tokio-1.6.1/src/runtime/tests/queue.rs",
        "vendor/tokio-1.6.1/src/runtime/tests/task.rs",
        "vendor/tokio-1.6.1/src/runtime/thread_pool/atomic_cell.rs",
        "vendor/tokio-1.6.1/src/runtime/thread_pool/idle.rs",
        "vendor/tokio-1.6.1/src/runtime/thread_pool/mod.rs",
        "vendor/tokio-1.6.1/src/runtime/thread_pool/worker.rs",
        "vendor/tokio-1.6.1/src/signal/ctrl_c.rs",
        "vendor/tokio-1.6.1/src/signal/mod.rs",
        "vendor/tokio-1.6.1/src/signal/registry.rs",
        "vendor/tokio-1.6.1/src/signal/reusable_box.rs",
        "vendor/tokio-1.6.1/src/signal/unix.rs",
        "vendor/tokio-1.6.1/src/signal/unix/driver.rs",
        "vendor/tokio-1.6.1/src/signal/windows.rs",
        "vendor/tokio-1.6.1/src/sync/barrier.rs",
        "vendor/tokio-1.6.1/src/sync/batch_semaphore.rs",
        "vendor/tokio-1.6.1/src/sync/broadcast.rs",
        "vendor/tokio-1.6.1/src/sync/mod.rs",
        "vendor/tokio-1.6.1/src/sync/mpsc/block.rs",
        "vendor/tokio-1.6.1/src/sync/mpsc/bounded.rs",
        "vendor/tokio-1.6.1/src/sync/mpsc/chan.rs",
        "vendor/tokio-1.6.1/src/sync/mpsc/error.rs",
        "vendor/tokio-1.6.1/src/sync/mpsc/list.rs",
        "vendor/tokio-1.6.1/src/sync/mpsc/mod.rs",
        "vendor/tokio-1.6.1/src/sync/mpsc/unbounded.rs",
        "vendor/tokio-1.6.1/src/sync/mutex.rs",
        "vendor/tokio-1.6.1/src/sync/notify.rs",
        "vendor/tokio-1.6.1/src/sync/once_cell.rs",
        "vendor/tokio-1.6.1/src/sync/oneshot.rs",
        "vendor/tokio-1.6.1/src/sync/rwlock.rs",
        "vendor/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs",
        "vendor/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs",
        "vendor/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs",
        "vendor/tokio-1.6.1/src/sync/rwlock/read_guard.rs",
        "vendor/tokio-1.6.1/src/sync/rwlock/write_guard.rs",
        "vendor/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs",
        "vendor/tokio-1.6.1/src/sync/semaphore.rs",
        "vendor/tokio-1.6.1/src/sync/task/atomic_waker.rs",
        "vendor/tokio-1.6.1/src/sync/task/mod.rs",
        "vendor/tokio-1.6.1/src/sync/tests/atomic_waker.rs",
        "vendor/tokio-1.6.1/src/sync/tests/loom_atomic_waker.rs",
        "vendor/tokio-1.6.1/src/sync/tests/loom_broadcast.rs",
        "vendor/tokio-1.6.1/src/sync/tests/loom_list.rs",
        "vendor/tokio-1.6.1/src/sync/tests/loom_mpsc.rs",
        "vendor/tokio-1.6.1/src/sync/tests/loom_notify.rs",
        "vendor/tokio-1.6.1/src/sync/tests/loom_oneshot.rs",
        "vendor/tokio-1.6.1/src/sync/tests/loom_rwlock.rs",
        "vendor/tokio-1.6.1/src/sync/tests/loom_semaphore_batch.rs",
        "vendor/tokio-1.6.1/src/sync/tests/loom_watch.rs",
        "vendor/tokio-1.6.1/src/sync/tests/mod.rs",
        "vendor/tokio-1.6.1/src/sync/tests/semaphore_batch.rs",
        "vendor/tokio-1.6.1/src/sync/watch.rs",
        "vendor/tokio-1.6.1/src/task/blocking.rs",
        "vendor/tokio-1.6.1/src/task/local.rs",
        "vendor/tokio-1.6.1/src/task/mod.rs",
        "vendor/tokio-1.6.1/src/task/spawn.rs",
        "vendor/tokio-1.6.1/src/task/task_local.rs",
        "vendor/tokio-1.6.1/src/task/unconstrained.rs",
        "vendor/tokio-1.6.1/src/task/yield_now.rs",
        "vendor/tokio-1.6.1/src/time/clock.rs",
        "vendor/tokio-1.6.1/src/time/driver/entry.rs",
        "vendor/tokio-1.6.1/src/time/driver/handle.rs",
        "vendor/tokio-1.6.1/src/time/driver/mod.rs",
        "vendor/tokio-1.6.1/src/time/driver/sleep.rs",
        "vendor/tokio-1.6.1/src/time/driver/tests/mod.rs",
        "vendor/tokio-1.6.1/src/time/driver/wheel/level.rs",
        "vendor/tokio-1.6.1/src/time/driver/wheel/mod.rs",
        "vendor/tokio-1.6.1/src/time/driver/wheel/stack.rs",
        "vendor/tokio-1.6.1/src/time/error.rs",
        "vendor/tokio-1.6.1/src/time/instant.rs",
        "vendor/tokio-1.6.1/src/time/interval.rs",
        "vendor/tokio-1.6.1/src/time/mod.rs",
        "vendor/tokio-1.6.1/src/time/tests/mod.rs",
        "vendor/tokio-1.6.1/src/time/tests/test_sleep.rs",
        "vendor/tokio-1.6.1/src/time/timeout.rs",
        "vendor/tokio-1.6.1/src/util/bit.rs",
        "vendor/tokio-1.6.1/src/util/error.rs",
        "vendor/tokio-1.6.1/src/util/linked_list.rs",
        "vendor/tokio-1.6.1/src/util/mod.rs",
        "vendor/tokio-1.6.1/src/util/pad.rs",
        "vendor/tokio-1.6.1/src/util/rand.rs",
        "vendor/tokio-1.6.1/src/util/slab.rs",
        "vendor/tokio-1.6.1/src/util/trace.rs",
        "vendor/tokio-1.6.1/src/util/try_lock.rs",
        "vendor/tokio-1.6.1/src/util/wake.rs",
    ],
    crate = "tokio",
    crate_root = "vendor/tokio-1.6.1/src/lib.rs",
    edition = "2018",
    features = [
        "bytes",
        "default",
        "fs",
        "full",
        "io-std",
        "io-util",
        "libc",
        "macros",
        "memchr",
        "mio",
        "net",
        "num_cpus",
        "once_cell",
        "parking_lot",
        "process",
        "rt",
        "rt-multi-thread",
        "signal",
        "signal-hook-registry",
        "sync",
        "time",
        "tokio-macros",
        "tokio_track_caller",
        "winapi",
    ],
    licenses = ["vendor/tokio-1.6.1/LICENSE"],
    platform = {
        "linux-x86_64": {
            "deps": [
                ":libc-0.2.97",
                ":signal-hook-registry-1.4.0",
            ],
        },
    },
    rustc_flags = ["--cap-lints=allow"],
    visibility = ["PUBLIC"],
    deps = [
        ":bytes",
        ":memchr-2.4.0",
        ":mio-0.7.11",
        ":num_cpus-1.13.0",
        ":once_cell",
        ":parking_lot-0.11.1",
        ":pin-project-lite-0.2.6",
        ":tokio-macros-1.2.0",
    ],
)

third_party_rust_library(
    name = "tokio-macros-1.2.0",
    srcs = [
        "vendor/tokio-macros-1.2.0/src/entry.rs",
        "vendor/tokio-macros-1.2.0/src/lib.rs",
        "vendor/tokio-macros-1.2.0/src/select.rs",
    ],
    crate = "tokio_macros",
    crate_root = "vendor/tokio-macros-1.2.0/src/lib.rs",
    edition = "2018",
    licenses = ["vendor/tokio-macros-1.2.0/LICENSE"],
    proc_macro = True,
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [
        ":proc-macro2-1.0.27",
        ":quote-1.0.9",
        ":syn-1.0.73",
    ],
)

third_party_rust_library(
    name = "tokio-native-tls-0.3.0",
    srcs = ["vendor/tokio-native-tls-0.3.0/src/lib.rs"],
    crate = "tokio_native_tls",
    crate_root = "vendor/tokio-native-tls-0.3.0/src/lib.rs",
    edition = "2018",
    licenses = ["vendor/tokio-native-tls-0.3.0/LICENSE"],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [
        ":native-tls-0.2.7",
        ":tokio",
    ],
)

third_party_rust_library(
    name = "tokio-rustls-0.22.0",
    srcs = [
        "vendor/tokio-rustls-0.22.0/README.md",
        "vendor/tokio-rustls-0.22.0/src/client.rs",
        "vendor/tokio-rustls-0.22.0/src/common/handshake.rs",
        "vendor/tokio-rustls-0.22.0/src/common/mod.rs",
        "vendor/tokio-rustls-0.22.0/src/common/test_stream.rs",
        "vendor/tokio-rustls-0.22.0/src/lib.rs",
        "vendor/tokio-rustls-0.22.0/src/server.rs",
        "vendor/tokio-rustls-0.22.0/tests/end.cert",
        "vendor/tokio-rustls-0.22.0/tests/end.chain",
        "vendor/tokio-rustls-0.22.0/tests/end.rsa",
    ],
    crate = "tokio_rustls",
    crate_root = "vendor/tokio-rustls-0.22.0/src/lib.rs",
    edition = "2018",
    licenses = [
        "vendor/tokio-rustls-0.22.0/LICENSE-APACHE",
        "vendor/tokio-rustls-0.22.0/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [
        ":rustls",
        ":tokio",
        ":webpki-0.21.4",
    ],
)

third_party_rust_library(
    name = "tokio-stream",
    srcs = [
        "vendor/tokio-stream-0.1.6/src/empty.rs",
        "vendor/tokio-stream-0.1.6/src/iter.rs",
        "vendor/tokio-stream-0.1.6/src/lib.rs",
        "vendor/tokio-stream-0.1.6/src/macros.rs",
        "vendor/tokio-stream-0.1.6/src/once.rs",
        "vendor/tokio-stream-0.1.6/src/pending.rs",
        "vendor/tokio-stream-0.1.6/src/stream_ext.rs",
        "vendor/tokio-stream-0.1.6/src/stream_ext/all.rs",
        "vendor/tokio-stream-0.1.6/src/stream_ext/any.rs",
        "vendor/tokio-stream-0.1.6/src/stream_ext/chain.rs",
        "vendor/tokio-stream-0.1.6/src/stream_ext/collect.rs",
        "vendor/tokio-stream-0.1.6/src/stream_ext/filter.rs",
        "vendor/tokio-stream-0.1.6/src/stream_ext/filter_map.rs",
        "vendor/tokio-stream-0.1.6/src/stream_ext/fold.rs",
        "vendor/tokio-stream-0.1.6/src/stream_ext/fuse.rs",
        "vendor/tokio-stream-0.1.6/src/stream_ext/map.rs",
        "vendor/tokio-stream-0.1.6/src/stream_ext/merge.rs",
        "vendor/tokio-stream-0.1.6/src/stream_ext/next.rs",
        "vendor/tokio-stream-0.1.6/src/stream_ext/skip.rs",
        "vendor/tokio-stream-0.1.6/src/stream_ext/skip_while.rs",
        "vendor/tokio-stream-0.1.6/src/stream_ext/take.rs",
        "vendor/tokio-stream-0.1.6/src/stream_ext/take_while.rs",
        "vendor/tokio-stream-0.1.6/src/stream_ext/throttle.rs",
        "vendor/tokio-stream-0.1.6/src/stream_ext/timeout.rs",
        "vendor/tokio-stream-0.1.6/src/stream_ext/try_next.rs",
        "vendor/tokio-stream-0.1.6/src/stream_map.rs",
        "vendor/tokio-stream-0.1.6/src/wrappers.rs",
        "vendor/tokio-stream-0.1.6/src/wrappers/broadcast.rs",
        "vendor/tokio-stream-0.1.6/src/wrappers/interval.rs",
        "vendor/tokio-stream-0.1.6/src/wrappers/lines.rs",
        "vendor/tokio-stream-0.1.6/src/wrappers/mpsc_bounded.rs",
        "vendor/tokio-stream-0.1.6/src/wrappers/mpsc_unbounded.rs",
        "vendor/tokio-stream-0.1.6/src/wrappers/read_dir.rs",
        "vendor/tokio-stream-0.1.6/src/wrappers/signal_unix.rs",
        "vendor/tokio-stream-0.1.6/src/wrappers/signal_windows.rs",
        "vendor/tokio-stream-0.1.6/src/wrappers/split.rs",
        "vendor/tokio-stream-0.1.6/src/wrappers/tcp_listener.rs",
        "vendor/tokio-stream-0.1.6/src/wrappers/unix_listener.rs",
        "vendor/tokio-stream-0.1.6/src/wrappers/watch.rs",
    ],
    crate = "tokio_stream",
    crate_root = "vendor/tokio-stream-0.1.6/src/lib.rs",
    edition = "2018",
    features = [
        "default",
        "fs",
        "io-util",
        "net",
        "signal",
        "sync",
        "time",
        "tokio-util",
    ],
    licenses = ["vendor/tokio-stream-0.1.6/LICENSE"],
    rustc_flags = ["--cap-lints=allow"],
    visibility = ["PUBLIC"],
    deps = [
        ":futures-core",
        ":pin-project-lite-0.2.6",
        ":tokio",
        ":tokio-util-0.6.7",
    ],
)

third_party_rust_library(
    name = "tokio-tungstenite-0.13.0",
    srcs = [
        "vendor/tokio-tungstenite-0.13.0/src/compat.rs",
        "vendor/tokio-tungstenite-0.13.0/src/connect.rs",
        "vendor/tokio-tungstenite-0.13.0/src/handshake.rs",
        "vendor/tokio-tungstenite-0.13.0/src/lib.rs",
        "vendor/tokio-tungstenite-0.13.0/src/stream.rs",
    ],
    crate = "tokio_tungstenite",
    crate_root = "vendor/tokio-tungstenite-0.13.0/src/lib.rs",
    edition = "2018",
    licenses = ["vendor/tokio-tungstenite-0.13.0/LICENSE"],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [
        ":futures-util",
        ":log-0.4.14",
        ":pin-project-1.0.7",
        ":tokio",
        ":tungstenite-0.12.0",
    ],
)

third_party_rust_library(
    name = "tokio-util-0.6.7",
    srcs = [
        "vendor/tokio-util-0.6.7/src/cfg.rs",
        "vendor/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs",
        "vendor/tokio-util-0.6.7/src/codec/bytes_codec.rs",
        "vendor/tokio-util-0.6.7/src/codec/decoder.rs",
        "vendor/tokio-util-0.6.7/src/codec/encoder.rs",
        "vendor/tokio-util-0.6.7/src/codec/framed.rs",
        "vendor/tokio-util-0.6.7/src/codec/framed_impl.rs",
        "vendor/tokio-util-0.6.7/src/codec/framed_read.rs",
        "vendor/tokio-util-0.6.7/src/codec/framed_write.rs",
        "vendor/tokio-util-0.6.7/src/codec/length_delimited.rs",
        "vendor/tokio-util-0.6.7/src/codec/lines_codec.rs",
        "vendor/tokio-util-0.6.7/src/codec/mod.rs",
        "vendor/tokio-util-0.6.7/src/compat.rs",
        "vendor/tokio-util-0.6.7/src/context.rs",
        "vendor/tokio-util-0.6.7/src/either.rs",
        "vendor/tokio-util-0.6.7/src/io/mod.rs",
        "vendor/tokio-util-0.6.7/src/io/read_buf.rs",
        "vendor/tokio-util-0.6.7/src/io/reader_stream.rs",
        "vendor/tokio-util-0.6.7/src/io/stream_reader.rs",
        "vendor/tokio-util-0.6.7/src/lib.rs",
        "vendor/tokio-util-0.6.7/src/loom.rs",
        "vendor/tokio-util-0.6.7/src/sync/cancellation_token.rs",
        "vendor/tokio-util-0.6.7/src/sync/intrusive_double_linked_list.rs",
        "vendor/tokio-util-0.6.7/src/sync/mod.rs",
        "vendor/tokio-util-0.6.7/src/sync/mpsc.rs",
        "vendor/tokio-util-0.6.7/src/sync/poll_semaphore.rs",
        "vendor/tokio-util-0.6.7/src/sync/reusable_box.rs",
        "vendor/tokio-util-0.6.7/src/sync/tests/loom_cancellation_token.rs",
        "vendor/tokio-util-0.6.7/src/sync/tests/mod.rs",
        "vendor/tokio-util-0.6.7/src/time/delay_queue.rs",
        "vendor/tokio-util-0.6.7/src/time/mod.rs",
        "vendor/tokio-util-0.6.7/src/time/wheel/level.rs",
        "vendor/tokio-util-0.6.7/src/time/wheel/mod.rs",
        "vendor/tokio-util-0.6.7/src/time/wheel/stack.rs",
        "vendor/tokio-util-0.6.7/src/udp/frame.rs",
        "vendor/tokio-util-0.6.7/src/udp/mod.rs",
    ],
    crate = "tokio_util",
    crate_root = "vendor/tokio-util-0.6.7/src/lib.rs",
    edition = "2018",
    features = [
        "codec",
        "default",
        "io",
    ],
    licenses = ["vendor/tokio-util-0.6.7/LICENSE"],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [
        ":bytes",
        ":futures-core",
        ":futures-sink-0.3.15",
        ":log-0.4.14",
        ":pin-project-lite-0.2.6",
        ":tokio",
    ],
)

third_party_rust_library(
    name = "toml",
    srcs = [
        "vendor/toml-0.5.8/src/datetime.rs",
        "vendor/toml-0.5.8/src/de.rs",
        "vendor/toml-0.5.8/src/lib.rs",
        "vendor/toml-0.5.8/src/macros.rs",
        "vendor/toml-0.5.8/src/map.rs",
        "vendor/toml-0.5.8/src/ser.rs",
        "vendor/toml-0.5.8/src/spanned.rs",
        "vendor/toml-0.5.8/src/tokens.rs",
        "vendor/toml-0.5.8/src/value.rs",
    ],
    crate = "toml",
    crate_root = "vendor/toml-0.5.8/src/lib.rs",
    edition = "2018",
    features = ["default"],
    licenses = [
        "vendor/toml-0.5.8/LICENSE-APACHE",
        "vendor/toml-0.5.8/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = ["PUBLIC"],
    deps = [":serde"],
)

third_party_rust_library(
    name = "tower",
    srcs = [
        "vendor/tower-0.4.8/src/balance/error.rs",
        "vendor/tower-0.4.8/src/balance/mod.rs",
        "vendor/tower-0.4.8/src/balance/p2c/layer.rs",
        "vendor/tower-0.4.8/src/balance/p2c/make.rs",
        "vendor/tower-0.4.8/src/balance/p2c/mod.rs",
        "vendor/tower-0.4.8/src/balance/p2c/service.rs",
        "vendor/tower-0.4.8/src/balance/p2c/test.rs",
        "vendor/tower-0.4.8/src/balance/pool/mod.rs",
        "vendor/tower-0.4.8/src/balance/pool/test.rs",
        "vendor/tower-0.4.8/src/buffer/error.rs",
        "vendor/tower-0.4.8/src/buffer/future.rs",
        "vendor/tower-0.4.8/src/buffer/layer.rs",
        "vendor/tower-0.4.8/src/buffer/message.rs",
        "vendor/tower-0.4.8/src/buffer/mod.rs",
        "vendor/tower-0.4.8/src/buffer/service.rs",
        "vendor/tower-0.4.8/src/buffer/worker.rs",
        "vendor/tower-0.4.8/src/builder/mod.rs",
        "vendor/tower-0.4.8/src/discover/error.rs",
        "vendor/tower-0.4.8/src/discover/list.rs",
        "vendor/tower-0.4.8/src/discover/mod.rs",
        "vendor/tower-0.4.8/src/filter/future.rs",
        "vendor/tower-0.4.8/src/filter/layer.rs",
        "vendor/tower-0.4.8/src/filter/mod.rs",
        "vendor/tower-0.4.8/src/filter/predicate.rs",
        "vendor/tower-0.4.8/src/hedge/delay.rs",
        "vendor/tower-0.4.8/src/hedge/latency.rs",
        "vendor/tower-0.4.8/src/hedge/mod.rs",
        "vendor/tower-0.4.8/src/hedge/rotating_histogram.rs",
        "vendor/tower-0.4.8/src/hedge/select.rs",
        "vendor/tower-0.4.8/src/layer.rs",
        "vendor/tower-0.4.8/src/lib.rs",
        "vendor/tower-0.4.8/src/limit/concurrency/future.rs",
        "vendor/tower-0.4.8/src/limit/concurrency/layer.rs",
        "vendor/tower-0.4.8/src/limit/concurrency/mod.rs",
        "vendor/tower-0.4.8/src/limit/concurrency/service.rs",
        "vendor/tower-0.4.8/src/limit/mod.rs",
        "vendor/tower-0.4.8/src/limit/rate/layer.rs",
        "vendor/tower-0.4.8/src/limit/rate/mod.rs",
        "vendor/tower-0.4.8/src/limit/rate/rate.rs",
        "vendor/tower-0.4.8/src/limit/rate/service.rs",
        "vendor/tower-0.4.8/src/load/completion.rs",
        "vendor/tower-0.4.8/src/load/constant.rs",
        "vendor/tower-0.4.8/src/load/mod.rs",
        "vendor/tower-0.4.8/src/load/peak_ewma.rs",
        "vendor/tower-0.4.8/src/load/pending_requests.rs",
        "vendor/tower-0.4.8/src/load_shed/error.rs",
        "vendor/tower-0.4.8/src/load_shed/future.rs",
        "vendor/tower-0.4.8/src/load_shed/layer.rs",
        "vendor/tower-0.4.8/src/load_shed/mod.rs",
        "vendor/tower-0.4.8/src/macros.rs",
        "vendor/tower-0.4.8/src/make/make_connection.rs",
        "vendor/tower-0.4.8/src/make/make_service.rs",
        "vendor/tower-0.4.8/src/make/make_service/shared.rs",
        "vendor/tower-0.4.8/src/make/mod.rs",
        "vendor/tower-0.4.8/src/ready_cache/cache.rs",
        "vendor/tower-0.4.8/src/ready_cache/error.rs",
        "vendor/tower-0.4.8/src/ready_cache/mod.rs",
        "vendor/tower-0.4.8/src/reconnect/future.rs",
        "vendor/tower-0.4.8/src/reconnect/mod.rs",
        "vendor/tower-0.4.8/src/retry/budget.rs",
        "vendor/tower-0.4.8/src/retry/future.rs",
        "vendor/tower-0.4.8/src/retry/layer.rs",
        "vendor/tower-0.4.8/src/retry/mod.rs",
        "vendor/tower-0.4.8/src/retry/policy.rs",
        "vendor/tower-0.4.8/src/spawn_ready/future.rs",
        "vendor/tower-0.4.8/src/spawn_ready/layer.rs",
        "vendor/tower-0.4.8/src/spawn_ready/make.rs",
        "vendor/tower-0.4.8/src/spawn_ready/mod.rs",
        "vendor/tower-0.4.8/src/spawn_ready/service.rs",
        "vendor/tower-0.4.8/src/steer/mod.rs",
        "vendor/tower-0.4.8/src/timeout/error.rs",
        "vendor/tower-0.4.8/src/timeout/future.rs",
        "vendor/tower-0.4.8/src/timeout/layer.rs",
        "vendor/tower-0.4.8/src/timeout/mod.rs",
        "vendor/tower-0.4.8/src/util/and_then.rs",
        "vendor/tower-0.4.8/src/util/boxed/layer.rs",
        "vendor/tower-0.4.8/src/util/boxed/mod.rs",
        "vendor/tower-0.4.8/src/util/boxed/sync.rs",
        "vendor/tower-0.4.8/src/util/boxed/unsync.rs",
        "vendor/tower-0.4.8/src/util/call_all/common.rs",
        "vendor/tower-0.4.8/src/util/call_all/mod.rs",
        "vendor/tower-0.4.8/src/util/call_all/ordered.rs",
        "vendor/tower-0.4.8/src/util/call_all/unordered.rs",
        "vendor/tower-0.4.8/src/util/either.rs",
        "vendor/tower-0.4.8/src/util/future_service.rs",
        "vendor/tower-0.4.8/src/util/map_err.rs",
        "vendor/tower-0.4.8/src/util/map_future.rs",
        "vendor/tower-0.4.8/src/util/map_request.rs",
        "vendor/tower-0.4.8/src/util/map_response.rs",
        "vendor/tower-0.4.8/src/util/map_result.rs",
        "vendor/tower-0.4.8/src/util/mod.rs",
        "vendor/tower-0.4.8/src/util/oneshot.rs",
        "vendor/tower-0.4.8/src/util/optional/error.rs",
        "vendor/tower-0.4.8/src/util/optional/future.rs",
        "vendor/tower-0.4.8/src/util/optional/mod.rs",
        "vendor/tower-0.4.8/src/util/ready.rs",
        "vendor/tower-0.4.8/src/util/service_fn.rs",
        "vendor/tower-0.4.8/src/util/then.rs",
    ],
    crate = "tower",
    crate_root = "vendor/tower-0.4.8/src/lib.rs",
    edition = "2018",
    features = [
        "default",
        "futures-util",
        "log",
        "tracing",
        "util",
    ],
    licenses = ["vendor/tower-0.4.8/LICENSE"],
    rustc_flags = ["--cap-lints=allow"],
    visibility = ["PUBLIC"],
    deps = [
        ":futures-core",
        ":futures-util",
        ":pin-project-1.0.7",
        ":tower-layer-0.3.1",
        ":tower-service-0.3.1",
        ":tracing-0.1.26",
    ],
)

third_party_rust_library(
    name = "tower-layer-0.3.1",
    srcs = [
        "vendor/tower-layer-0.3.1/src/identity.rs",
        "vendor/tower-layer-0.3.1/src/layer_fn.rs",
        "vendor/tower-layer-0.3.1/src/lib.rs",
        "vendor/tower-layer-0.3.1/src/stack.rs",
    ],
    crate = "tower_layer",
    crate_root = "vendor/tower-layer-0.3.1/src/lib.rs",
    edition = "2018",
    licenses = ["vendor/tower-layer-0.3.1/LICENSE"],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

third_party_rust_library(
    name = "tower-service-0.3.1",
    srcs = ["vendor/tower-service-0.3.1/src/lib.rs"],
    crate = "tower_service",
    crate_root = "vendor/tower-service-0.3.1/src/lib.rs",
    edition = "2018",
    licenses = ["vendor/tower-service-0.3.1/LICENSE"],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

third_party_rust_library(
    name = "tracing-0.1.26",
    srcs = [
        "vendor/tracing-0.1.26/src/dispatcher.rs",
        "vendor/tracing-0.1.26/src/field.rs",
        "vendor/tracing-0.1.26/src/instrument.rs",
        "vendor/tracing-0.1.26/src/level_filters.rs",
        "vendor/tracing-0.1.26/src/lib.rs",
        "vendor/tracing-0.1.26/src/macros.rs",
        "vendor/tracing-0.1.26/src/span.rs",
        "vendor/tracing-0.1.26/src/stdlib.rs",
        "vendor/tracing-0.1.26/src/subscriber.rs",
    ],
    crate = "tracing",
    crate_root = "vendor/tracing-0.1.26/src/lib.rs",
    edition = "2018",
    features = [
        "attributes",
        "default",
        "log",
        "std",
        "tracing-attributes",
    ],
    licenses = ["vendor/tracing-0.1.26/LICENSE"],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [
        ":cfg-if-1.0.0",
        ":log-0.4.14",
        ":pin-project-lite-0.2.6",
        ":tracing-attributes-0.1.15",
        ":tracing-core-0.1.18",
    ],
)

third_party_rust_library(
    name = "tracing-attributes-0.1.15",
    srcs = ["vendor/tracing-attributes-0.1.15/src/lib.rs"],
    crate = "tracing_attributes",
    crate_root = "vendor/tracing-attributes-0.1.15/src/lib.rs",
    edition = "2018",
    licenses = ["vendor/tracing-attributes-0.1.15/LICENSE"],
    proc_macro = True,
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [
        ":proc-macro2-1.0.27",
        ":quote-1.0.9",
        ":syn-1.0.73",
    ],
)

third_party_rust_library(
    name = "tracing-core-0.1.18",
    srcs = [
        "vendor/tracing-core-0.1.18/src/callsite.rs",
        "vendor/tracing-core-0.1.18/src/dispatcher.rs",
        "vendor/tracing-core-0.1.18/src/event.rs",
        "vendor/tracing-core-0.1.18/src/field.rs",
        "vendor/tracing-core-0.1.18/src/lazy_static/core_lazy.rs",
        "vendor/tracing-core-0.1.18/src/lazy_static/mod.rs",
        "vendor/tracing-core-0.1.18/src/lib.rs",
        "vendor/tracing-core-0.1.18/src/metadata.rs",
        "vendor/tracing-core-0.1.18/src/parent.rs",
        "vendor/tracing-core-0.1.18/src/span.rs",
        "vendor/tracing-core-0.1.18/src/spin/mod.rs",
        "vendor/tracing-core-0.1.18/src/spin/mutex.rs",
        "vendor/tracing-core-0.1.18/src/spin/once.rs",
        "vendor/tracing-core-0.1.18/src/stdlib.rs",
        "vendor/tracing-core-0.1.18/src/subscriber.rs",
    ],
    crate = "tracing_core",
    crate_root = "vendor/tracing-core-0.1.18/src/lib.rs",
    edition = "2018",
    features = [
        "lazy_static",
        "std",
    ],
    licenses = ["vendor/tracing-core-0.1.18/LICENSE"],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [":lazy_static-1.4.0"],
)

third_party_rust_library(
    name = "trust-dns-proto-0.20.3",
    srcs = [
        "vendor/trust-dns-proto-0.20.3/src/error.rs",
        "vendor/trust-dns-proto-0.20.3/src/lib.rs",
        "vendor/trust-dns-proto-0.20.3/src/multicast/mdns_client_stream.rs",
        "vendor/trust-dns-proto-0.20.3/src/multicast/mdns_stream.rs",
        "vendor/trust-dns-proto-0.20.3/src/multicast/mod.rs",
        "vendor/trust-dns-proto-0.20.3/src/op/edns.rs",
        "vendor/trust-dns-proto-0.20.3/src/op/header.rs",
        "vendor/trust-dns-proto-0.20.3/src/op/message.rs",
        "vendor/trust-dns-proto-0.20.3/src/op/mod.rs",
        "vendor/trust-dns-proto-0.20.3/src/op/op_code.rs",
        "vendor/trust-dns-proto-0.20.3/src/op/query.rs",
        "vendor/trust-dns-proto-0.20.3/src/op/response_code.rs",
        "vendor/trust-dns-proto-0.20.3/src/rr/dns_class.rs",
        "vendor/trust-dns-proto-0.20.3/src/rr/dnssec/algorithm.rs",
        "vendor/trust-dns-proto-0.20.3/src/rr/dnssec/digest_type.rs",
        "vendor/trust-dns-proto-0.20.3/src/rr/dnssec/ec_public_key.rs",
        "vendor/trust-dns-proto-0.20.3/src/rr/dnssec/mod.rs",
        "vendor/trust-dns-proto-0.20.3/src/rr/dnssec/nsec3.rs",
        "vendor/trust-dns-proto-0.20.3/src/rr/dnssec/public_key.rs",
        "vendor/trust-dns-proto-0.20.3/src/rr/dnssec/rdata/dnskey.rs",
        "vendor/trust-dns-proto-0.20.3/src/rr/dnssec/rdata/ds.rs",
        "vendor/trust-dns-proto-0.20.3/src/rr/dnssec/rdata/key.rs",
        "vendor/trust-dns-proto-0.20.3/src/rr/dnssec/rdata/mod.rs",
        "vendor/trust-dns-proto-0.20.3/src/rr/dnssec/rdata/nsec.rs",
        "vendor/trust-dns-proto-0.20.3/src/rr/dnssec/rdata/nsec3.rs",
        "vendor/trust-dns-proto-0.20.3/src/rr/dnssec/rdata/nsec3param.rs",
        "vendor/trust-dns-proto-0.20.3/src/rr/dnssec/rdata/sig.rs",
        "vendor/trust-dns-proto-0.20.3/src/rr/dnssec/roots/19036.rsa",
        "vendor/trust-dns-proto-0.20.3/src/rr/dnssec/roots/20326.rsa",
        "vendor/trust-dns-proto-0.20.3/src/rr/dnssec/rsa_public_key.rs",
        "vendor/trust-dns-proto-0.20.3/src/rr/dnssec/supported_algorithm.rs",
        "vendor/trust-dns-proto-0.20.3/src/rr/dnssec/tbs.rs",
        "vendor/trust-dns-proto-0.20.3/src/rr/dnssec/trust_anchor.rs",
        "vendor/trust-dns-proto-0.20.3/src/rr/dnssec/verifier.rs",
        "vendor/trust-dns-proto-0.20.3/src/rr/domain/label.rs",
        "vendor/trust-dns-proto-0.20.3/src/rr/domain/mod.rs",
        "vendor/trust-dns-proto-0.20.3/src/rr/domain/name.rs",
        "vendor/trust-dns-proto-0.20.3/src/rr/domain/try_parse_ip.rs",
        "vendor/trust-dns-proto-0.20.3/src/rr/domain/usage.rs",
        "vendor/trust-dns-proto-0.20.3/src/rr/mod.rs",
        "vendor/trust-dns-proto-0.20.3/src/rr/rdata/a.rs",
        "vendor/trust-dns-proto-0.20.3/src/rr/rdata/aaaa.rs",
        "vendor/trust-dns-proto-0.20.3/src/rr/rdata/caa.rs",
        "vendor/trust-dns-proto-0.20.3/src/rr/rdata/hinfo.rs",
        "vendor/trust-dns-proto-0.20.3/src/rr/rdata/mod.rs",
        "vendor/trust-dns-proto-0.20.3/src/rr/rdata/mx.rs",
        "vendor/trust-dns-proto-0.20.3/src/rr/rdata/name.rs",
        "vendor/trust-dns-proto-0.20.3/src/rr/rdata/naptr.rs",
        "vendor/trust-dns-proto-0.20.3/src/rr/rdata/null.rs",
        "vendor/trust-dns-proto-0.20.3/src/rr/rdata/openpgpkey.rs",
        "vendor/trust-dns-proto-0.20.3/src/rr/rdata/opt.rs",
        "vendor/trust-dns-proto-0.20.3/src/rr/rdata/soa.rs",
        "vendor/trust-dns-proto-0.20.3/src/rr/rdata/srv.rs",
        "vendor/trust-dns-proto-0.20.3/src/rr/rdata/sshfp.rs",
        "vendor/trust-dns-proto-0.20.3/src/rr/rdata/svcb.rs",
        "vendor/trust-dns-proto-0.20.3/src/rr/rdata/tlsa.rs",
        "vendor/trust-dns-proto-0.20.3/src/rr/rdata/txt.rs",
        "vendor/trust-dns-proto-0.20.3/src/rr/record_data.rs",
        "vendor/trust-dns-proto-0.20.3/src/rr/record_type.rs",
        "vendor/trust-dns-proto-0.20.3/src/rr/resource.rs",
        "vendor/trust-dns-proto-0.20.3/src/rr/rr_set.rs",
        "vendor/trust-dns-proto-0.20.3/src/serialize/binary/bin_tests.rs",
        "vendor/trust-dns-proto-0.20.3/src/serialize/binary/decoder.rs",
        "vendor/trust-dns-proto-0.20.3/src/serialize/binary/encoder.rs",
        "vendor/trust-dns-proto-0.20.3/src/serialize/binary/mod.rs",
        "vendor/trust-dns-proto-0.20.3/src/serialize/binary/restrict.rs",
        "vendor/trust-dns-proto-0.20.3/src/serialize/mod.rs",
        "vendor/trust-dns-proto-0.20.3/src/tcp/mod.rs",
        "vendor/trust-dns-proto-0.20.3/src/tcp/tcp_client_stream.rs",
        "vendor/trust-dns-proto-0.20.3/src/tcp/tcp_stream.rs",
        "vendor/trust-dns-proto-0.20.3/src/tests/mod.rs",
        "vendor/trust-dns-proto-0.20.3/src/tests/tcp.rs",
        "vendor/trust-dns-proto-0.20.3/src/tests/udp.rs",
        "vendor/trust-dns-proto-0.20.3/src/udp/mod.rs",
        "vendor/trust-dns-proto-0.20.3/src/udp/udp_client_stream.rs",
        "vendor/trust-dns-proto-0.20.3/src/udp/udp_stream.rs",
        "vendor/trust-dns-proto-0.20.3/src/xfer/dns_exchange.rs",
        "vendor/trust-dns-proto-0.20.3/src/xfer/dns_handle.rs",
        "vendor/trust-dns-proto-0.20.3/src/xfer/dns_multiplexer.rs",
        "vendor/trust-dns-proto-0.20.3/src/xfer/dns_request.rs",
        "vendor/trust-dns-proto-0.20.3/src/xfer/dns_response.rs",
        "vendor/trust-dns-proto-0.20.3/src/xfer/dnssec_dns_handle.rs",
        "vendor/trust-dns-proto-0.20.3/src/xfer/mod.rs",
        "vendor/trust-dns-proto-0.20.3/src/xfer/retry_dns_handle.rs",
        "vendor/trust-dns-proto-0.20.3/src/xfer/serial_message.rs",
    ],
    crate = "trust_dns_proto",
    crate_root = "vendor/trust-dns-proto-0.20.3/src/lib.rs",
    edition = "2018",
    features = [
        "tokio",
        "tokio-runtime",
    ],
    licenses = [
        "vendor/trust-dns-proto-0.20.3/LICENSE-APACHE",
        "vendor/trust-dns-proto-0.20.3/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [
        ":async-trait-0.1.50",
        ":cfg-if-1.0.0",
        ":data-encoding-2.3.2",
        ":enum-as-inner-0.3.3",
        ":futures-channel-0.3.15",
        ":futures-io-0.3.15",
        ":futures-util",
        ":idna-0.2.3",
        ":ipnet-2.3.0",
        ":lazy_static-1.4.0",
        ":log-0.4.14",
        ":rand-0.8.3",
        ":smallvec-1.6.1",
        ":thiserror-1.0.25",
        ":tinyvec-1.2.0",
        ":tokio",
        ":url-2.2.2",
    ],
)

third_party_rust_library(
    name = "trust-dns-resolver",
    srcs = [
        "vendor/trust-dns-resolver-0.20.3/src/async_resolver.rs",
        "vendor/trust-dns-resolver-0.20.3/src/caching_client.rs",
        "vendor/trust-dns-resolver-0.20.3/src/config.rs",
        "vendor/trust-dns-resolver-0.20.3/src/dns_lru.rs",
        "vendor/trust-dns-resolver-0.20.3/src/dns_sd.rs",
        "vendor/trust-dns-resolver-0.20.3/src/error.rs",
        "vendor/trust-dns-resolver-0.20.3/src/hosts.rs",
        "vendor/trust-dns-resolver-0.20.3/src/https.rs",
        "vendor/trust-dns-resolver-0.20.3/src/lib.rs",
        "vendor/trust-dns-resolver-0.20.3/src/lookup.rs",
        "vendor/trust-dns-resolver-0.20.3/src/lookup_ip.rs",
        "vendor/trust-dns-resolver-0.20.3/src/name_server/connection_provider.rs",
        "vendor/trust-dns-resolver-0.20.3/src/name_server/mod.rs",
        "vendor/trust-dns-resolver-0.20.3/src/name_server/name_server.rs",
        "vendor/trust-dns-resolver-0.20.3/src/name_server/name_server_pool.rs",
        "vendor/trust-dns-resolver-0.20.3/src/name_server/name_server_state.rs",
        "vendor/trust-dns-resolver-0.20.3/src/name_server/name_server_stats.rs",
        "vendor/trust-dns-resolver-0.20.3/src/resolver.rs",
        "vendor/trust-dns-resolver-0.20.3/src/system_conf/mod.rs",
        "vendor/trust-dns-resolver-0.20.3/src/system_conf/unix.rs",
        "vendor/trust-dns-resolver-0.20.3/src/system_conf/windows.rs",
        "vendor/trust-dns-resolver-0.20.3/src/tls/dns_over_native_tls.rs",
        "vendor/trust-dns-resolver-0.20.3/src/tls/dns_over_openssl.rs",
        "vendor/trust-dns-resolver-0.20.3/src/tls/dns_over_rustls.rs",
        "vendor/trust-dns-resolver-0.20.3/src/tls/mod.rs",
    ],
    crate = "trust_dns_resolver",
    crate_root = "vendor/trust-dns-resolver-0.20.3/src/lib.rs",
    edition = "2018",
    env = {
        "CARGO_MANIFEST_DIR": "vendor/trust-dns-resolver-0.20.3",
        "CARGO_PKG_NAME": "trust-dns-resolver",
        "CARGO_PKG_VERSION": "0.20.3",
        "CARGO_PKG_VERSION_MAJOR": "0",
        "CARGO_PKG_VERSION_MINOR": "20",
        "CARGO_PKG_VERSION_PATCH": "3",
    },
    features = [
        "default",
        "ipconfig",
        "resolv-conf",
        "system-config",
        "tokio",
        "tokio-runtime",
    ],
    licenses = [
        "vendor/trust-dns-resolver-0.20.3/LICENSE-APACHE",
        "vendor/trust-dns-resolver-0.20.3/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = ["PUBLIC"],
    deps = [
        ":cfg-if-1.0.0",
        ":futures-util",
        ":lazy_static-1.4.0",
        ":log-0.4.14",
        ":lru-cache-0.1.2",
        ":parking_lot-0.11.1",
        ":resolv-conf-0.7.0",
        ":smallvec-1.6.1",
        ":thiserror-1.0.25",
        ":tokio",
        ":trust-dns-proto-0.20.3",
    ],
)

third_party_rust_library(
    name = "try-lock-0.2.3",
    srcs = ["vendor/try-lock-0.2.3/src/lib.rs"],
    crate = "try_lock",
    crate_root = "vendor/try-lock-0.2.3/src/lib.rs",
    edition = "2015",
    licenses = ["vendor/try-lock-0.2.3/LICENSE"],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

third_party_rust_library(
    name = "tungstenite-0.12.0",
    srcs = [
        "vendor/tungstenite-0.12.0/src/client.rs",
        "vendor/tungstenite-0.12.0/src/error.rs",
        "vendor/tungstenite-0.12.0/src/handshake/client.rs",
        "vendor/tungstenite-0.12.0/src/handshake/headers.rs",
        "vendor/tungstenite-0.12.0/src/handshake/machine.rs",
        "vendor/tungstenite-0.12.0/src/handshake/mod.rs",
        "vendor/tungstenite-0.12.0/src/handshake/server.rs",
        "vendor/tungstenite-0.12.0/src/lib.rs",
        "vendor/tungstenite-0.12.0/src/protocol/frame/coding.rs",
        "vendor/tungstenite-0.12.0/src/protocol/frame/frame.rs",
        "vendor/tungstenite-0.12.0/src/protocol/frame/mask.rs",
        "vendor/tungstenite-0.12.0/src/protocol/frame/mod.rs",
        "vendor/tungstenite-0.12.0/src/protocol/message.rs",
        "vendor/tungstenite-0.12.0/src/protocol/mod.rs",
        "vendor/tungstenite-0.12.0/src/server.rs",
        "vendor/tungstenite-0.12.0/src/stream.rs",
        "vendor/tungstenite-0.12.0/src/util.rs",
    ],
    crate = "tungstenite",
    crate_root = "vendor/tungstenite-0.12.0/src/lib.rs",
    edition = "2018",
    licenses = [
        "vendor/tungstenite-0.12.0/LICENSE-APACHE",
        "vendor/tungstenite-0.12.0/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [
        ":base64-0.13.0",
        ":byteorder-1.4.3",
        ":bytes",
        ":http-0.2.4",
        ":httparse-1.4.1",
        ":input_buffer-0.4.0",
        ":log-0.4.14",
        ":rand-0.8.3",
        ":sha-1-0.9.6",
        ":url-2.2.2",
        ":utf-8-0.7.6",
    ],
)

third_party_rust_library(
    name = "twoway-0.1.8",
    srcs = [
        "vendor/twoway-0.1.8/src/bmh.rs",
        "vendor/twoway-0.1.8/src/lib.rs",
        "vendor/twoway-0.1.8/src/pcmp.rs",
        "vendor/twoway-0.1.8/src/set.rs",
        "vendor/twoway-0.1.8/src/tw.rs",
        "vendor/twoway-0.1.8/src/util.rs",
    ],
    crate = "twoway",
    crate_root = "vendor/twoway-0.1.8/src/lib.rs",
    edition = "2015",
    features = [
        "default",
        "use_std",
    ],
    licenses = [
        "vendor/twoway-0.1.8/LICENSE-APACHE",
        "vendor/twoway-0.1.8/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [":memchr-2.4.0"],
)

third_party_rust_library(
    name = "typenum-1.13.0",
    srcs = [
        "vendor/typenum-1.13.0/src/array.rs",
        "vendor/typenum-1.13.0/src/bit.rs",
        "vendor/typenum-1.13.0/src/int.rs",
        "vendor/typenum-1.13.0/src/lib.rs",
        "vendor/typenum-1.13.0/src/marker_traits.rs",
        "vendor/typenum-1.13.0/src/operator_aliases.rs",
        "vendor/typenum-1.13.0/src/private.rs",
        "vendor/typenum-1.13.0/src/type_operators.rs",
        "vendor/typenum-1.13.0/src/uint.rs",
    ],
    crate = "typenum",
    crate_root = "vendor/typenum-1.13.0/src/lib.rs",
    edition = "2018",
    env = {
        "TYPENUM_BUILD_CONSTS": "op.rs",
        "TYPENUM_BUILD_OP": "consts.rs",
    },
    licenses = [
        "vendor/typenum-1.13.0/LICENSE",
        "vendor/typenum-1.13.0/LICENSE-APACHE",
        "vendor/typenum-1.13.0/LICENSE-MIT",
    ],
    mapped_srcs = {
        ":typenum-1.13.0-build-script-main-srcs=consts.rs": "vendor/typenum-1.13.0/src/consts.rs",
        ":typenum-1.13.0-build-script-main-srcs=op.rs": "vendor/typenum-1.13.0/src/op.rs",
    },
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

third_party_rust_binary(
    name = "typenum-1.13.0-build-script-main",
    srcs = [
        "vendor/typenum-1.13.0/build/main.rs",
        "vendor/typenum-1.13.0/build/op.rs",
        "vendor/typenum-1.13.0/build/tests.rs",
    ],
    crate = "build_script_main",
    crate_root = "vendor/typenum-1.13.0/build/main.rs",
    edition = "2018",
    env = {
        "TYPENUM_BUILD_CONSTS": "op.rs",
        "TYPENUM_BUILD_OP": "consts.rs",
    },
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

rust_buildscript_genrule_srcs(
    name = "typenum-1.13.0-build-script-main-srcs",
    package_name = "typenum",
    buildscript_rule = ":typenum-1.13.0-build-script-main",
    cfgs = [],
    features = [],
    files = [
        "consts.rs",
        "op.rs",
    ],
    version = "1.13.0",
)

third_party_rust_library(
    name = "unicase-2.6.0",
    srcs = [
        "vendor/unicase-2.6.0/src/ascii.rs",
        "vendor/unicase-2.6.0/src/lib.rs",
        "vendor/unicase-2.6.0/src/unicode/map.rs",
        "vendor/unicase-2.6.0/src/unicode/mod.rs",
    ],
    crate = "unicase",
    crate_root = "vendor/unicase-2.6.0/src/lib.rs",
    edition = "2015",
    licenses = [
        "vendor/unicase-2.6.0/LICENSE-APACHE",
        "vendor/unicase-2.6.0/LICENSE-MIT",
    ],
    rustc_flags = [
        "--cap-lints=allow",
        "@$(location :unicase-2.6.0-build-script-build-args)",
    ],
    visibility = [],
)

third_party_rust_binary(
    name = "unicase-2.6.0-build-script-build",
    srcs = [
        "vendor/unicase-2.6.0/build.rs",
        "vendor/unicase-2.6.0/src/ascii.rs",
        "vendor/unicase-2.6.0/src/lib.rs",
        "vendor/unicase-2.6.0/src/unicode/map.rs",
        "vendor/unicase-2.6.0/src/unicode/mod.rs",
    ],
    crate = "build_script_build",
    crate_root = "vendor/unicase-2.6.0/build.rs",
    edition = "2015",
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [":version_check-0.9.3"],
)

rust_buildscript_genrule_filter(
    name = "unicase-2.6.0-build-script-build-args",
    package_name = "unicase",
    buildscript_rule = ":unicase-2.6.0-build-script-build",
    cfgs = [],
    features = [],
    outfile = "args.txt",
    version = "2.6.0",
)

third_party_rust_library(
    name = "unicode-bidi-0.3.5",
    srcs = [
        "vendor/unicode-bidi-0.3.5/src/char_data/mod.rs",
        "vendor/unicode-bidi-0.3.5/src/char_data/tables.rs",
        "vendor/unicode-bidi-0.3.5/src/deprecated.rs",
        "vendor/unicode-bidi-0.3.5/src/explicit.rs",
        "vendor/unicode-bidi-0.3.5/src/format_chars.rs",
        "vendor/unicode-bidi-0.3.5/src/implicit.rs",
        "vendor/unicode-bidi-0.3.5/src/level.rs",
        "vendor/unicode-bidi-0.3.5/src/lib.rs",
        "vendor/unicode-bidi-0.3.5/src/prepare.rs",
    ],
    crate = "unicode_bidi",
    crate_root = "vendor/unicode-bidi-0.3.5/src/lib.rs",
    edition = "2018",
    features = ["default"],
    licenses = [
        "vendor/unicode-bidi-0.3.5/LICENSE-APACHE",
        "vendor/unicode-bidi-0.3.5/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [":matches-0.1.8"],
)

third_party_rust_library(
    name = "unicode-normalization-0.1.19",
    srcs = [
        "vendor/unicode-normalization-0.1.19/src/__test_api.rs",
        "vendor/unicode-normalization-0.1.19/src/decompose.rs",
        "vendor/unicode-normalization-0.1.19/src/lib.rs",
        "vendor/unicode-normalization-0.1.19/src/lookups.rs",
        "vendor/unicode-normalization-0.1.19/src/no_std_prelude.rs",
        "vendor/unicode-normalization-0.1.19/src/normalize.rs",
        "vendor/unicode-normalization-0.1.19/src/perfect_hash.rs",
        "vendor/unicode-normalization-0.1.19/src/quick_check.rs",
        "vendor/unicode-normalization-0.1.19/src/recompose.rs",
        "vendor/unicode-normalization-0.1.19/src/replace.rs",
        "vendor/unicode-normalization-0.1.19/src/stream_safe.rs",
        "vendor/unicode-normalization-0.1.19/src/tables.rs",
        "vendor/unicode-normalization-0.1.19/src/test.rs",
    ],
    crate = "unicode_normalization",
    crate_root = "vendor/unicode-normalization-0.1.19/src/lib.rs",
    edition = "2018",
    features = [
        "default",
        "std",
    ],
    licenses = [
        "vendor/unicode-normalization-0.1.19/LICENSE-APACHE",
        "vendor/unicode-normalization-0.1.19/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [":tinyvec-1.2.0"],
)

third_party_rust_library(
    name = "unicode-segmentation-1.7.1",
    srcs = [
        "vendor/unicode-segmentation-1.7.1/src/grapheme.rs",
        "vendor/unicode-segmentation-1.7.1/src/lib.rs",
        "vendor/unicode-segmentation-1.7.1/src/sentence.rs",
        "vendor/unicode-segmentation-1.7.1/src/tables.rs",
        "vendor/unicode-segmentation-1.7.1/src/test.rs",
        "vendor/unicode-segmentation-1.7.1/src/testdata.rs",
        "vendor/unicode-segmentation-1.7.1/src/word.rs",
    ],
    crate = "unicode_segmentation",
    crate_root = "vendor/unicode-segmentation-1.7.1/src/lib.rs",
    edition = "2015",
    licenses = [
        "vendor/unicode-segmentation-1.7.1/LICENSE-APACHE",
        "vendor/unicode-segmentation-1.7.1/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

third_party_rust_library(
    name = "unicode-width-0.1.8",
    srcs = [
        "vendor/unicode-width-0.1.8/src/lib.rs",
        "vendor/unicode-width-0.1.8/src/tables.rs",
        "vendor/unicode-width-0.1.8/src/tests.rs",
    ],
    crate = "unicode_width",
    crate_root = "vendor/unicode-width-0.1.8/src/lib.rs",
    edition = "2015",
    features = ["default"],
    licenses = [
        "vendor/unicode-width-0.1.8/LICENSE-APACHE",
        "vendor/unicode-width-0.1.8/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

third_party_rust_library(
    name = "unicode-xid-0.2.2",
    srcs = [
        "vendor/unicode-xid-0.2.2/src/lib.rs",
        "vendor/unicode-xid-0.2.2/src/tables.rs",
        "vendor/unicode-xid-0.2.2/src/tests.rs",
    ],
    crate = "unicode_xid",
    crate_root = "vendor/unicode-xid-0.2.2/src/lib.rs",
    edition = "2015",
    features = ["default"],
    licenses = [
        "vendor/unicode-xid-0.2.2/LICENSE-APACHE",
        "vendor/unicode-xid-0.2.2/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

third_party_rust_library(
    name = "untrusted-0.7.1",
    srcs = ["vendor/untrusted-0.7.1/src/untrusted.rs"],
    crate = "untrusted",
    crate_root = "vendor/untrusted-0.7.1/src/untrusted.rs",
    edition = "2018",
    licenses = ["vendor/untrusted-0.7.1/LICENSE.txt"],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

third_party_rust_library(
    name = "url-2.2.2",
    srcs = [
        "vendor/url-2.2.2/src/host.rs",
        "vendor/url-2.2.2/src/lib.rs",
        "vendor/url-2.2.2/src/origin.rs",
        "vendor/url-2.2.2/src/parser.rs",
        "vendor/url-2.2.2/src/path_segments.rs",
        "vendor/url-2.2.2/src/quirks.rs",
        "vendor/url-2.2.2/src/slicing.rs",
    ],
    crate = "url",
    crate_root = "vendor/url-2.2.2/src/lib.rs",
    edition = "2018",
    licenses = [
        "vendor/url-2.2.2/LICENSE-APACHE",
        "vendor/url-2.2.2/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [
        ":form_urlencoded-1.0.1",
        ":idna-0.2.3",
        ":matches-0.1.8",
        ":percent-encoding-2.1.0",
    ],
)

third_party_rust_library(
    name = "utf-8-0.7.6",
    srcs = [
        "vendor/utf-8-0.7.6/src/lib.rs",
        "vendor/utf-8-0.7.6/src/lossy.rs",
        "vendor/utf-8-0.7.6/src/read.rs",
    ],
    crate = "utf8",
    crate_root = "vendor/utf-8-0.7.6/src/lib.rs",
    edition = "2015",
    licenses = [
        "vendor/utf-8-0.7.6/LICENSE-APACHE",
        "vendor/utf-8-0.7.6/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

third_party_rust_library(
    name = "vec_map-0.8.2",
    srcs = ["vendor/vec_map-0.8.2/src/lib.rs"],
    crate = "vec_map",
    crate_root = "vendor/vec_map-0.8.2/src/lib.rs",
    edition = "2015",
    licenses = [
        "vendor/vec_map-0.8.2/LICENSE-APACHE",
        "vendor/vec_map-0.8.2/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

third_party_rust_library(
    name = "version_check-0.9.3",
    srcs = [
        "vendor/version_check-0.9.3/src/channel.rs",
        "vendor/version_check-0.9.3/src/date.rs",
        "vendor/version_check-0.9.3/src/lib.rs",
        "vendor/version_check-0.9.3/src/version.rs",
    ],
    crate = "version_check",
    crate_root = "vendor/version_check-0.9.3/src/lib.rs",
    edition = "2015",
    licenses = [
        "vendor/version_check-0.9.3/LICENSE-APACHE",
        "vendor/version_check-0.9.3/LICENSE-MIT",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

third_party_rust_library(
    name = "void-1.0.2",
    srcs = ["vendor/void-1.0.2/src/lib.rs"],
    crate = "void",
    crate_root = "vendor/void-1.0.2/src/lib.rs",
    edition = "2015",
    features = [
        "default",
        "std",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

third_party_rust_library(
    name = "want-0.3.0",
    srcs = ["vendor/want-0.3.0/src/lib.rs"],
    crate = "want",
    crate_root = "vendor/want-0.3.0/src/lib.rs",
    edition = "2018",
    licenses = ["vendor/want-0.3.0/LICENSE"],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [
        ":log-0.4.14",
        ":try-lock-0.2.3",
    ],
)

third_party_rust_library(
    name = "warp",
    srcs = [
        "vendor/warp-0.3.1/examples/tls/cert.pem",
        "vendor/warp-0.3.1/examples/tls/key.rsa",
        "vendor/warp-0.3.1/src/error.rs",
        "vendor/warp-0.3.1/src/filter/and.rs",
        "vendor/warp-0.3.1/src/filter/and_then.rs",
        "vendor/warp-0.3.1/src/filter/boxed.rs",
        "vendor/warp-0.3.1/src/filter/map.rs",
        "vendor/warp-0.3.1/src/filter/map_err.rs",
        "vendor/warp-0.3.1/src/filter/mod.rs",
        "vendor/warp-0.3.1/src/filter/or.rs",
        "vendor/warp-0.3.1/src/filter/or_else.rs",
        "vendor/warp-0.3.1/src/filter/recover.rs",
        "vendor/warp-0.3.1/src/filter/service.rs",
        "vendor/warp-0.3.1/src/filter/unify.rs",
        "vendor/warp-0.3.1/src/filter/untuple_one.rs",
        "vendor/warp-0.3.1/src/filter/wrap.rs",
        "vendor/warp-0.3.1/src/filters/addr.rs",
        "vendor/warp-0.3.1/src/filters/any.rs",
        "vendor/warp-0.3.1/src/filters/body.rs",
        "vendor/warp-0.3.1/src/filters/compression.rs",
        "vendor/warp-0.3.1/src/filters/cookie.rs",
        "vendor/warp-0.3.1/src/filters/cors.rs",
        "vendor/warp-0.3.1/src/filters/ext.rs",
        "vendor/warp-0.3.1/src/filters/fs.rs",
        "vendor/warp-0.3.1/src/filters/header.rs",
        "vendor/warp-0.3.1/src/filters/host.rs",
        "vendor/warp-0.3.1/src/filters/log.rs",
        "vendor/warp-0.3.1/src/filters/method.rs",
        "vendor/warp-0.3.1/src/filters/mod.rs",
        "vendor/warp-0.3.1/src/filters/multipart.rs",
        "vendor/warp-0.3.1/src/filters/path.rs",
        "vendor/warp-0.3.1/src/filters/query.rs",
        "vendor/warp-0.3.1/src/filters/reply.rs",
        "vendor/warp-0.3.1/src/filters/sse.rs",
        "vendor/warp-0.3.1/src/filters/trace.rs",
        "vendor/warp-0.3.1/src/filters/ws.rs",
        "vendor/warp-0.3.1/src/generic.rs",
        "vendor/warp-0.3.1/src/lib.rs",
        "vendor/warp-0.3.1/src/redirect.rs",
        "vendor/warp-0.3.1/src/reject.rs",
        "vendor/warp-0.3.1/src/reply.rs",
        "vendor/warp-0.3.1/src/route.rs",
        "vendor/warp-0.3.1/src/server.rs",
        "vendor/warp-0.3.1/src/service.rs",
        "vendor/warp-0.3.1/src/test.rs",
        "vendor/warp-0.3.1/src/tls.rs",
        "vendor/warp-0.3.1/src/transport.rs",
    ],
    crate = "warp",
    crate_root = "vendor/warp-0.3.1/src/lib.rs",
    edition = "2018",
    features = [
        "default",
        "multipart",
        "tls",
        "tokio-rustls",
        "tokio-tungstenite",
        "websocket",
    ],
    licenses = ["vendor/warp-0.3.1/LICENSE"],
    rustc_flags = ["--cap-lints=allow"],
    visibility = ["PUBLIC"],
    deps = [
        ":bytes",
        ":futures",
        ":headers-0.3.4",
        ":http-0.2.4",
        ":hyper",
        ":log-0.4.14",
        ":mime-0.3.16",
        ":mime_guess-2.0.3",
        ":multipart-0.17.1",
        ":percent-encoding-2.1.0",
        ":pin-project-1.0.7",
        ":scoped-tls-1.0.0",
        ":serde",
        ":serde_json-1.0.64",
        ":serde_urlencoded-0.7.0",
        ":tokio",
        ":tokio-rustls-0.22.0",
        ":tokio-stream",
        ":tokio-tungstenite-0.13.0",
        ":tokio-util-0.6.7",
        ":tower-service-0.3.1",
        ":tracing-0.1.26",
    ],
)

third_party_rust_library(
    name = "webpki-0.21.4",
    srcs = [
        "vendor/webpki-0.21.4/src/calendar.rs",
        "vendor/webpki-0.21.4/src/cert.rs",
        "vendor/webpki-0.21.4/src/data/alg-ecdsa-p256.der",
        "vendor/webpki-0.21.4/src/data/alg-ecdsa-p384.der",
        "vendor/webpki-0.21.4/src/data/alg-ecdsa-sha256.der",
        "vendor/webpki-0.21.4/src/data/alg-ecdsa-sha384.der",
        "vendor/webpki-0.21.4/src/data/alg-ed25519.der",
        "vendor/webpki-0.21.4/src/data/alg-rsa-encryption.der",
        "vendor/webpki-0.21.4/src/data/alg-rsa-pkcs1-sha256.der",
        "vendor/webpki-0.21.4/src/data/alg-rsa-pkcs1-sha384.der",
        "vendor/webpki-0.21.4/src/data/alg-rsa-pkcs1-sha512.der",
        "vendor/webpki-0.21.4/src/data/alg-rsa-pss-sha256.der",
        "vendor/webpki-0.21.4/src/data/alg-rsa-pss-sha384.der",
        "vendor/webpki-0.21.4/src/data/alg-rsa-pss-sha512.der",
        "vendor/webpki-0.21.4/src/der.rs",
        "vendor/webpki-0.21.4/src/error.rs",
        "vendor/webpki-0.21.4/src/name.rs",
        "vendor/webpki-0.21.4/src/signed_data.rs",
        "vendor/webpki-0.21.4/src/time.rs",
        "vendor/webpki-0.21.4/src/trust_anchor_util.rs",
        "vendor/webpki-0.21.4/src/verify_cert.rs",
        "vendor/webpki-0.21.4/src/webpki.rs",
    ],
    crate = "webpki",
    crate_root = "vendor/webpki-0.21.4/src/webpki.rs",
    edition = "2018",
    features = [
        "default",
        "std",
        "trust_anchor_util",
    ],
    licenses = ["vendor/webpki-0.21.4/LICENSE"],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [
        ":ring-0.16.20",
        ":untrusted-0.7.1",
    ],
)

third_party_rust_library(
    name = "webpki-roots-0.21.1",
    srcs = ["vendor/webpki-roots-0.21.1/src/lib.rs"],
    crate = "webpki_roots",
    crate_root = "vendor/webpki-roots-0.21.1/src/lib.rs",
    edition = "2018",
    licenses = ["vendor/webpki-roots-0.21.1/LICENSE"],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [":webpki-0.21.4"],
)

third_party_rust_library(
    name = "zstd",
    srcs = [
        "vendor/zstd-0.9.0+zstd.1.5.0/src/block/compressor.rs",
        "vendor/zstd-0.9.0+zstd.1.5.0/src/block/decompressor.rs",
        "vendor/zstd-0.9.0+zstd.1.5.0/src/block/mod.rs",
        "vendor/zstd-0.9.0+zstd.1.5.0/src/dict.rs",
        "vendor/zstd-0.9.0+zstd.1.5.0/src/lib.rs",
        "vendor/zstd-0.9.0+zstd.1.5.0/src/stream/functions.rs",
        "vendor/zstd-0.9.0+zstd.1.5.0/src/stream/mod.rs",
        "vendor/zstd-0.9.0+zstd.1.5.0/src/stream/raw.rs",
        "vendor/zstd-0.9.0+zstd.1.5.0/src/stream/read/mod.rs",
        "vendor/zstd-0.9.0+zstd.1.5.0/src/stream/read/tests.rs",
        "vendor/zstd-0.9.0+zstd.1.5.0/src/stream/tests.rs",
        "vendor/zstd-0.9.0+zstd.1.5.0/src/stream/write/mod.rs",
        "vendor/zstd-0.9.0+zstd.1.5.0/src/stream/write/tests.rs",
        "vendor/zstd-0.9.0+zstd.1.5.0/src/stream/zio/mod.rs",
        "vendor/zstd-0.9.0+zstd.1.5.0/src/stream/zio/reader.rs",
        "vendor/zstd-0.9.0+zstd.1.5.0/src/stream/zio/writer.rs",
    ],
    crate = "zstd",
    crate_root = "vendor/zstd-0.9.0+zstd.1.5.0/src/lib.rs",
    edition = "2018",
    features = [
        "default",
        "legacy",
    ],
    licenses = ["vendor/zstd-0.9.0+zstd.1.5.0/LICENSE"],
    rustc_flags = ["--cap-lints=allow"],
    visibility = ["PUBLIC"],
    deps = [":zstd-safe-4.1.1+zstd.1.5.0"],
)

third_party_rust_library(
    name = "zstd-safe-4.1.1+zstd.1.5.0",
    srcs = [
        "vendor/zstd-safe-4.1.1+zstd.1.5.0/src/lib.rs",
        "vendor/zstd-safe-4.1.1+zstd.1.5.0/src/tests.rs",
    ],
    crate = "zstd_safe",
    crate_root = "vendor/zstd-safe-4.1.1+zstd.1.5.0/src/lib.rs",
    edition = "2018",
    features = [
        "legacy",
        "std",
    ],
    licenses = ["vendor/zstd-safe-4.1.1+zstd.1.5.0/LICENSE"],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [
        ":libc-0.2.97",
        ":zstd-sys-1.6.1+zstd.1.5.0",
    ],
)

third_party_rust_binary(
    name = "zstd-safe-4.1.1+zstd.1.5.0-build-script-build",
    srcs = ["vendor/zstd-safe-4.1.1+zstd.1.5.0/build.rs"],
    crate = "build_script_build",
    crate_root = "vendor/zstd-safe-4.1.1+zstd.1.5.0/build.rs",
    edition = "2018",
    features = [
        "legacy",
        "std",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

third_party_rust_library(
    name = "zstd-sys-1.6.1+zstd.1.5.0",
    srcs = [
        "vendor/zstd-sys-1.6.1+zstd.1.5.0/src/bindings.rs",
        "vendor/zstd-sys-1.6.1+zstd.1.5.0/src/bindings_experimental.rs",
        "vendor/zstd-sys-1.6.1+zstd.1.5.0/src/bindings_std.rs",
        "vendor/zstd-sys-1.6.1+zstd.1.5.0/src/bindings_std_experimental.rs",
        "vendor/zstd-sys-1.6.1+zstd.1.5.0/src/lib.rs",
    ],
    crate = "zstd_sys",
    crate_root = "vendor/zstd-sys-1.6.1+zstd.1.5.0/src/lib.rs",
    edition = "2018",
    features = [
        "legacy",
        "std",
    ],
    licenses = ["vendor/zstd-sys-1.6.1+zstd.1.5.0/LICENSE"],
    rustc_flags = [
        "--cap-lints=allow",
        "-lzstd",
    ],
    visibility = [],
    deps = [":libc-0.2.97"],
)
