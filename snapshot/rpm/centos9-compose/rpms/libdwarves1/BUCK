# @generated
load("@antlir//antlir/antlir2/package_managers/dnf/rules:rpm.bzl", "rpm")
load("@antlir//antlir/antlir2/package_managers/dnf/rules:xml.bzl", "xml")
rpm(name='0-1.30-1.el9.i686-54393', rpm_name='libdwarves1', epoch=0, version='1.30', release='1.el9', arch='i686', url='https://mirror.facebook.net/centos-composes/9/CentOS-Stream-9-20251005.0/compose/AppStream/x86_64/os/Packages/libdwarves1-1.30-1.el9.i686.rpm', xml=':0-1.30-1.el9.i686-54393--xml', sha1=None, sha256='5439374cd4b4a9501dd578a546e3c77520cdf55d6173326621acbfdc3af2fdc8', visibility=['//snapshot/rpm/centos9-compose/...'])
xml(name='0-1.30-1.el9.i686-54393--xml', primary='<package type="rpm">\n  <name>libdwarves1</name>\n  <arch>i686</arch>\n  <version epoch="0" ver="1.30" rel="1.el9"/>\n  <checksum type="sha256" pkgid="YES">5439374cd4b4a9501dd578a546e3c77520cdf55d6173326621acbfdc3af2fdc8</checksum>\n  <summary>Debugging information  processing library</summary>\n  <description>Debugging information processing library.</description>\n  <packager>builder@centos.org</packager>\n  <url>http://acmel.wordpress.com</url>\n  <time file="1751262145" build="1750769744"/>\n  <size package="114205" installed="252114" archive="254168"/>\n  <location href="Packages/5439374cd4b4a9501dd578a546e3c77520cdf55d6173326621acbfdc3af2fdc8/libdwarves1-0:1.30-1.el9.i686.rpm"/>\n  <format>\n    <rpm:license>GPLv2</rpm:license>\n    <rpm:vendor>CentOS</rpm:vendor>\n    <rpm:group>Unspecified</rpm:group>\n    <rpm:buildhost>x86-02.stream.rdu2.redhat.com</rpm:buildhost>\n    <rpm:sourcerpm>dwarves-1.30-1.el9.src.rpm</rpm:sourcerpm>\n    <rpm:header-range start="5624" end="14697"/>\n    <rpm:provides>\n      <rpm:entry name="libdwarves.so.1"/>\n      <rpm:entry name="libdwarves1" flags="EQ" epoch="0" ver="1.30" rel="1.el9"/>\n      <rpm:entry name="libdwarves1(x86-32)" flags="EQ" epoch="0" ver="1.30" rel="1.el9"/>\n      <rpm:entry name="libdwarves_emit.so.1"/>\n      <rpm:entry name="libdwarves_reorganize.so.1"/>\n    </rpm:provides>\n    <rpm:requires>\n      <rpm:entry name="libbpf.so.1"/>\n      <rpm:entry name="libbpf.so.1(LIBBPF_0.0.1)"/>\n      <rpm:entry name="libbpf.so.1(LIBBPF_0.1.0)"/>\n      <rpm:entry name="libbpf.so.1(LIBBPF_0.2.0)"/>\n      <rpm:entry name="libbpf.so.1(LIBBPF_0.3.0)"/>\n      <rpm:entry name="libbpf.so.1(LIBBPF_0.4.0)"/>\n      <rpm:entry name="libbpf.so.1(LIBBPF_0.6.0)"/>\n      <rpm:entry name="libbpf.so.1(LIBBPF_1.0.0)"/>\n      <rpm:entry name="libbpf.so.1(LIBBPF_1.5.0)"/>\n      <rpm:entry name="libdw.so.1"/>\n      <rpm:entry name="libdw.so.1(ELFUTILS_0.122)"/>\n      <rpm:entry name="libdw.so.1(ELFUTILS_0.130)"/>\n      <rpm:entry name="libdw.so.1(ELFUTILS_0.138)"/>\n      <rpm:entry name="libdw.so.1(ELFUTILS_0.143)"/>\n      <rpm:entry name="libdw.so.1(ELFUTILS_0.148)"/>\n      <rpm:entry name="libdw.so.1(ELFUTILS_0.157)"/>\n      <rpm:entry name="libelf.so.1"/>\n      <rpm:entry name="libelf.so.1(ELFUTILS_1.0)"/>\n      <rpm:entry name="libelf.so.1(ELFUTILS_1.3)"/>\n      <rpm:entry name="libelf.so.1(ELFUTILS_1.4)"/>\n      <rpm:entry name="libelf.so.1(ELFUTILS_1.5)"/>\n      <rpm:entry name="libz.so.1"/>\n      <rpm:entry name="rtld(GNU_HASH)"/>\n      <rpm:entry name="libc.so.6(GLIBC_2.34)"/>\n    </rpm:requires>\n  </format>\n</package>\n', filelists='<package pkgid="5439374cd4b4a9501dd578a546e3c77520cdf55d6173326621acbfdc3af2fdc8" name="libdwarves1" arch="i686">\n  <version epoch="0" ver="1.30" rel="1.el9"/>\n  <file type="dir">/usr/lib/.build-id</file>\n  <file type="dir">/usr/lib/.build-id/44</file>\n  <file>/usr/lib/.build-id/44/158fc4127610c628fe46e76e115a0533055b10</file>\n  <file type="dir">/usr/lib/.build-id/52</file>\n  <file>/usr/lib/.build-id/52/40cd6f30574d42a9b3b2a6097d5ae2dabaeb2c</file>\n  <file type="dir">/usr/lib/.build-id/5f</file>\n  <file>/usr/lib/.build-id/5f/cebdefa07216e601bc36676d60956f21611f8d</file>\n  <file>/usr/lib/libdwarves.so.1</file>\n  <file>/usr/lib/libdwarves.so.1.0.0</file>\n  <file>/usr/lib/libdwarves_emit.so.1</file>\n  <file>/usr/lib/libdwarves_emit.so.1.0.0</file>\n  <file>/usr/lib/libdwarves_reorganize.so.1</file>\n  <file>/usr/lib/libdwarves_reorganize.so.1.0.0</file>\n</package>\n', other='<package pkgid="5439374cd4b4a9501dd578a546e3c77520cdf55d6173326621acbfdc3af2fdc8" name="libdwarves1" arch="i686">\n  <version epoch="0" ver="1.30" rel="1.el9"/>\n  <changelog author="Viktor Malik &lt;vmalik@redhat.com&gt; - 1.27-1" date="1718884800">- Resolves: RHEL-30780\n- New release: v1.26\n- When expanding types using \'pahole -E\' do it for union and struct typedefs and for enums too.\n- Print number of holes, bit holes and bit paddings in class member types.\n- Introduce --contains_enumerator=ENUMERATOR_NAME:\n- Fix pretty printing using DWARF, waiting for a CU with both class (-C) and a specified "type_enum".\n- Add support for DW_TAG_constant in the DWARF loader, first seen in Go DWARF.\n- Fix loading DW_TAG_subroutine_type generated by the Go compiler.\n- Fix loading of 32-bit signed enums from BTF.\n- Add \'pahole --btf_features\' to allow consumers to specify an opt-in set of features they want to use in BTF encoding.\n- Parallelize loading BTF and DWARF, speeding up a bit btfdiff.\n- Do type expansion to cover "private" types and enumerations in btfdiff.\n- New release: v1.27\n- Reproducible parallel builds: multiple runs with different number of loading/encoding threads produce the same result.\n- Inject kfunc decl tags into BTF from the BTF IDs ELF section in the Linux kernel vmlinux file.\n- Sanitize unsupported DWARF int type with greater-than-16 byte, as BTF doesn\'t support it.\n- Initial support for BTF_KIND_DECL_TAG in the BTF loader, adding support in pfunct output.\n- Fix hole discovery with inheritance in C++.</changelog>\n  <changelog author="Davide Cavalca &lt;dcavalca@centosproject.org&gt; - 1.27-2" date="1723464000">- Backport upstream bugfixes for clang builds\n  Resolves: RHEL-54022</changelog>\n  <changelog author="Gregory Bell &lt;grbell@redhat.com&gt; - 1.30-1" date="1750420800">- New release: 1.30\n- Better detection of abort during DWARF loader thread processing\n- pahole now detects presence of libbpf APIs and BTF features using weak function\n  declarations when built using a shared library libbpf\n- Type tags are emitted for BPF arena pointers with new BTF "attributes" feature\n- New release: 1.29\n- Multithreading is now in the DWARF loader using a jobs queue and a pool of worker threads.\n- The BTF encoding now is always reproducible, and as fast/faster than before.\n- The memory consumption is reduced.\n- Support for multiple BTF_DECL_TAGs pointing to same tag.\n- Verify that pfunct prints btf_decl_tags read from BTF.\n- Don\'t print functions twice when using \'pfunct -f function_name\'.\n- New release: 1.28\n- Various improvements to reduce the memory footprint of pahole, notably when doing BTF encoding.\n- Show flexible arrays statistics\n- Add \'--padding N\' and \'--padding_ge N\' to show structs with paddings\n- Introduce --running_kernel_vmlinux to find a vmlinux that matches the build-id of the running kernel.\n- Don\'t stop pfunct output at the first function that matches a filter, show all of them\n- Allow encoding data about all global variables, not just per CPU ones\n- Handle .BTF_ids section endianness, fully supporting cross builds\n- Generate decl tags for bpf_fastcall for eligible kfuncs\n- Add "distilled_base" BTF feature to split BTF generation.\n- Use the ELF_C_READ_MMAP mode with libelf, reducing peak memory utilization\n- Allow overriding /sys/kernel/btf/vmlinux via the PAHOLE_VMLINUX_BTF_FILENAME env var\n- Allow setting the list of compile units via PAHOLE_LANG_EXCLUDE env var\n- Serialize access to elfutils dwarf_getlocation().\n- Honour --lang_exclude when merging LTO built CUs.\n- Add the debuginfod client cache directory to the vmlinux search path.\n- Print the CU\'s language when a tag isn\'t supported.\n- Initial support for GNU_formal_parameter_pack, GNU_template_parameter_pack, template_value_param and template_type_param DWARF tags.\n- Improve the parameter parsing by checking DW_OP_[GNU_]entry_value\n- Introduce a tests/ directory with regression tests</changelog>\n</package>\n')
rpm(name='0-1.30-1.el9.x86_64-7947f', rpm_name='libdwarves1', epoch=0, version='1.30', release='1.el9', arch='x86_64', url='https://mirror.facebook.net/centos-composes/9/CentOS-Stream-9-20251005.0/compose/AppStream/x86_64/os/Packages/libdwarves1-1.30-1.el9.x86_64.rpm', xml=':0-1.30-1.el9.x86_64-7947f--xml', sha1=None, sha256='7947fec5ba40d1afee6c0358e90656c08e328aead20a8eab289768961ff7824c', visibility=['//snapshot/rpm/centos9-compose/...'])
xml(name='0-1.30-1.el9.x86_64-7947f--xml', primary='<package type="rpm">\n  <name>libdwarves1</name>\n  <arch>x86_64</arch>\n  <version epoch="0" ver="1.30" rel="1.el9"/>\n  <checksum type="sha256" pkgid="YES">7947fec5ba40d1afee6c0358e90656c08e328aead20a8eab289768961ff7824c</checksum>\n  <summary>Debugging information  processing library</summary>\n  <description>Debugging information processing library.</description>\n  <packager>builder@centos.org</packager>\n  <url>http://acmel.wordpress.com</url>\n  <time file="1751262150" build="1750769749"/>\n  <size package="106152" installed="241740" archive="243812"/>\n  <location href="Packages/7947fec5ba40d1afee6c0358e90656c08e328aead20a8eab289768961ff7824c/libdwarves1-0:1.30-1.el9.x86_64.rpm"/>\n  <format>\n    <rpm:license>GPLv2</rpm:license>\n    <rpm:vendor>CentOS</rpm:vendor>\n    <rpm:group>Unspecified</rpm:group>\n    <rpm:buildhost>x86-03.stream.rdu2.redhat.com</rpm:buildhost>\n    <rpm:sourcerpm>dwarves-1.30-1.el9.src.rpm</rpm:sourcerpm>\n    <rpm:header-range start="5624" end="14853"/>\n    <rpm:provides>\n      <rpm:entry name="libdwarves.so.1()(64bit)"/>\n      <rpm:entry name="libdwarves1" flags="EQ" epoch="0" ver="1.30" rel="1.el9"/>\n      <rpm:entry name="libdwarves1(x86-64)" flags="EQ" epoch="0" ver="1.30" rel="1.el9"/>\n      <rpm:entry name="libdwarves_emit.so.1()(64bit)"/>\n      <rpm:entry name="libdwarves_reorganize.so.1()(64bit)"/>\n    </rpm:provides>\n    <rpm:requires>\n      <rpm:entry name="libbpf.so.1()(64bit)"/>\n      <rpm:entry name="libbpf.so.1(LIBBPF_0.0.1)(64bit)"/>\n      <rpm:entry name="libbpf.so.1(LIBBPF_0.1.0)(64bit)"/>\n      <rpm:entry name="libbpf.so.1(LIBBPF_0.2.0)(64bit)"/>\n      <rpm:entry name="libbpf.so.1(LIBBPF_0.3.0)(64bit)"/>\n      <rpm:entry name="libbpf.so.1(LIBBPF_0.4.0)(64bit)"/>\n      <rpm:entry name="libbpf.so.1(LIBBPF_0.6.0)(64bit)"/>\n      <rpm:entry name="libbpf.so.1(LIBBPF_1.0.0)(64bit)"/>\n      <rpm:entry name="libbpf.so.1(LIBBPF_1.5.0)(64bit)"/>\n      <rpm:entry name="libdw.so.1()(64bit)"/>\n      <rpm:entry name="libdw.so.1(ELFUTILS_0.122)(64bit)"/>\n      <rpm:entry name="libdw.so.1(ELFUTILS_0.130)(64bit)"/>\n      <rpm:entry name="libdw.so.1(ELFUTILS_0.138)(64bit)"/>\n      <rpm:entry name="libdw.so.1(ELFUTILS_0.143)(64bit)"/>\n      <rpm:entry name="libdw.so.1(ELFUTILS_0.148)(64bit)"/>\n      <rpm:entry name="libdw.so.1(ELFUTILS_0.157)(64bit)"/>\n      <rpm:entry name="libelf.so.1()(64bit)"/>\n      <rpm:entry name="libelf.so.1(ELFUTILS_1.0)(64bit)"/>\n      <rpm:entry name="libelf.so.1(ELFUTILS_1.3)(64bit)"/>\n      <rpm:entry name="libelf.so.1(ELFUTILS_1.4)(64bit)"/>\n      <rpm:entry name="libelf.so.1(ELFUTILS_1.5)(64bit)"/>\n      <rpm:entry name="libz.so.1()(64bit)"/>\n      <rpm:entry name="rtld(GNU_HASH)"/>\n      <rpm:entry name="libc.so.6(GLIBC_2.34)(64bit)"/>\n    </rpm:requires>\n  </format>\n</package>\n', filelists='<package pkgid="7947fec5ba40d1afee6c0358e90656c08e328aead20a8eab289768961ff7824c" name="libdwarves1" arch="x86_64">\n  <version epoch="0" ver="1.30" rel="1.el9"/>\n  <file type="dir">/usr/lib/.build-id</file>\n  <file type="dir">/usr/lib/.build-id/38</file>\n  <file>/usr/lib/.build-id/38/e4f5928d8380830e15f68017c84495191653ce</file>\n  <file type="dir">/usr/lib/.build-id/b2</file>\n  <file>/usr/lib/.build-id/b2/e255d1092608eba3d4d60f89a9f377663dd2af</file>\n  <file type="dir">/usr/lib/.build-id/bb</file>\n  <file>/usr/lib/.build-id/bb/933d11fe0fd509c9abb0a259033408292efe7f</file>\n  <file>/usr/lib64/libdwarves.so.1</file>\n  <file>/usr/lib64/libdwarves.so.1.0.0</file>\n  <file>/usr/lib64/libdwarves_emit.so.1</file>\n  <file>/usr/lib64/libdwarves_emit.so.1.0.0</file>\n  <file>/usr/lib64/libdwarves_reorganize.so.1</file>\n  <file>/usr/lib64/libdwarves_reorganize.so.1.0.0</file>\n</package>\n', other='<package pkgid="7947fec5ba40d1afee6c0358e90656c08e328aead20a8eab289768961ff7824c" name="libdwarves1" arch="x86_64">\n  <version epoch="0" ver="1.30" rel="1.el9"/>\n  <changelog author="Viktor Malik &lt;vmalik@redhat.com&gt; - 1.27-1" date="1718884800">- Resolves: RHEL-30780\n- New release: v1.26\n- When expanding types using \'pahole -E\' do it for union and struct typedefs and for enums too.\n- Print number of holes, bit holes and bit paddings in class member types.\n- Introduce --contains_enumerator=ENUMERATOR_NAME:\n- Fix pretty printing using DWARF, waiting for a CU with both class (-C) and a specified "type_enum".\n- Add support for DW_TAG_constant in the DWARF loader, first seen in Go DWARF.\n- Fix loading DW_TAG_subroutine_type generated by the Go compiler.\n- Fix loading of 32-bit signed enums from BTF.\n- Add \'pahole --btf_features\' to allow consumers to specify an opt-in set of features they want to use in BTF encoding.\n- Parallelize loading BTF and DWARF, speeding up a bit btfdiff.\n- Do type expansion to cover "private" types and enumerations in btfdiff.\n- New release: v1.27\n- Reproducible parallel builds: multiple runs with different number of loading/encoding threads produce the same result.\n- Inject kfunc decl tags into BTF from the BTF IDs ELF section in the Linux kernel vmlinux file.\n- Sanitize unsupported DWARF int type with greater-than-16 byte, as BTF doesn\'t support it.\n- Initial support for BTF_KIND_DECL_TAG in the BTF loader, adding support in pfunct output.\n- Fix hole discovery with inheritance in C++.</changelog>\n  <changelog author="Davide Cavalca &lt;dcavalca@centosproject.org&gt; - 1.27-2" date="1723464000">- Backport upstream bugfixes for clang builds\n  Resolves: RHEL-54022</changelog>\n  <changelog author="Gregory Bell &lt;grbell@redhat.com&gt; - 1.30-1" date="1750420800">- New release: 1.30\n- Better detection of abort during DWARF loader thread processing\n- pahole now detects presence of libbpf APIs and BTF features using weak function\n  declarations when built using a shared library libbpf\n- Type tags are emitted for BPF arena pointers with new BTF "attributes" feature\n- New release: 1.29\n- Multithreading is now in the DWARF loader using a jobs queue and a pool of worker threads.\n- The BTF encoding now is always reproducible, and as fast/faster than before.\n- The memory consumption is reduced.\n- Support for multiple BTF_DECL_TAGs pointing to same tag.\n- Verify that pfunct prints btf_decl_tags read from BTF.\n- Don\'t print functions twice when using \'pfunct -f function_name\'.\n- New release: 1.28\n- Various improvements to reduce the memory footprint of pahole, notably when doing BTF encoding.\n- Show flexible arrays statistics\n- Add \'--padding N\' and \'--padding_ge N\' to show structs with paddings\n- Introduce --running_kernel_vmlinux to find a vmlinux that matches the build-id of the running kernel.\n- Don\'t stop pfunct output at the first function that matches a filter, show all of them\n- Allow encoding data about all global variables, not just per CPU ones\n- Handle .BTF_ids section endianness, fully supporting cross builds\n- Generate decl tags for bpf_fastcall for eligible kfuncs\n- Add "distilled_base" BTF feature to split BTF generation.\n- Use the ELF_C_READ_MMAP mode with libelf, reducing peak memory utilization\n- Allow overriding /sys/kernel/btf/vmlinux via the PAHOLE_VMLINUX_BTF_FILENAME env var\n- Allow setting the list of compile units via PAHOLE_LANG_EXCLUDE env var\n- Serialize access to elfutils dwarf_getlocation().\n- Honour --lang_exclude when merging LTO built CUs.\n- Add the debuginfod client cache directory to the vmlinux search path.\n- Print the CU\'s language when a tag isn\'t supported.\n- Initial support for GNU_formal_parameter_pack, GNU_template_parameter_pack, template_value_param and template_type_param DWARF tags.\n- Improve the parameter parsing by checking DW_OP_[GNU_]entry_value\n- Introduce a tests/ directory with regression tests</changelog>\n</package>\n')
