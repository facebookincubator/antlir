# @generated
load("@antlir//antlir/antlir2/package_managers/dnf/rules:rpm.bzl", "rpm")
load("@antlir//antlir/antlir2/package_managers/dnf/rules:xml.bzl", "xml")
rpm(name='0-1.6.5-1.el10_0.noarch-f5132', rpm_name='atomic-queue-devel', epoch=0, version='1.6.5', release='1.el10_0', arch='noarch', url='https://mirror.facebook.net/fedora/epel/10/Everything/x86_64/Packages/a/atomic-queue-devel-1.6.5-1.el10_0.noarch.rpm', xml=':0-1.6.5-1.el10_0.noarch-f5132--xml', sha1=None, sha256='f513295b502567902b8f45e3cd84217de28bda17426079c2fd68c0b638a8fec3', visibility=['//snapshot/rpm/centos10/...'])
xml(name='0-1.6.5-1.el10_0.noarch-f5132--xml', primary='<package type="rpm">\n  <name>atomic-queue-devel</name>\n  <arch>noarch</arch>\n  <version epoch="0" ver="1.6.5" rel="1.el10_0"/>\n  <checksum type="sha256" pkgid="YES">f513295b502567902b8f45e3cd84217de28bda17426079c2fd68c0b638a8fec3</checksum>\n  <summary>Development files for atomic-queue</summary>\n  <description>C++14 multiple-producer-multiple-consumer lockless queues based on circular\nbuffer with std::atomic.\n\nIt has been developed, tested and benchmarked on Linux, but should support any\nC++14 platforms which implement std::atomic.\n\nThe main design principle these queues follow is minimalism: the bare minimum\nof atomic operations, fixed size buffer, value semantics.\n\nThese qualities are also limitations:\n\n  • The maximum queue size must be set at compile time or construction time.\n    The circular buffer side-steps the memory reclamation problem inherent in\n    linked-list based queues for the price of fixed buffer size. See Effective\n    memory reclamation for lock-free data structures in C++ for more details.\n    Fixed buffer size may not be that much of a limitation, since once the\n    queue gets larger than the maximum expected size that indicates a problem\n    that elements aren’t processed fast enough, and if the queue keeps growing\n    it may eventually consume all available memory which may affect the entire\n    system, rather than the problematic process only. The only apparent\n    inconvenience is that one has to do an upfront back-of-the-envelope\n    calculation on what would be the largest expected/acceptable queue size.\n  • There are no OS-blocking push/pop functions. This queue is designed for\n    ultra-low-latency scenarios and using an OS blocking primitive would be\n    sacrificing push-to-pop latency. For lowest possible latency one cannot\n    afford blocking in the OS kernel because the wake-up latency of a blocked\n    thread is about 1-3 microseconds, whereas this queue’s round-trip time can\n    be as low as 150 nanoseconds.\n\nUltra-low-latency applications need just that and nothing more. The minimalism\npays off, see the throughput and latency benchmarks.\n\nAvailable containers are:\n\n  • AtomicQueue - a fixed size ring-buffer for atomic elements.\n  • OptimistAtomicQueue - a faster fixed size ring-buffer for atomic elements\n    which busy-waits when empty or full.\n  • AtomicQueue2 - a fixed size ring-buffer for non-atomic elements.\n  • OptimistAtomicQueue2 - a faster fixed size ring-buffer for non-atomic\n    elements which busy-waits when empty or full.\n\nThese containers have corresponding AtomicQueueB, OptimistAtomicQueueB,\nAtomicQueueB2, OptimistAtomicQueueB2 versions where the buffer size is\nspecified as an argument to the constructor.\n\nTotally ordered mode is supported. In this mode consumers receive messages in\nthe same FIFO order the messages were posted. This mode is supported for push\nand pop functions, but for not the try_ versions. On Intel x86 the totally\nordered mode has 0 cost, as of 2019.\n\nSingle-producer-single-consumer mode is supported. In this mode, no\nread-modify-write instructions are necessary, only the atomic loads and stores.\nThat improves queue throughput significantly.\n\nMove-only queue element types are fully supported. For example, a queue of\nstd::unique_ptr&lt;T&gt; elements would be AtomicQueue2B&lt;std::unique_ptr&lt;T&gt;&gt; or\nAtomicQueue2&lt;std::unique_ptr&lt;T&gt;, CAPACITY&gt;.\n\nThe atomic-queue-devel package contains libraries and header files for\ndeveloping applications that use atomic-queue.</description>\n  <packager>Fedora Project</packager>\n  <url>https://github.com/max0x7ba/atomic_queue</url>\n  <time file="1727969474" build="1727960083"/>\n  <size package="28569" installed="66232" archive="67880"/>\n  <location href="Packages/f513295b502567902b8f45e3cd84217de28bda17426079c2fd68c0b638a8fec3/atomic-queue-devel-0:1.6.5-1.el10_0.noarch.rpm"/>\n  <format>\n    <rpm:license>MIT</rpm:license>\n    <rpm:vendor>Fedora Project</rpm:vendor>\n    <rpm:group>Unspecified</rpm:group>\n    <rpm:buildhost>buildvm-a64-30.iad2.fedoraproject.org</rpm:buildhost>\n    <rpm:sourcerpm>atomic-queue-1.6.5-1.el10_0.src.rpm</rpm:sourcerpm>\n    <rpm:header-range start="4504" end="12777"/>\n    <rpm:provides>\n      <rpm:entry name="atomic-queue-devel" flags="EQ" epoch="0" ver="1.6.5" rel="1.el10_0"/>\n      <rpm:entry name="atomic-queue-static" flags="EQ" epoch="0" ver="1.6.5" rel="1.el10_0"/>\n    </rpm:provides>\n  </format>\n</package>\n', filelists='<package pkgid="f513295b502567902b8f45e3cd84217de28bda17426079c2fd68c0b638a8fec3" name="atomic-queue-devel" arch="noarch">\n  <version epoch="0" ver="1.6.5" rel="1.el10_0"/>\n  <file type="dir">/usr/include/atomic_queue</file>\n  <file>/usr/include/atomic_queue/atomic_queue.h</file>\n  <file>/usr/include/atomic_queue/atomic_queue_mutex.h</file>\n  <file>/usr/include/atomic_queue/barrier.h</file>\n  <file>/usr/include/atomic_queue/defs.h</file>\n  <file>/usr/include/atomic_queue/spinlock.h</file>\n  <file type="dir">/usr/share/doc/atomic-queue-devel</file>\n  <file>/usr/share/doc/atomic-queue-devel/README.md</file>\n  <file type="dir">/usr/share/licenses/atomic-queue-devel</file>\n  <file>/usr/share/licenses/atomic-queue-devel/LICENSE</file>\n</package>\n', other='<package pkgid="f513295b502567902b8f45e3cd84217de28bda17426079c2fd68c0b638a8fec3" name="atomic-queue-devel" arch="noarch">\n  <version epoch="0" ver="1.6.5" rel="1.el10_0"/>\n  <changelog author="Fedora Release Engineering &lt;releng@fedoraproject.org&gt; - 1.4-3" date="1689768000">- Rebuilt for https://fedoraproject.org/wiki/Fedora_39_Mass_Rebuild</changelog>\n  <changelog author="Benjamin A. Beasley &lt;code@musicinmybrain.net&gt; - 1.5-1" date="1700136000">- Update to 1.5 (close RHBZ#2249919)</changelog>\n  <changelog author="Fedora Release Engineering &lt;releng@fedoraproject.org&gt; - 1.5-2" date="1705665600">- Rebuilt for https://fedoraproject.org/wiki/Fedora_40_Mass_Rebuild</changelog>\n  <changelog author="Fedora Release Engineering &lt;releng@fedoraproject.org&gt; - 1.5-3" date="1705924800">- Rebuilt for https://fedoraproject.org/wiki/Fedora_40_Mass_Rebuild</changelog>\n  <changelog author="Benjamin A. Beasley &lt;code@musicinmybrain.net&gt; - 1.6.1-1" date="1707912000">- [packit] 1.6.1 upstream release</changelog>\n  <changelog author="Benjamin A. Beasley &lt;code@musicinmybrain.net&gt; - 1.6.2-1" date="1709553600">- Update to 1.6.2</changelog>\n  <changelog author="Benjamin A. Beasley &lt;code@musicinmybrain.net&gt; - 1.6.3-1" date="1709553601">- Update to 1.6.3: Fixes C++20 compile errors</changelog>\n  <changelog author="Fedora Release Engineering &lt;releng@fedoraproject.org&gt; - 1.6.3-3" date="1721217600">- Rebuilt for https://fedoraproject.org/wiki/Fedora_41_Mass_Rebuild</changelog>\n  <changelog author="Benjamin A. Beasley &lt;code@musicinmybrain.net&gt; - 1.6.4-1" date="1721649600">- Update to 1.6.4 (close RHBZ#2299261)</changelog>\n  <changelog author="Packit &lt;hello@packit.dev&gt; - 1.6.5-1" date="1727956800">- Update to 1.6.5 upstream release\n- Resolves: rhbz#2316270</changelog>\n</package>\n')
