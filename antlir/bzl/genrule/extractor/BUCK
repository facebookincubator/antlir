load("//antlir/bzl:constants.bzl", "REPO_CFG")
load("//antlir/bzl:image.bzl", "image")
load("//antlir/bzl:oss_shim.bzl", "python_binary", "third_party")

image.layer(
    name = "extract-tools-layer",
    # We use the default build appliance with the assumption
    # that it has all the right tools we need (ie, bin-utils).
    # Eventually the hope is that the extract binary from ths
    # tool would end up being incliuded in the BA because
    # it is so awesome and everyone wants to use it. Until
    # then we will settle for this.
    parent_layer = REPO_CFG.build_appliance_default,
    features = [
        image.ensure_dirs_exist(
            "/output",
        ),
        image.install_buck_runnable(
            "//antlir/bzl/genrule/extractor:extract",
            "/extract",
        ),
    ],
    antlir_rule = "user-internal",
    visibility = ["//antlir/..."],
)

python_binary(
    name = "extract",
    srcs = [
        "extract.py",
    ],
    main_module = "antlir.bzl.genrule.extractor.extract",
    # this runs in a layer, so should be self-contained to work in OSS
    par_style = "xar",
    deps = [
        "//antlir:fs_utils",
        third_party.library(
            "pyelftools",
            platform = "python",
        ),
    ],
)
