load("//antlir/bzl:constants.bzl", "REPO_CFG")
load("//antlir/bzl:image.bzl", "image")
load("//antlir/bzl/image/feature:defs.bzl", "feature")

image.layer(
    name = "_grub2",
    parent_layer = "//metalos/os:metalos",
    features = [
        image.rpms_install([
            "grub2-efi-x64",
            "grub2-efi-x64-modules",
        ]),
    ],
)

grub2_modules = [
    "all_video",
    "blscfg",
]

# The base image.layer for a systemd boot partition
# There is no kernel, initrd, or loader entries
# configured in this layer.
image.layer(
    name = "base",
    features = [
        image.ensure_subdirs_exist("/", "EFI"),
        image.ensure_subdirs_exist("/EFI", "BOOT"),
        image.ensure_subdirs_exist("/EFI", "centos"),
        image.ensure_subdirs_exist("/", "grub2"),
        image.ensure_subdirs_exist("/grub2", "x86_64-efi"),
        image.ensure_subdirs_exist("/", "loader"),
        image.ensure_subdirs_exist("/loader", "entries"),
        image.clone(
            ":_grub2",
            "/boot/efi/EFI/centos/grubx64.efi",
            "/EFI/centos/grubx64.efi",
        ),
        image.clone(
            ":_grub2",
            "/boot/efi/EFI/centos/grubx64.efi",
            "/EFI/BOOT/BOOTX64.efi",
        ),
        feature.install("grub.cfg", "/EFI/BOOT/grub.cfg"),
    ] + [
        image.clone(
            ":_grub2",
            "/usr/lib/grub/x86_64-efi/{}.mod".format(i),
            "/grub2/x86_64-efi/{}.mod".format(i),
        )
        for i in grub2_modules
    ],
    flavor = REPO_CFG.antlir_linux_flavor,
    visibility = ["PUBLIC"],
)
