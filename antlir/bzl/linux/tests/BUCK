load("//antlir/antlir2/bzl/feature:defs.bzl", "feature")
load("//antlir/antlir2/bzl/image:defs.bzl", "image")
load("//antlir/antlir2/testing:image_test.bzl", "image_python_test")
load("//antlir/bzl/linux:defs.bzl", "linux")

oncall("antlir")

image.layer(
    name = "busybox-src-from-img",
    features = [
        feature.rpms_install(rpms = ["busybox"]),
    ],
)

# Now use the respective busybox source layers to construct
# test linux layers.
image.layer(
    name = "test-linux-busybox-from-img",
    features = [
        linux.filesystem.install(),
        linux.busybox.install(
            src = ":busybox-src-from-img",
            src_path = "/usr/sbin/busybox",
        ),
    ],
)

# Time tests
image.layer(
    name = "test-layer-timezone-utc",
    features = [
        feature.rpms_install(rpms = ["coreutils"]),
        linux.time.timezone(zone = "UTC"),
    ],
)

image_python_test(
    name = "test-timezone-utc",
    srcs = ["test_time.py"],
    env = {
        "ANTLIR_TEST_EXPECTED_TIMEZONES": "UTC",
    },
    layer = ":test-layer-timezone-utc",
)

image.layer(
    name = "test-layer-timezone-us-pacific",
    features = [
        feature.rpms_install(rpms = ["coreutils"]),
        linux.time.timezone(zone = "US/Pacific"),
    ],
)

image_python_test(
    name = "test-timezone-us-pacific",
    srcs = ["test_time.py"],
    env = {
        "ANTLIR_TEST_EXPECTED_TIMEZONES": "PDT PST",
    },
    layer = ":test-layer-timezone-us-pacific",
)

linux.release.file(
    name = "release-vcs",
    layer = ":test-layer-os-release",
    os_id = "centos",
    os_name = "AntlirTest",
    os_version = "9",
    os_version_id = "9",
    variant = "Test",
    vcs_rev = "6efad6997e43d402e3a5fd3b92d0e8bea8f8c879",
    vcs_rev_time = 1712265328,
)

image.layer(
    name = "test-layer-os-release",
    features = [
        feature.rpms_install(rpms = ["coreutils"]),
        linux.release.install(
            api_versions = {
                "BAR": 22,
                "FOO_QUX": 7,
            },
            layer = ":test-layer-os-release",
            os_id = "centos",
            os_name = "AntlirTest",
            # dummy select to ensure that selects are resolved instead of just
            # being dumped with 'repr'
            os_version = select({
                "ovr_config//cpu:arm64": "9",
                "ovr_config//cpu:x86_64": "9",
            }),
            path = "/usr/lib/os-release",
            variant = "Test",
        ),
        feature.install(
            src = ":release-vcs",
            dst = "/usr/lib/os-release-vcs",
        ),
    ],
)

image_python_test(
    name = "test-os-release",
    srcs = ["test_os_release.py"],
    layer = ":test-layer-os-release",
    deps = [
        "//antlir:fs_utils",
    ],
)
