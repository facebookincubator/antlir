load("//antlir/bzl:constants.bzl", "REPO_CFG")
load("//antlir/bzl:image.bzl", "image")
load("//antlir/bzl:oss_shim.bzl", "rust_binary", "third_party")

image.layer(
    name = "extract-tools-layer",
    # This parent layer must not have any host mounts providing any of the
    # directories that extracted binaries might depend on, so as to not
    # conflict with the "protected paths" check in the Antlir compiler.
    parent_layer = REPO_CFG.artifact["extractor.common_deps"],
    features = [
        image.rpms_install([
            "basesystem",
            "coreutils",
            "util-linux",
        ]),
        image.ensure_dirs_exist(
            "/output",
        ),
        image.install_buck_runnable(
            "//antlir/bzl/foreign/extractor:extract",
            "/extract",
        ),
    ],
    antlir_rule = "user-internal",
)

rust_binary(
    name = "extract",
    srcs = ["extract.rs"],
    deps = [
        third_party.library(
            lib,
            platform = "rust",
        )
        for lib in [
            "anyhow",
            "goblin",
            "structopt",
        ]
    ],
)
