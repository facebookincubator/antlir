load("//antlir/bzl:build_defs.bzl", "buck_filegroup", "rust_binary", "rust_library")

oncall("antlir")

rust_library(
    name = "ir",
    srcs = ["ir.rs"],
    doctests = False,  # FIXME
    deps = [
        "anyhow",
        "derive_more",
        "serde",
        "serde_json",
    ],
)

rust_binary(
    name = "bzl2ir",
    srcs = ["bzl2ir.rs"],
    crate = "bzl2ir",
    test_deps = ["maplit"],
    visibility = [
        "PUBLIC", # @oss-enable
    ],
    deps = [
        "allocative",
        "anyhow",
        "derive_more",
        "serde",
        "serde_json",
        "slotmap",
        "starlark",
        "structopt",
        ":ir",
    ],
)

rust_binary(
    name = "ir2code",
    srcs = ["ir2code.rs"],
    visibility = ["PUBLIC"],
    deps = [
        "anyhow",
        "clap",
        "derive_more",
        "handlebars",
        "itertools",
        "serde",
        "serde_json",
        ":ir",
    ],
)

buck_filegroup(
    name = "templates",
    srcs = glob(["templates/*.handlebars"]),
    visibility = ["PUBLIC"],
)

rust_library(
    name = "shape",
    srcs = ["shape.rs"],
    visibility = ["PUBLIC"],
    deps = [
        "anyhow",
        "fbthrift",
        "serde",
    ],
)

rust_binary(
    name = "serialize-shape",
    srcs = ["serialize_shape.rs"],
    visibility = ["PUBLIC"],
    deps = [
        "anyhow",
        "clap",
        "serde_json",
        "//antlir:find_root",
        "//antlir/filesystem/stdio_path:stdio_path",
    ],
)
