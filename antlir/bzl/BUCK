load("//antlir/bzl:oss_shim.bzl", "export_file", "python_binary", "python_library", "rust_library")
load("//antlir/bzl:shape.bzl", "shape")
load("//antlir/bzl:target_helpers.bzl", "antlir_dep")
load(":test_hoist.bzl", "test_hoist")

shape.impl(
    name = "container_opts.shape",
    deps = ["//antlir/bzl:proxy_server_config.shape"],
)

shape.impl(
    name = "image_source.shape",
    deps = ["//antlir/bzl:target.shape"],
)

export_file(name = "target_tagger_helper.bzl")

shape.impl(
    name = "genrule_layer.shape",
    deps = [":container_opts.shape"],
)

export_file(name = "shape.bzl")

export_file(name = "stat.bzl")

python_binary(
    name = "fail-with-message",
    srcs = ["fail_with_message.py"],
    main_module = "antlir.bzl.fail_with_message",
    visibility = ["PUBLIC"],
    deps = [
        "//antlir:cli",
        "//antlir:common",
    ],
)

test_hoist(
    name = "test-hoist",
)

####
# Here lies a custom implementation of the target.shape backing code.
# You almost certainly _DO NOT_ want to copy this behavior anywhere
# else.  This is very specific to this shape and not for general use.
####
python_library(
    # @autodeps-skip
    name = "target.shape-python",
    srcs = {
        "shape2/target.py": "__init__.py",
    },
    antlir_rule = "user-facing",
    base_module = "antlir.bzl.target",
    visibility = ["PUBLIC"],
    deps = [
        antlir_dep(":shape"),
        antlir_dep(":cli"),
    ],
)

rust_library(
    name = "target.shape-rust",
    srcs = [
        "shape2/target.rs",
    ],
    antlir_rule = "user-facing",
    crate = "target",
    crate_root = "shape2/target.rs",
    visibility = ["PUBLIC"],
    deps = [
        antlir_dep("bzl/shape2:shape"),
        "anyhow",
        "fbthrift",
        "serde",
    ],
)

shape.impl(
    name = "target.shape",
    expert_only_custom_impl = True,
)
####
# End dumb shit
####

shape.impl(
    name = "constants.shape",
    visibility = [
        "//antlir/...",
        "//tupperware/cm/antlir/...",
    ],
)

shape.impl(
    name = "loopback_opts.shape",
)

shape.impl(
    name = "gpt.shape",
    deps = ["//antlir/bzl:target.shape"],
)

shape.impl(
    name = "target_tagger.shape",
)

shape.impl(
    name = "proxy_server_config.shape",
    deps = ["//antlir/bzl:target.shape"],
)

shape.impl(
    name = "flavor.shape",
    deps = ["//antlir/bzl:target.shape"],
)
