load("//antlir/antlir2/bzl/feature:defs.bzl", "feature")

oncall("antlir")

feature.new(
    name = "features",
    features = [
        # Ensure that we don't end up with upstream dnf repos that might
        # interfere with the snapshot
        feature.remove(
            must_exist = False,
            path = "/etc/yum.repos.d",
        ),
        feature.remove(
            must_exist = False,
            path = "/etc/dnf/dnf.conf",
        ),
        feature.ensure_dirs_exist(dirs = "/__antlir2__"),
        feature.ensure_subdirs_exist(
            into_dir = "/__antlir2__",
            subdirs_to_create = "root",
        ),
        feature.ensure_subdirs_exist(
            into_dir = "/__antlir2__",
            subdirs_to_create = "build_appliance",
        ),
        feature.ensure_subdirs_exist(
            into_dir = "/__antlir2__",
            subdirs_to_create = "working_directory",
        ),
        feature.ensure_subdirs_exist(
            into_dir = "/__antlir2__",
            subdirs_to_create = "out",
        ),
        ":rpms",
        "//antlir/antlir2/package_managers/dnf/build_appliance:features",
    ],
    visibility = [
        "PUBLIC",
    ],
)

feature.new(
    name = "rpms",
    features = [
        feature.rpms_install(rpms = [
            "cpio",
            "dnf",
            "dosfstools",
            "e2fsprogs",
            "mtools",
            "python3",
            "python3-dnf",
            "python3-hawkey",
            "python3-libdnf",
            "python3-rpm",
            "rpm-build",
            "rpm-sign",
            "squashfs-tools",
            "zstd",
        ]),
    ],
    visibility = [],
)
