load("//antlir/antlir2/bzl/feature:defs.bzl", "feature")
load("//antlir/antlir2/bzl/image:defs.bzl", "image")
load("//antlir/antlir2/cfg/strip_configuration:strip_configuration.bzl", "strip_configuration_alias")
load("//antlir/antlir2/testing:image_test.bzl", "image_rust_test")

oncall("antlir")

prelude = native

prelude.write_file(
    name = "cpu-arch",
    out = "cpu-arch",
    content = select({
        "DEFAULT": ["no-configuration"],
        "ovr_config//cpu:arm64": ["aarch64"],
        "ovr_config//cpu:x86_64": ["x86_64"],
    }),
)

strip_configuration_alias(
    name = "cpu-arch.stripped_alias",
    actual = ":cpu-arch",
)

prelude.configured_alias(
    name = "cpu-arch.configured_alias",
    actual = ":cpu-arch",
    platform = "antlir//antlir/antlir2/cfg/strip_configuration:empty-platform",
)

image.layer(
    name = "layer",
    features = [
        feature.rpms_install(rpms = ["basesystem"]),
        feature.install(
            src = ":cpu-arch",
            dst = "/cpu-arch",
        ),
        feature.install(
            src = ":cpu-arch.stripped_alias",
            dst = "/cpu-arch.stripped_alias",
        ),
        feature.install(
            src = ":cpu-arch.configured_alias",
            dst = "/cpu-arch.configured_alias",
        ),
    ],
)

image_rust_test(
    name = "test",
    srcs = ["test.rs"],
    crate_root = "test.rs",
    layer = ":layer",
)
