load("//antlir/antlir2/bzl/feature:defs.bzl", "feature")
load("//antlir/antlir2/bzl/image:defs.bzl", "image")
load("//antlir/antlir2/image_command_alias:image_command_alias.bzl", "image_command_alias")
load("//antlir/bzl:build_defs.bzl", "buck_genrule", "buck_sh_test", "export_file")

oncall("antlir")

export_file(name = "check-command-alias-out.sh")

image.layer(
    name = "layer",
    features = [
        feature.ensure_file_symlink(
            link = "/bin/command-alias-echo",
            target = "echo",
        ),
        feature.install_text(
            dst = "/bin/command-alias-write",
            mode = "a+rx",
            text = """#!/bin/bash
set -ue -o pipefail

# Last argument is the output file.
out_file=$(echo "${@: -1}")

# Remove the last argument.
set -- "${@:1:$(($#-1))}"

# Write remaining arguments to output file.
echo $@ > $out_file
""",
        ),
        feature.rpms_install(rpms = [
            "coreutils",  # Provides /bin/echo
        ]),
    ],
)

image_command_alias(
    name = "command-alias-echo",
    args = [
        "hello",
        "world",
    ],
    exe = "/bin/command-alias-echo",
    layer = ":layer",
)

buck_genrule(
    name = "run-command-alias-echo",
    out = "out-file",
    cmd = "$(exe :command-alias-echo) goodbye world > $OUT",
)

# Test running a command in an image and capturing its stdout
buck_sh_test(
    name = "test-command-alias-echo",
    args = ["$(location :run-command-alias-echo)"],
    test = ":check-command-alias-out.sh",
)

image_command_alias(
    name = "command-alias-write",
    args = [
        "hello",
        "world",
    ],
    exe = "/bin/command-alias-write",
    layer = ":layer",
)

buck_genrule(
    name = "run-command-alias-write",
    out = "out-file",
    cmd = "$(exe :command-alias-write) goodbye world $OUT",
)

# Test running a command in an image and having it write directly to buck-out
buck_sh_test(
    name = "test-command-alias-write",
    args = ["$(location :run-command-alias-write)"],
    test = ":check-command-alias-out.sh",
)
