load("//antlir/antlir2/bzl/feature:defs.bzl", "feature")
load("//antlir/antlir2/bzl/image:defs.bzl", "image")
load("//antlir/antlir2/bzl/package:defs.bzl", "package")
load("//antlir/antlir2/testing:image_diff_test.bzl", "image_diff_test")

oncall("antlir")

image.layer(
    name = "base",
    features = [
        feature.rpms_install(rpms = ["bash"]),
        feature.user_add(
            home_dir = "/",
            primary_group = "antlir",
            shell = "/bin/bash",
            uid = 1042,
            username = "antlir",
        ),
        feature.group_add(
            gid = 1043,
            groupname = "antlir",
        ),
        feature.ensure_dirs_exist(
            dirs = "/dir",
        ),
        feature.install(
            src = "//antlir:empty",
            dst = "/target",
            mode = "a+rx",
        ),
    ],
)

image.layer(
    name = "input-tar-layer",
    features = [
        feature.ensure_dirs_exist(dirs = "/foo"),
        feature.install_text(
            dst = "/foo/bar",
            mode = "a+r,u+ws",
            text = "I am bar\n",
        ),
        feature.ensure_dirs_exist(dirs = "/foo/baz"),
        feature.install_text(
            dst = "/foo/baz/qux",
            mode = "a+r,u+w",
            text = "I am qux\n",
        ),
        feature.install_text(
            dst = "/foo/owned",
            group = 1043,
            mode = "a+r,u+w",
            text = "I'm owned by antlir\n",
            user = 1042,
        ),
    ],
)

package.tar(
    name = "tar",
    dot_meta = False,
    layer = ":input-tar-layer",
    rootless = True,
)

package.tar_gz(
    name = "tar.gz",
    dot_meta = False,
    layer = ":input-tar-layer",
    rootless = True,
)

package.tar_zst(
    name = "tar.zst",
    dot_meta = False,
    layer = ":input-tar-layer",
    rootless = True,
)

image.layer(
    name = "tarball",
    features = [
        feature.tarball(
            src = ":tar",
            into_dir = "/tar",
        ),
        feature.tarball(
            src = ":tar.gz",
            into_dir = "/tar.gz",
        ),
        feature.tarball(
            src = ":tar.zst",
            into_dir = "/tar.zst",
        ),
        feature.tarball(
            src = ":tar",
            force_root_ownership = True,
            into_dir = "/tar_force_root_ownership",
        ),
    ],
    parent_layer = ":base",
)

image_diff_test(
    name = "tarball-test",
    diff = "tarball.toml",
    diff_type = "file",
    layer = ":tarball",
)
