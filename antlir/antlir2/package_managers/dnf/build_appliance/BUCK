load("//antlir/antlir2/bzl:json_file.bzl", "json_file")
load("//antlir/antlir2/bzl/feature:defs.bzl", "feature")
load("//antlir/antlir2/package_managers/dnf/rules:repo.bzl", "repo_set")
load("//antlir/bzl:build_defs.bzl", "export_file")
load("//antlir/bzl:internal_external.bzl", "internal_external")

oncall("antlir")

feature.new(
    name = "features",
    features = [
        feature.ensure_dirs_exist(dirs = "/__antlir2__/dnf/cache"),
        feature.ensure_dirs_exist(dirs = "/__antlir2__/dnf/repos"),
        feature.install(
            src = "dnf.antlir.conf",
            dst = "/__antlir2__/dnf/dnf.conf",
        ),
        feature.ensure_file_symlink(
            link = "/etc/dnf/dnf.conf",
            target = "/__antlir2__/dnf/dnf.conf",
        ),
        feature.install(
            src = "empty-versionlock.json",
            dst = "/__antlir2__/dnf/versionlock.json",
            mode = "a+rx",
        ),
        feature.rpms_install(rpms = [
            "dnf",
            "python3",
            "python3-dnf",
            "python3-hawkey",
            "python3-libdnf",
            "python3-rpm",
            "/bin/mount",
        ]),
    ],
    visibility = [
        internal_external(
            fb = "//antlir/antlir2/build_appliance:features",
            oss = "PUBLIC",
        ),
    ],
)

repo_set(
    name = "empty-dnf-reposet",
    visibility = [
        internal_external(
            fb = "//antlir/antlir2/...",
            oss = "PUBLIC",
        ),
    ],
)

json_file(
    name = "empty-dnf-versionlock.json",
    obj = {},
    visibility = [
        internal_external(
            fb = "//antlir/antlir2/...",
            oss = "PUBLIC",
        ),
    ],
)

prelude = native

prelude.python_bootstrap_library(
    name = "antlir2_dnf_base",
    srcs = ["antlir2_dnf_base.py"],
    visibility = ["//antlir/..."],
)

export_file(
    name = "antlir2_dnf_base.py",
    visibility = ["//antlir/antlir2/features/facebook/chef_solo/..."],
)
