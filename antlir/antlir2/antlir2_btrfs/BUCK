load("//antlir/antlir2/bzl/feature:defs.bzl", "feature")
load("//antlir/antlir2/bzl/image:defs.bzl", "image")
load("//antlir/antlir2/testing:image_test.bzl", "image_rust_test")
load("//antlir/bzl:build_defs.bzl", "rust_binary", "rust_library")

oncall("antlir")

deps = [
    "bitflags",
    "derivative",
    "nix",
    "thiserror",
    "tracing",
    "uuid",
]

rust_library(
    name = "antlir2_btrfs",
    srcs = glob(["src/*.rs"]),
    compatible_with = [
        "ovr_config//os:linux",
    ],
    unittests = False,
    visibility = [
        "//antlir/...",
        "//devenv/velvet/...",
    ],
    deps = deps,
)

image.layer(
    name = "test-layer",
    features = [
        feature.rpms_install(rpms = [
            "bash",
            "btrfs-progs",
        ]),
        feature.ensure_dirs_exist(
            dirs = "/work",
            mode = 0o777,
        ),
    ],
    flavor = "//antlir/antlir2/test_images:test-image-flavor",
)

image_rust_test(
    name = "antlir2_btrfs-image-test",
    srcs = glob(["src/*.rs"]),
    compatible_with = [
        "ovr_config//os:linux",
    ],
    layer = ":test-layer",
    deps = deps,
)

image_rust_test(
    name = "antlir2_btrfs-image-test-unprivileged",
    srcs = glob(["src/*.rs"]),
    compatible_with = [
        "ovr_config//os:linux",
    ],
    layer = ":test-layer",
    run_as_user = "nobody",
    rustc_flags = ["--cfg=unprivileged"],
    deps = deps,
)

rust_binary(
    name = "delete",
    srcs = ["delete.rs"],
    compatible_with = [
        "ovr_config//os:linux",
    ],
    unittests = False,
    deps = [
        "anyhow",
        "clap",
        "tracing-glog",
        "tracing-subscriber",
        ":antlir2_btrfs",
    ],
)
