load("//antlir/antlir2/bzl/feature:defs.bzl", "feature")
load("//antlir/bzl:build_defs.bzl", "rust_binary")
load("//antlir/bzl:internal_external.bzl", "internal_external")

oncall("antlir")

rust_binary(
    name = "antlir2-packager",
    srcs = glob(["src/**/*.rs"]),
    compatible_with = [
        "ovr_config//os:linux",
    ],
    features = select({
        "//antlir/antlir2/libcap:available": ["libcap"],
        "DEFAULT": [],
    }),
    visibility = ["PUBLIC"],
    deps = [
        "anyhow",
        "blake3",
        "bytesize",
        "cap-std",
        "chrono",
        "clap",
        "crc32c-hw",
        "gpt",
        "hex",
        "itertools",
        "maplit",
        "nix",
        "oci-spec",
        "retry",
        "serde",
        "serde_json",
        "sha2",
        "tempfile",
        "tracing",
        "tracing-subscriber",
        "uuid",
        "walkdir",
        "xattr",
        "//antlir/antlir2/antlir2_btrfs:antlir2_btrfs",
        "//antlir/antlir2/antlir2_isolate:antlir2_isolate",
        "//antlir/antlir2/antlir2_path:antlir2_path",
        "//antlir/antlir2/antlir2_rootless:antlir2_rootless",
        "//antlir/antlir2/antlir2_working_volume:antlir2_working_volume",
        "//antlir/util/cli/json_arg:json_arg",
    ] + select({
        "//antlir/antlir2/libcap:available": ["//antlir/antlir2/libcap:libcap"],
        "DEFAULT": [],
    }),
)

feature.new(
    name = "build-appliance-features",
    features = [
        feature.rpms_install(rpms = [
            "cpio",
            "dosfstools",
            "e2fsprogs",
            "mtools",
            "rpm-build",
            "rpm-sign",
            "skopeo",
            "squashfs-tools",
            "zstd",
        ]),
        select({
            "//antlir/antlir2/os:centos8": None,
            "//antlir/antlir2/os:rhel8": None,
            "//antlir/antlir2/os:rhel8.8": None,
            "DEFAULT": feature.rpms_install(rpms = [
                "erofs-utils",
            ]),
        }),
        ":btrfs-progs",
    ],
    visibility = ["//antlir/antlir2/build_appliance/..."],
)

feature.new(
    name = "btrfs-progs",
    features = internal_external(
        fb = [
            feature.install(
                src = "fbsource//third-party/btrfs-progs:btrfs",
                dst = "/usr/local/bin/btrfs",
            ),
            feature.install(
                src = "fbsource//third-party/btrfs-progs:btrfstune",
                dst = "/usr/local/bin/btrfstune",
            ),
            feature.install(
                src = "fbsource//third-party/btrfs-progs:mkfs.btrfs",
                dst = "/usr/local/bin/mkfs.btrfs",
            ),
        ],
        oss = [feature.rpms_install(rpms = ["btrfs-progs"])],
    ),
    visibility = [],
)
