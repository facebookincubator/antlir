load("//antlir/antlir2/bzl/feature:defs.bzl", "feature")
load("//antlir/bzl:build_defs.bzl", "internal_external", "rust_binary")

oncall("antlir")

rust_binary(
    name = "antlir2-packager",
    srcs = glob(["src/**/*.rs"]),
    compatible_with = [
        "ovr_config//os:linux",
    ],
    resources = {
        "sendstream-upgrade": internal_external(
            fb = "//antlir/btrfs_send_stream_upgrade/facebook:sendstream-upgrade",
            oss = "//antlir/btrfs_send_stream_upgrade:btrfs_send_stream_upgrade",
        ),
    },
    visibility = ["PUBLIC"],
    deps = [
        "anyhow",
        "blake3",
        "buck-resources",
        "bytesize",
        "chrono",
        "clap",
        "crc32c-hw",
        "gpt",
        "itertools",
        "nix",
        "retry",
        "serde",
        "serde_json",
        "tempfile",
        "tracing",
        "tracing-subscriber",
        "uuid",
        "walkdir",
        "xattr",
        "//antlir/antlir2/antlir2_btrfs:antlir2_btrfs",
        "//antlir/antlir2/antlir2_isolate:antlir2_isolate",
        "//antlir/antlir2/antlir2_rootless:antlir2_rootless",
        "//antlir/antlir2/antlir2_working_volume:antlir2_working_volume",
        "//antlir/antlir2/libcap:libcap",
        "//antlir/util/cli/json_arg:json_arg",
    ],
)

feature.new(
    name = "build-appliance-features",
    features = [
        feature.rpms_install(rpms = [
            "cpio",
            "dosfstools",
            "e2fsprogs",
            "mtools",
            "rpm-build",
            "rpm-sign",
            "squashfs-tools",
            "zstd",
        ]),
        select({
            "//antlir/antlir2/os:centos8": None,
            "//antlir/antlir2/os:rhel8": None,
            "//antlir/antlir2/os:rhel8.8": None,
            "DEFAULT": feature.rpms_install(rpms = [
                "erofs-utils",
            ]),
        }),
    ],
    visibility = ["//antlir/antlir2/build_appliance/..."],
)
