load("//antlir/antlir2/bzl/feature:defs.bzl", "feature")
load("//antlir/bzl:build_defs.bzl", "rust_binary")

oncall("antlir")

rust_binary(
    name = "genrule_in_image",
    srcs = glob(["src/**/*.rs"]),
    visibility = ["PUBLIC"],
    deps = [
        "anyhow",
        "clap",
        "serde_json",
        "tracing",
        "tracing-subscriber",
        "walkdir",
        "//antlir/antlir2/antlir2_isolate:antlir2_isolate",
        "//antlir/antlir2/antlir2_overlayfs:antlir2_overlayfs",
        "//antlir/antlir2/antlir2_rootless:antlir2_rootless",
    ],
)

# Prep feature so that we can make some modifications to the layer target so
# that we can just do the genrule in a read-only copy of layer as long as we
# make the output writable.
feature.new(
    name = "prep",
    features = [
        feature.ensure_dirs_exist(dirs = "/__genrule_in_image__"),
        feature.ensure_subdirs_exist(
            into_dir = "/__genrule_in_image__",
            subdirs_to_create = "working_directory",
        ),
        feature.ensure_subdirs_exist(
            into_dir = "/__genrule_in_image__",
            subdirs_to_create = "buck_scratch_path",
        ),
        feature.ensure_subdirs_exist(
            into_dir = "/__genrule_in_image__",
            subdirs_to_create = "out",
        ),
        feature.ensure_subdirs_exist(
            into_dir = "/__genrule_in_image__/out",
            subdirs_to_create = "dir",
        ),
        feature.install(
            src = "//antlir:empty",
            dst = "/__genrule_in_image__/out/single_file",
        ),
        # @oss-disable
    ],
    visibility = ["PUBLIC"],
)
