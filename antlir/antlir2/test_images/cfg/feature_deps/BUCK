load("//antlir/antlir2/bzl/feature:defs.bzl", "feature")
load("//antlir/antlir2/bzl/image:defs.bzl", "image")
load("//antlir/antlir2/bzl/package:defs.bzl", "package")
load("//antlir/antlir2/testing:image_test.bzl", "image_rust_test")

oncall("antlir")

feature.new(
    name = "install-os-text-file",
    compatible_with = [
        "//antlir/antlir2/os:centos8",
        "//antlir/antlir2/os:centos9",
    ],
    features = [
        feature.install_text(
            dst = "/os",
            text = select({
                "//antlir/antlir2/os:centos8": "centos8",
                "//antlir/antlir2/os:centos9": "centos9",
            }),
        ),
    ],
)

image.layer(
    name = "centos9-dep",
    default_os = "centos9",
    features = [
        ":install-os-text-file",
    ],
)

package.tar(
    name = "centos9-dep.tar",
    layer = ":centos9-dep",
)

image.layer(
    name = "centos8-dep",
    default_os = "centos8",
    features = [
        ":install-os-text-file",
    ],
)

package.tar(
    name = "centos8-dep.tar",
    default_os = "centos8",
    layer = ":centos8-dep",
)

image.layer(
    name = "test-layer",
    features = [
        feature.rpms_install(rpms = ["tar"]),
        ":install-os-text-file",
        # installs strip the os configuration from dependencies so their
        # 'default_os' gets used
        feature.install(
            src = ":centos8-dep.tar",
            dst = "/centos8.tar",
        ),
        feature.install(
            src = ":centos9-dep.tar",
            dst = "/centos9.tar",
        ),
        # clones get reconfigured to match this layer
        feature.clone(
            dst_path = "/os.cloned.centos8",
            src_layer = ":centos8-dep",
            src_path = "/os",
        ),
        feature.clone(
            dst_path = "/os.cloned.centos9",
            src_layer = ":centos9-dep",
            src_path = "/os",
        ),
    ],
)

image_rust_test(
    name = "test",
    srcs = ["test.rs"],
    crate_root = "test.rs",
    layer = ":test-layer",
)
