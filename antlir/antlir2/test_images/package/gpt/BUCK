load("//antlir/antlir2/antlir2_vm/bzl:defs.bzl", "vm")
load("//antlir/antlir2/antlir2_vm/bzl:disk.bzl", "vm_disk")
load("//antlir/antlir2/bzl/feature:defs.bzl", "feature")
load("//antlir/antlir2/bzl/image:defs.bzl", "image")
load("//antlir/antlir2/bzl/package:btrfs.bzl", "BtrfsSubvol")
load("//antlir/antlir2/bzl/package:defs.bzl", "package")
load("//antlir/antlir2/bzl/package:gpt.bzl", "Partition", "PartitionType")
load("//metalos/vm/disks:simple.bzl", "simple_disk")

oncall("antlir")

image.layer(
    name = "gpt-esp-layer",
    features = [
        feature.install_text(
            dst = "/foo",
            text = "foo",
        ),
    ],
)

ESP_SIZE_MB = 128

package.vfat(
    name = "gpt-esp",
    fat_size = 32,
    layer = ":gpt-esp-layer",
    size_mb = ESP_SIZE_MB,
)

image.layer(
    name = "gpt-rootfs-layer",
    features = [
        feature.install_text(
            dst = "/bar",
            text = "bar",
        ),
    ],
)

package.btrfs(
    name = "gpt-rootfs",
    subvols = {
        "/volume": BtrfsSubvol(layer = ":gpt-rootfs-layer"),
    },
)

package.gpt(
    name = "test.gpt",
    partitions = [
        Partition(
            src = ":gpt-esp",
            label = "ESP",
            type = PartitionType("esp"),
        ),
        Partition(src = ":gpt-rootfs"),
    ],
)

vm_disk(
    name = "test-disk",
    base_image = ":test.gpt",
    bootable = False,
)

vm.host(
    name = "vm",
    disks = [
        simple_disk.default_boot_disk,
        ":test-disk",
    ],
)

vm.python_test(
    name = "test",
    srcs = ["test.py"],
    compatible_with = ["ovr_config//cpu:x86_64"],
    env = {
        "ESP_SIZE_MB": str(ESP_SIZE_MB),
    },
    vm_host = ":vm",
)
