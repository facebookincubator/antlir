# @oss-disable
load("//antlir/antlir2/bzl/feature:defs.bzl", "feature")
load("//antlir/antlir2/bzl/image:defs.bzl", "image")
load("//antlir/antlir2/bzl/package:docker_archive.bzl", "docker_archive")
load("//antlir/antlir2/testing:image_test.bzl", "image_python_test")

oncall("antlir")

image.layer(
    name = "layer",
    features = [
        feature.install_text(
            dst = "/entrypoint.sh",
            mode = "a+rx",
            text = """#!/bin/bash
if [ "$1" != "foo" ]; then
    echo "Expected $1=foo"
fi
echo "Entrypoint!"
stat --format="%a %u %g" /entrypoint.sh
""",
        ),
        feature.rpms_install(rpms = [
            "bash",
            "coreutils",
        ]),
    ],
)

docker_archive(
    name = "docker-archive",
    entrypoint = [
        "/entrypoint.sh",
        "foo",
    ],
    layer = ":layer",
)

image.layer(
    name = "test-layer",
    features = [
        feature.rpms_install(rpms = [
            "podman",
            "python3",
        ]),
    ],
)

image_python_test(
    name = "test",
    srcs = ["test.py"],
    env = {
        "DOCKER_ARCHIVE": "$(location :docker-archive)",
    },
    # This test does not work under architecture emulation. Mark it as such in
    # buck-land, and also disable scheduling CI for aarch64
    exec_compatible_with = select({
        "ovr_config//cpu:arm64": ["ovr_config//cpu:arm64"],
        "ovr_config//cpu:x86_64": ["ovr_config//cpu:x86_64"],
    }),
    # @oss-disable
    layer = ":test-layer",
)
