load("//antlir/antlir2/bzl/feature:defs.bzl", "feature")
load("//antlir/antlir2/bzl/image:defs.bzl", "image")
load("//antlir/antlir2/bzl/package:defs.bzl", "package")
load("//antlir/antlir2/test_images/package:defs.bzl", "package_feature", "standard_features", "test_in_layer")
load("//antlir/bzl:build_defs.bzl", "rust_unittest")

oncall("antlir")

VARIANTS = {
    "layer": {},
    "layer-rootless": {
        "rootless": True,
    },
    "named": {
        "volume_name": "named",
    },
    "named-rootless": {
        "rootless": True,
        "volume_name": "named",
    },
}

image.layer(
    name = "layer",
    features = [
        feature.ensure_dirs_exist(dirs = "/standard"),
        standard_features(prefix = "/standard"),
        feature.install_text(
            dst = "/hello",
            text = "Hello\n",
        ),
        feature.ensure_dirs_exist(dirs = "/to-be-removed"),
        feature.install_text(
            dst = "/to-be-removed/file",
            text = "I will be deleted\n",
        ),
        feature.install(
            src = "//antlir:empty",
            dst = "/i-will-get-new-xattrs",
            xattrs = {
                "user.bar": "bar",
                "user.foo": "foo",
            },
        ),
        feature.ensure_file_symlink(
            link = "/aloha",
            target = "/hello",
        ),
    ],
)

[
    [
        package.sendstream_v2(
            name = name + ".sendstream.v2",
            layer = ":layer",
            rootless = args.get("rootless", None),
            volume_name = args.get("volume_name", None),
        ),
        # Receive the package into a layer at build time so that all the rootless machinery
        # works as expected and we don't have to run 'btrfs receive' at runtime
        image.prebuilt(
            name = name + ".received",
            src = ":{}.sendstream.v2".format(name),
            format = "sendstream",
            # NOTE: rootless is not set here because:
            # 1) it would be overridden by the test configuration
            # 2) the rootless configuration is only important on the
            #    package.sendstream_v2 target since that controls whether or not
            #    the userspace packager is used
        ),
        test_in_layer(
            name = "test-" + name,
            layer_features = [
                feature.layer_mount(
                    mountpoint = "/package",
                    source = ":{}.received".format(name),
                ),
            ],
            omit_package_features = [package_feature("dot_meta")],  # TODO(T180998771)
            stub = "stub.rs",
        ),
    ]
    for name, args in VARIANTS.items()
]

# image.prebuilt erases the name of the inner subvolume, so this test exists to
# ensure it is set correctly
rust_unittest(
    name = "test-name",
    srcs = ["test_name.rs"],
    # This doesn't work on aarch64 RE and I don't know why, doesn't really
    # matter too much
    compatible_with = ["ovr_config//cpu:x86_64"],
    resources = {
        "NAMED_SENDSTREAM": ":named.sendstream.v2",
        "NAMED_SENDSTREAM_ROOTLESS": ":named-rootless.sendstream.v2",
    },
    deps = ["buck-resources"],
)
