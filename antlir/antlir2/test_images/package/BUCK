load("//antlir/antlir2/bzl/feature:defs.bzl", "feature")
load("//antlir/antlir2/bzl/image:defs.bzl", "image")
load("//antlir/bzl:build_defs.bzl", "buck_genrule", "export_file")
load(":defs.bzl", "package_feature", "test_in_layer")

oncall("antlir")

buck_genrule(
    name = "antlir2-large-file-256M",
    out = "f",
    cmd = "yes antlir2-large-file | head -c 256M > $OUT",
)

image.layer(
    name = "standard",
    features = [
        feature.install(
            src = ":antlir2-large-file-256M",
            dst = "/antlir2-large-file-256M",
        ),
        feature.ensure_dirs_exist(dirs = "/default-dir"),
        feature.install_text(
            dst = "/only-readable-by-root",
            mode = 0o000,
            text = "Only readable by root",
        ),
        feature.install_text(
            dst = "/default-dir/executable",
            mode = "a+rx",
            text = "#!/bin/bash\necho hello",
        ),
        feature.install_text(
            dst = "/i-am-owned-by-nonstandard",
            group = 43,
            text = "42:43",
            user = 42,
        ),
        feature.install_text(
            dst = "/i-have-xattrs",
            text = "xattrs are cool",
            xattrs = {
                "user.baz": "qux",
                "user.foo": "bar",
            },
        ),
        feature.install(
            src = "antlir//antlir:empty",
            dst = "/i-have-caps",
            xattrs = {
                "security.capability": "0sAQAAAoAAAAAAAAAAAAAAAAAAAAA=",
            },
        ),
        feature.ensure_file_symlink(
            link = "/absolute-file-symlink",
            target = "/default-dir/executable",
        ),
        feature.ensure_file_symlink(
            link = "/default-dir/relative-file-symlink",
            target = "executable",
        ),
        feature.ensure_dir_symlink(
            link = "/absolute-dir-symlink",
            target = "/default-dir",
        ),
        feature.ensure_dir_symlink(
            link = "/relative-dir-symlink",
            target = "default-dir",
        ),
        feature.ensure_dirs_exist(dirs = "/hardlink"),
        feature.install_text(
            dst = "/hardlink/hello",
            text = "Hello world\n",
        ),
        feature.hardlink(
            link = "/hardlink/aloha",
            target = "/hardlink/hello",
        ),
    ],
)

export_file(
    name = "standard_tests.rs",
    visibility = [
        "antlir//antlir/antlir2/test_images/package/...",
    ],
)

# Run the standard tests against the layer directly to ensure that it's being
# built correctly
test_in_layer(
    name = "test-raw-layer",
    layer_features = [
        feature.ensure_dirs_exist(dirs = "/layer"),
        feature.layer_mount(
            mountpoint = "/layer",
            source = ":standard",
        ),
        feature.rpms_install(rpms = ["basesystem"]),
    ],
    omit_package_features = [package_feature("dot_meta")],
    stub = "raw_layer.rs",
)
