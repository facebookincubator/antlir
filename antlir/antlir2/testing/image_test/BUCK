load("//antlir/antlir2/bzl/feature:defs.bzl", "feature")
load("//antlir/bzl:build_defs.bzl", "buck_command_alias", "python_binary", "rust_binary", "rust_library")
load("//antlir/bzl:systemd.bzl", "systemd")

oncall("antlir")

rust_library(
    name = "image_test_lib",
    srcs = ["src/lib.rs"],
    visibility = ["PUBLIC"],
    deps = [
        "clap",
        "thiserror",
    ],
)

rust_binary(
    name = "image-test",
    srcs = glob(["src/**/*.rs"]),
    crate_root = "src/main.rs",
    visibility = ["PUBLIC"],
    deps = [
        "anyhow",
        "clap",
        "serde",
        "tempfile",
        "textwrap",
        "tracing",
        "tracing-subscriber",
        ":image_test_lib",
        "//antlir:find_root",
        "//antlir/antlir2/antlir2_isolate:antlir2_isolate",
        "//antlir/antlir2/antlir2_rootless:antlir2_rootless",
        "//antlir/util/cli/json_arg:json_arg",
    ],
)

feature.new(
    name = "features",
    features = [
        # Critical unit that actually runs the test
        systemd.install_unit(
            "antlir2_image_test.service",
            force = True,
        ),
        # Debugging features to enhance ergonomics
        systemd.install_dropin(
            "autologin.conf",
            unit = "console-getty.service",
        ),
        # Install something that provides a shell, which is necessary for
        # interactive debugging
        feature.rpms_install(subjects = ["/bin/sh"]),
        feature.install(
            src = "help.sh",
            dst = "/etc/profile.d/zz-help.sh",
            mode = "a+rx",
        ),
        feature.ensure_dirs_exist(dirs = "/__antlir2_image_test__"),
        feature.install(
            src = ":image-test",
            dst = "/__antlir2_image_test__/image-test",
        ),
    ],
    visibility = ["PUBLIC"],
)

python_binary(
    name = "static-list",
    srcs = ["static_list.py"],
    main_function = "antlir.antlir2.testing.image_test.static_list.main",
)

buck_command_alias(
    name = "static-list-cpp",
    args = ["cpp"],
    exe = ":static-list",
    visibility = ["PUBLIC"],
)

buck_command_alias(
    name = "static-list-py",
    args = ["py"],
    exe = ":static-list",
    visibility = ["PUBLIC"],
)
