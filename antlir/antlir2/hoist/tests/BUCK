load("//antlir/antlir2/bzl:configured_alias.bzl", "antlir2_configured_alias")
load("//antlir/antlir2/bzl/feature:defs.bzl", "feature")
load("//antlir/antlir2/bzl/image:defs.bzl", "image")
load("//antlir/antlir2/hoist:hoist.bzl", "hoist")
load("//antlir/bzl:build_defs.bzl", "python_unittest")

oncall("antlir")

image.layer(
    name = "src",
    features = [
        feature.ensure_dirs_exist(dirs = "/single"),
        feature.install_text(
            dst = "/single/file",
            text = "single file\n",
        ),
        feature.ensure_dirs_exist(dirs = "/multi"),
        feature.install_text(
            dst = "/multi/file1",
            text = "multi file 1\n",
        ),
        feature.ensure_dirs_exist(dirs = "/multi/nested"),
        feature.install_text(
            dst = "/multi/nested/sh",
            mode = "a+rx",
            text = "nested/sh\n",
        ),
    ],
)

antlir2_configured_alias(
    name = "src-rootless",
    actual = ":src",
    rootless = True,
)

antlir2_configured_alias(
    name = "src-rooted",
    actual = ":src",
    rootless = False,
)

hoist(
    name = "single-file-rootless",
    out = "f",
    layer = ":src-rootless",
    path = "/single/file",
)

hoist(
    name = "single-file-rooted",
    out = "f",
    layer = ":src-rooted",
    path = "/single/file",
)

hoist(
    name = "multiple-paths",
    layer = ":src-rootless",
    paths = [
        "/single/file",
        "/multi/file1",
    ],
)

hoist(
    name = "dir",
    dir = True,
    layer = ":src-rootless",
    path = "/multi",
)

hoist(
    name = "executable",
    executable = True,
    layer = ":src-rootless",
    path = "/multi/nested/sh",
)

hoist(
    name = "projected",
    layer = ":src-rootless",
    paths = [
        "/multi",
        "/multi/nested",
        "/multi/nested/sh",
    ],
)

python_unittest(
    name = "test",
    srcs = ["test.py"],
    env = {
        "EXECUTABLE": "$(exe :executable)",
        "HOISTED_DIR": "$(location :dir)",
        "MULTIPLE_PATHS_SINGLE_FILE": "$(location :multiple-paths[/single/file])",
        "PROJECTED_MULTI": "$(location :projected[/multi])",
        "PROJECTED_MULTI_NESTED": "$(location :projected[/multi/nested])",
        "PROJECTED_MULTI_NESTED_SH": "$(location :projected[/multi/nested/sh])",
        "SINGLE_FILE_ROOTED": "$(location :single-file-rooted)",
        "SINGLE_FILE_ROOTLESS": "$(location :single-file-rootless)",
    },
)
