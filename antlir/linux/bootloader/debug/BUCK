load("@bazel_skylib//lib:paths.bzl", "paths")
load("//antlir/bzl:image.bzl", "image")
load("//antlir/bzl:systemd.bzl", "systemd", SYSTEMD_PROVIDER_ROOT = "PROVIDER_ROOT")
load("//antlir/bzl/foreign/extractor:extract.bzl", "extract")
load("//antlir/bzl/linux:busybox.bzl", "busybox")
load("//antlir/linux:defs.bzl", "antlir_linux_build_opts")

DEPS_TARGET = "//antlir/linux/bootloader:deps"

# Some systemd units and binaries that are only useful for debugging and not
# during normal boots
systemd_debug = [
    extract.extract(
        binaries = [
            "/usr/bin/systemd-analyze",
        ],
        dest = "/",
        source = DEPS_TARGET,
    ),
    image.ensure_dirs_exist(SYSTEMD_PROVIDER_ROOT),
    image.clone(
        DEPS_TARGET,
        paths.join(SYSTEMD_PROVIDER_ROOT, "debug-shell.service"),
        paths.join(SYSTEMD_PROVIDER_ROOT, "debug-shell.service"),
    ),
]

image.layer(
    name = "debug-append",
    features = [
        # NOTE: while busybox still exists for /usr/bin/mount in the base
        # initrd, this is technically duplicated. However image.ensure_file_symlink
        # does not allow dangling symlinks so just take the easy way out and
        # clone the binary again
        busybox.install(
            DEPS_TARGET,
            src_path = "/usr/sbin/busybox",
        ),
        systemd_debug,
        systemd.install_dropin("debug-shell.conf", "debug-shell.service"),
        systemd.enable_unit("debug-shell.service"),
    ],
    build_opts = antlir_linux_build_opts(),
)

image.package(
    name = "debug-append.cpio.gz",
    layer = ":debug-append",
)
