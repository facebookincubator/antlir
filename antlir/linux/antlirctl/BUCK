load("//antlir/bzl:oss_shim.bzl", "export_file", "rust_binary", "third_party")

rust_binary(
    name = "antlirctl",
    srcs = glob(["src/*.rs"]),
    allocator = "malloc",
    link_style = "static",
    linker_flags = [
        "-Wl,--strip-all",
    ],
    nodefaultlibs = True,
    # some flags to minimize size
    rustc_flags = [
        "-C",
        "opt-level=z",
    ],
    # WARNING: adding any dependencies can significantly increase the size of
    # the resulting binary.
    # STRONGLY lean towards re-implementing something if it is a small
    # amount of code. Be prepared to justify any new dependencies with a
    # comparison of stripped binary size (`cargo bloat --release --crates`
    # might be useful to evaluate changes).
    # For example, when parsing the kernel cmdline, just adding a
    # dependency on `regex` bloats the end binary by 1.1M, compared to
    # almost nothing for 50 lines of code to parse it manually.
    deps =
        third_party.libraries(
            [
                "anyhow",  # ~9.5k, very helpful for error handling
                "nix",  # ~5k: access to syscalls (mount, etc)
                "structopt",  # ~300k, but makes iterating development much easier
                # all the slog crates together add about 50k
                "slog",
                "slog-async",
                "slog-term",
                "slog_glog_fmt",
                "toml",  # load config files
                "serde",  # load config files
                "zstd",  # os images are zstd-compressed btrfs sendstreams
                # Needed for HTTPS requests to download images
                "bytes",
                "futures-core",
                "futures-util",
                "hyper",
                "hyper-rustls",
                "rustls",
                "rustls-native-certs",
                "tokio",  # async runtime for http client
                "tower",
                "trust-dns-resolver",
            ],
            platform = "rust",
        ),
)

export_file(
    name = "default-config.toml",
)
