load("@bazel_skylib//lib:paths.bzl", "paths")
load("//antlir/bzl:constants.bzl", "REPO_CFG")
load("//antlir/bzl:image.bzl", "image")
load("//antlir/bzl:oss_shim.bzl", "export_file")
load("//antlir/bzl:systemd.bzl", "systemd", SYSTEMD_PROVIDER_ROOT = "PROVIDER_ROOT")

image.layer(
    name = "basesystem",
    features = [
        image.rpms_install([
            "basesystem",
            "btrfs-progs",
            "iproute",
            "openssh-server",
            "systemd",
            "systemd-udev",
        ]),
    ],
    visibility = [],
    flavor = REPO_CFG.antlir_linux_flavor,
)

image.layer(
    name = "basesystem-strip",
    parent_layer = ":basesystem",
    features = [
        image.rpms_remove_if_exists([
            # dracut installs a bunch of systemd units that log warnings, and
            # we don't even use it anyway
            "dracut",
        ]),
    ],
    flavor = REPO_CFG.antlir_linux_flavor,
)

export_file(name = "eth.network")

# TODO: this should eventually be put into a stable fbpkg layer if it is
# depended on more broadly
image.layer(
    name = "metalos",
    parent_layer = ":basesystem-strip",
    features = [
        image.install_buck_runnable(
            "//antlir/linux/metalctl:metalctl",
            "/usr/bin/metalctl",
        ),
        systemd.install_unit("core-services.target"),
        systemd.install_unit("workload-pre.target"),
        systemd.install_unit("workload.target"),
        # in the default CentOS packages, this points to graphical.target which makes no sense in our context
        image.remove(paths.join(SYSTEMD_PROVIDER_ROOT, "default.target")),
        systemd.set_default_target("workload.target"),
        # networking config to use DHCP is a generic workload-pre.target
        # dependency
        image.install("eth.network", "/usr/lib/systemd/network/20-eth.network"),
        systemd.enable_unit("systemd-networkd.service", "core-services.target"),
        systemd.enable_unit("systemd-resolved.service", "core-services.target"),
        # TODO: this is a workaround for a likely bug in the initrd shutdown
        # process that ends up leaving udev rules unprocessed in the
        # post-switch-root root fs.
        systemd.enable_unit("systemd-udev-trigger.service", "core-services.target"),
        systemd.enable_unit("sshd.service", "core-services.target"),
    ],
    runtime = ["systemd"],
    flavor = REPO_CFG.antlir_linux_flavor,
    visibility = [
        "//antlir/...",
    ],
)

image.package(
    name = "metalos.sendstream.zst",
    layer = ":metalos",
    format = "sendstream.zst",
    visibility = [
        "//antlir/...",
    ],
    build_appliance = REPO_CFG.flavor_to_config[REPO_CFG.antlir_linux_flavor].build_appliance,
)
