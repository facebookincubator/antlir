load("@bazel_skylib//lib:paths.bzl", "paths")
load("//antlir/bzl:image.bzl", "image")
load("//antlir/bzl:oss_shim.bzl", "rust_binary", "rust_library", "third_party")
load("//antlir/bzl/image/feature:defs.bzl", "feature")
# @oss-disable: load("//antlir/linux/metalos/host_configs/evalctx/facebook:deps.bzl", fb_deps = "deps") 

# The facebook extension to the evalctx crate adds some additional dependencies
# on internal code
maybe_fb_deps = []

# @oss-disable: maybe_fb_deps.extend(fb_deps) 

rust_library(
    name = "evalctx",
    srcs = glob(["evalctx/**/*.rs"]),
    features = [
        # @oss-disable: "facebook", 
    ],
    test_srcs = ["generators/hostname.star"],
    deps = maybe_fb_deps + third_party.libraries(
        [
            "anyhow",
            "derive_builder",
            "paste",
            "handlebars",
            "once_cell",
            "serde",
            "serde_json",
            "starlark",
            "starlark_derive",
        ],
        platform = "rust",
    ),
)

rust_binary(
    name = "evaluator",
    srcs = glob(["evaluator/**/*.rs"]),
    deps = [":evalctx"] + third_party.libraries(
        [
            "anyhow",
            "serde_json",
            "structopt",
        ],
        platform = "rust",
    ),
)

feature.new(
    name = "generators",
    features = [
        image.ensure_subdirs_exist("/usr/lib/metalos", "generators"),
    ] + [
        image.install(
            generator,
            "/usr/lib/metalos/generators/{}".format(paths.basename(generator)),
        )
        for generator in glob(["generators/*.star"])
    ],
    visibility = ["//antlir/linux/..."],
)
