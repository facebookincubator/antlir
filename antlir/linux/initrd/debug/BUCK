load("@bazel_skylib//lib:new_sets.bzl", "sets")
load("@bazel_skylib//lib:paths.bzl", "paths")
load("//antlir/bzl:constants.bzl", "REPO_CFG")
load("//antlir/bzl:image.bzl", "image")
load("//antlir/bzl:oss_shim.bzl", "kernel_get")
load("//antlir/bzl:systemd.bzl", "systemd", SYSTEMD_PROVIDER_ROOT = "PROVIDER_ROOT")
load("//antlir/bzl/linux:busybox.bzl", "DEFAULT_APPLETS")
load("//antlir/bzl/linux:defs.bzl", "linux")

DEPS_TARGET = "//antlir/linux/initrd:deps"

# Some systemd units and binaries that are only useful for debugging and not
# during normal boots
systemd_debug = [
    # We don't have to use the extractor here, since the libraries loaded by
    # the systemd binaries that we want will already be present in the base
    # initrd.
    image.clone(DEPS_TARGET, "/usr/bin/systemd-analyze", "/usr/bin/systemd-analyze"),
    image.ensure_subdirs_exist(
        "/usr/lib",
        paths.relativize(SYSTEMD_PROVIDER_ROOT, "/usr/lib"),
    ),
    image.clone(
        DEPS_TARGET,
        paths.join(SYSTEMD_PROVIDER_ROOT, "debug-shell.service"),
        paths.join(SYSTEMD_PROVIDER_ROOT, "debug-shell.service"),
    ),
]

debug_features = [
    linux.busybox.install(
        DEPS_TARGET,
        # /usr/bin/mount is implemented in antlirctl
        sets.difference(
            DEFAULT_APPLETS,
            sets.make(["mount"]),
        ),
        src_path = "/usr/sbin/busybox",
    ),
    systemd_debug,
    systemd.enable_unit("debug-shell.service"),
    systemd.install_dropin("debug-shell.conf", "debug-shell.service"),
    systemd.install_dropin("wait-for-debug-shell.conf", "initrd-cleanup.service"),
]

image.layer(
    name = "debug-append",
    features = [
        linux.filesystem.install(),
        debug_features,
    ],
    flavor = REPO_CFG.antlir_linux_flavor,
)

image.package(
    name = "debug-append.cpio.gz",
    layer = ":debug-append",
    visibility = [
        kernel_get.base_target + "/...",
        "//antlir/linux/...",
        "//scripts/dschatzberg/vm/...",
    ],
    build_appliance = REPO_CFG.flavor_to_config[REPO_CFG.antlir_linux_flavor]["build_appliance"],
)

# A full layer that is the combined set of debug features and the base initrd.
# This is useful for manually getting a shell with the -container target
# without having to boot up a full vm.
image.layer(
    name = "debug",
    parent_layer = "//antlir/linux/initrd:base",
    features = debug_features,
    visibility = ["//antlir/linux/initrd/..."],
    flavor = REPO_CFG.antlir_linux_flavor,
)
