load("//antlir/distro/deps:rpm_library.bzl", "rpm_library")
load("//antlir/distro/deps:sysroot.bzl", "sysroot_dep")

oncall("antlir")

prelude = native

sysroot_dep(
    name = "stdc++",
    lib = "libstdc++.so.6",
    # TODO: it would be great to use exported_lang_preprocessor_flags to set
    # -std=c++20, but the c++ ones seem to always be applied, even when
    # compiling .c sources, so instead it's attached to the toolchain
    # preprocessor flags
    visibility = ["PUBLIC"],
)

prelude.prebuilt_cxx_library(
    name = "stdc++-legacy",
    exported_preprocessor_flags = ["-I$(location //antlir/distro/deps:sysroot)/usr/include/c++/11/backward"],
    visibility = ["PUBLIC"],
)

sysroot_dep(
    name = "gcc_s",
    lib = "libgcc_s.so.1",
)

rpm_library(
    name = "atomic",
    lib = "libatomic.so.1",
    rpm = "libatomic",
)
