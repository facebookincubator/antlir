load("//antlir/antlir2/bzl/feature:defs.bzl", "feature")
load("//antlir/antlir2/bzl/image:defs.bzl", "image")
load("//antlir/antlir2/bzl/package:defs.bzl", "package")

oncall("antlir")

prelude = native

image.layer(
    name = "sysroot-layer",
    features = [
        feature.rpms_install(rpms = [
            # The "main" clang is actually invoked from the layer in
            # toolchains/cxx:layer, but installing it here gives us all the deps
            # that clang will expect to find in `--sysroot`
            "clang",
        ]),
    ],
    rootless = True,
    visibility = [],
)

package.unprivileged_dir(
    name = "sysroot",
    dot_meta = False,
    layer = ":sysroot-layer",
    rootless = True,
    visibility = ["PUBLIC"],
)

prelude.prebuilt_cxx_library(
    name = "libstdc++",
    exported_linker_flags = [
        "-std=c++20",
        "-lstdc++",
    ],
    exported_preprocessor_flags = ["-std=c++20"],
    visibility = ["PUBLIC"],
)
