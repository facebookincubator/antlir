load("@fbcode_macros//build_defs:python_library.bzl", "python_library")
# @oss-disable
load("//antlir/antlir2/bzl/feature:defs.bzl", "feature")
load("//antlir/antlir2/bzl/image:defs.bzl", "image")
load("//antlir/antlir2/bzl/package:defs.bzl", "package")
load("//antlir/bzl:build_defs.bzl", "rust_binary")
load(":unavailable.bzl", "unavailable")

oncall("antlir")

image.layer(
    name = "sysroot-layer",
    features = [
        feature.rpms_install(rpms = [
            # The "main" clang is actually invoked from the layer in
            # toolchains/cxx:layer, but installing it here gives us all the deps
            # that clang will expect to find in `--sysroot`
            "clang",
            # Install some other core dependencies that we will always need
            "libgcc",
            "glibc-devel",
            "libatomic",
        ]),
    ],
    rootless = True,
    visibility = [],
)

package.unprivileged_dir(
    name = "sysroot",
    dot_meta = False,
    layer = ":sysroot-layer",
    rootless = True,
    visibility = ["PUBLIC"],
)

image.layer(
    name = "base",
    features = [
        feature.rpms_install(rpms = [
            "glibc-devel",  # undeclared dep of a lot of libraries
            "rpm",
            "python3",
        ]),
        feature.install(
            src = "rpm_library_action.py",
            dst = "/usr/bin/rpm-library-action",
            mode = "a+rx",
        ),
    ],
    rootless = True,
    visibility = ["PUBLIC"],
)

rust_binary(
    name = "projects",
    srcs = ["projects.rs"],
    # @oss-disable
    test_srcs = ["projects.bzl"],
    deps = [
        "anyhow",
        "serde",
        "serde_json",
        "serde_starlark",
        "//antlir/signedsource:signedsource",
    ],
)

# Generic fallthrough library when antlir doesn't know about a dependency
unavailable(
    name = "unknown",
)

python_library(
    name = "rpm_library_action",
    srcs = ["rpm_library_action.py"],
    labels = ["autodeps2_generated"],
)
