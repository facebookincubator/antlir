load("//antlir/bzl:build_defs.bzl", "alias")
load("//antlir/distro/deps:rpm_library.bzl", "rpm_library")

oncall("antlir")

alias(
    name = "common",
    actual = ":icuuc",
    # So this gets picked up as an antlir project.
    labels = ["antlir-distro-dep"],
    target_compatible_with = select({
        "DEFAULT": ["antlir//antlir/distro:incompatible"],
        "antlir//antlir/distro:build-for-distro": [],
    }),
    visibility = ["PUBLIC"],
)

rpm_library(
    name = "icudata",
    rpm = "libicu-devel",
    visibility = ["PUBLIC"],
)

rpm_library(
    name = "icui18n",
    rpm = "libicu-devel",
    visibility = ["PUBLIC"],
    exported_deps = [
        ":icudata",
        ":icuuc",
    ],
)

rpm_library(
    name = "icuio",
    rpm = "libicu-devel",
    visibility = ["PUBLIC"],
    exported_deps = [
        ":icudata",
        ":icui18n",
        ":icuuc",
    ],
)

rpm_library(
    name = "icule",
    rpm = "libicu-devel",
    visibility = ["PUBLIC"],
    exported_deps = [
        ":icudata",
        ":icuuc",
    ],
)

rpm_library(
    name = "iculx",
    rpm = "libicu-devel",
    visibility = ["PUBLIC"],
    exported_deps = [
        ":icudata",
        ":icule",
        ":icuuc",
    ],
)

rpm_library(
    name = "icutest",
    rpm = "libicu-devel",
    visibility = ["PUBLIC"],
    exported_deps = [
        ":icudata",
        ":icui18n",
        ":icutu",
        ":icuuc",
    ],
)

rpm_library(
    name = "icutu",
    rpm = "libicu-devel",
    visibility = ["PUBLIC"],
    exported_deps = [
        ":icudata",
        ":icui18n",
        ":icuuc",
    ],
)

rpm_library(
    name = "icuuc",
    rpm = "libicu-devel",
    visibility = ["PUBLIC"],
    exported_deps = [
        ":icudata",
    ],
)
