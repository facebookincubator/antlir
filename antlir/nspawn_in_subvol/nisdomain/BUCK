load("//antlir/bzl:flavor_helpers.bzl", "flavor_helpers")
load("//antlir/bzl:image.bzl", "image")
load("//antlir/bzl:oss_shim.bzl", "rust_binary", "third_party")
load("//antlir/bzl/image/feature:defs.bzl", "feature")

image.layer(
    name = "setup",
    parent_layer = flavor_helpers.get_build_appliance(),
    features = [
        feature.rpms_install([
            "hostname",
        ]),
    ],
)

rust_binary(
    name = "nis_domainname",
    srcs = ["nis_domainname.rs"],
    allocator = "malloc",
    link_style = "static",
    nodefaultlibs = True,
    unittests = False,
    visibility = ["PUBLIC"],
    deps = third_party.libraries(
        [
            "nix",
            "clap",
        ],
        platform = "rust",
    ),
)

image.layer(
    name = "test-layer",
    parent_layer = ":setup",
    features = [
        feature.ensure_dirs_exist("/build"),
        feature.install(
            ":nis_domainname",
            "/build/nis_domainname",
            mode = "a+rx",
        ),
    ],
)

# Exercise both the "booted" and "unbooted" code paths, they differ slightly
[
    image.python_unittest(
        name = "test-nis-domainname-" + ("booted" if boot else "unbooted"),
        srcs = ["test_nis_domainname.py"],
        layer = ":test-layer",
        run_as_user = "root",
        boot = boot,
    )
    for boot in [
        False,
        True,
    ]
]
