# This file is intended to become a collection of utility features commonly
# used in constructing images.

load("//antlir/antlir2/bzl/feature:defs.bzl", "feature")

oncall("antlir")

# To remove a path in this feature it should match these criteria:
#  - its absence should makes the running image operate no less correctly
#    than before,
#  - the image does not become less human-understandable once it's gone, or
#    the considerable space savings justifies the loss of debuggability.
feature.new(
    name = "rpm_cleanup",
    antlir2 = True,
    features = [
        feature.remove(
            must_exist = False,
            path = "/var/cache/yum",
        ),
        feature.remove(
            must_exist = False,
            path = "/var/cache/dnf",
        ),
    ],
    visibility = ["PUBLIC"],
)

# Remove filesystem items that should ONLY be created at runtime, but might
# have leaked into an image at build-time due to bugs.  If an image is
# constructed only using supported `feature`s and `image.layer`
# operations, this clean-up should not be be necessary.  However, this can
# be useful for assimilating genrule-built images.
feature.new(
    name = "build_artifact_cleanup",
    antlir2 = True,
    # Since we generally build images for containers, we should make sure
    # that they do contain an empty machine-id. The system manager (PID 1)
    # will populate the file with a generated machine-id as the container
    # boots.
    #
    # The systemd RPM includes a call to `systemd-machine-id-setup` in its
    # %post script, which leaves a concrete /etc/machine-id file around.
    # We should truncate it here and ship an empty file instead.
    features = [
        feature.remove(
            must_exist = False,
            path = "/etc/machine-id",
        ),
        feature.install(
            src = "empty-machine-id",
            dst = "/etc/machine-id",
        ),
    ],
    visibility = ["PUBLIC"],
)
