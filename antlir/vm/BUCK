load("//antlir/bzl:constants.bzl", "REPO_CFG")
load("//antlir/bzl:image.bzl", "image")
load("//antlir/bzl:oss_shim.bzl", "buck_genrule", "export_file", "python_library", "python_unittest", "third_party")

# qemu roms to provide
roms = [
    "kvmvapic.bin",
    "linuxboot_dma.bin",
    "vgabios-stdvga.bin",
    "efi-virtio.rom",
]

buck_genrule(
    name = "roms",
    out = ".",
    cmd = " && ".join([
        "cp $(location {}) $OUT/".format(
            third_party.library(
                "qemu",
                "share/qemu/{}".format(rom),
            ),
        )
        for rom in roms
    ]),
)

python_library(
    name = "common",
    srcs = [
        "common.py",
    ],
)

python_library(
    name = "vm",
    srcs = [
        "guest_agent.py",
        "vm.py",
    ],
    resources = {
        # The actual emulator binary
        third_party.library("qemu"): "qemu",
        # The bios to boot the emulator with
        third_party.library("qemu", "share/qemu/bios-256k.bin"): "bios",
        ":roms": "roms",
    },
    deps = [
        ":share",
        "//antlir:config",
        "//antlir/compiler/items:mount",
    ],
)

python_library(
    name = "run",
    srcs = [
        "run.py",
    ],
    deps = [
        third_party.library(
            "click",
            platform = "python",
        ),
        ":common",
        ":vm",
    ],
)

# defines the `Share` dataclass for vm
python_library(
    name = "share",
    srcs = ["share.py"],
    deps = ["//antlir:fs_utils"],
)

export_file(
    name = "mount-generator",
    src = "mount-generator",
)

python_unittest(
    name = "test-share-generator",
    srcs = ["test_share_generator.py"],
    resources = {
        ":mount-generator": "mount-generator",
    },
    deps = [":share"],
)

python_library(
    name = "vmtest",
    srcs = [
        "vmtest.py",
    ],
    deps = [
        third_party.library(
            "click",
            platform = "python",
        ),
        ":common",
        ":share",
        ":vm",
        "//antlir:artifacts_dir",
    ],
)

# This will eventually be the default image used for vmtest both internally and
# externally, but for now is only used in the OSS antlir project.
image.layer(
    name = "default-image",
    parent_layer = REPO_CFG.build_appliance_default,
)

image.package(
    name = "default-image.btrfs",
)
