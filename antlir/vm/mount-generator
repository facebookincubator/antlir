#!/bin/sh
# Generate mount units for all exported 9pfs shares.
# This mounts all the filesystems at boot time in the location indicated by the
# mount tag, rather than mounting them with (explicit) static systemd units or
# runtime agent support for host-dependent paths.
# In the future, this could be generalized to simply copy pre-generated unit
# files from a well-known 9p mount tag, but for now the only case where the
# host needs to do change systemd units at runtime is for host-dependent 9pfs
# mountpoints.
echo "mount-generator: starting" > /dev/kmsg
set -e

normal_dir="$1"
# allow passing EXPORTS_DIR as a pre-mounted path for unit tests
exportsdir="$EXPORTS_DIR"
echo "mount-generator: $1 $EXPORTS_DIR" > /dev/kmsg

if [ -z "$exportsdir" ]; then
    # Usually these are already loaded, but in Antlir Linux this generator runs in
    # the initrd before systemd-modules-load.service
    # Ignore any errors in modprobe and assume that the modules are already
    # loaded, the next steps will still fail in an obvious way if 9p is not
    # actually present.
    echo "mount-generator: attempting to load 9p modules" > /dev/kmsg
    modprobe -a 9p 9pnet 9pnet_virtio || true

    exportsdir="/run/vmtest-exports"
    echo "mount-generator: creating $exportsdir" > /dev/kmsg
    mkdir -p "$exportsdir"
    echo "mount-generator: mounting exports in $exportsdir" > /dev/kmsg
    mount -t 9p -oversion=9p2000.L,posixacl,cache=loose exports "$exportsdir"
    echo "mount-generator: mounted exports in $exportsdir" > /dev/kmsg
    trap 'umount $exportsdir && rm -rf $exportsdir' EXIT
fi

mkdir -p "$normal_dir/local-fs.target.requires"
# when running in metalos, local-fs.target will have already been activated in
# the initrd, so we need to make it a dependency of the workload (which is sshd
# to run the test)
mkdir -p "$normal_dir/workload-pre.target.requires"

for unit in "$exportsdir"/*.mount
do
    echo "mount-generator: processing $unit" > /dev/kmsg
    cp "$unit" "$normal_dir"/
    unit="$(basename "$unit")"
    ln -s "$normal_dir/$unit" "$normal_dir/local-fs.target.requires/$unit"
    # In MetalOS vmtests, local-fs.target will be marked as completed in the
    # initrd, so add this mount unit to workload-pre.target.requires to ensure
    # it gets started before running the test (which is in workload.target)
    ln -s "$normal_dir/$unit" "$normal_dir/workload-pre.target.requires/$unit"
done
