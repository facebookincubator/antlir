load("//antlir/bzl:oss_shim.bzl", "buck_command_alias", "rust_binary", "rust_library")
load("//antlir/bzl:tool.bzl", "antlir_tool")

oncall("twimage")

rust_binary(
    name = "deb-snapshotter",
    srcs = [
        "snapshotter.rs",
    ],
    crate_root = "snapshotter.rs",
    test_srcs = [
        "test_data/sample_Package",
        "test_data/sample_Release",
    ],
    deps = [
        "anyhow",
        "bytes",
        "clap",
        "futures",
        "governor",
        "hex",
        "pest",
        "pest_derive",
        "reqwest",
        "slog",
        "slog-async",
        "slog-term",
        "xz2",
        ":blob-store",
        ":snapshotter-helpers",
        "//antlir:find_root",
        "//antlir/facebook:commit-deb-snapshot",
        "//antlir/filesystem/absolute_path:absolute_path",
        "//common/rust/shed/fbinit:fbinit",
        "//common/rust/shed/fbinit:fbinit-tokio",
        "//manifold/clients/rust:manifold_client",
    ],
)

rust_library(
    name = "snapshotter-helpers",
    srcs = ["snapshotter_helpers.rs"],
    crate_root = "snapshotter_helpers.rs",
    deps = [
        "anyhow",
        "byte-unit",
        "clap",
        "governor",
        "strum",
        "strum_macros",
    ],
)

rust_binary(
    name = "rpm-snapshotter",
    srcs = [
        "rpm_snapshots.rs",
    ],
    crate_root = "rpm_snapshots.rs",
    test_srcs = [
        "test_data/repomd_small.xml",
        "test_data/repomd_full.xml",
        "test_data/primary.xml",
        "test_data/repomd_rewrite.xml",
        "test_data/primary_rewrite.xml",
    ],
    visibility = ["PUBLIC"],
    deps = [
        "anyhow",
        "clap",
        "futures",
        "governor",
        "reqwest",
        "slog",
        "slog-async",
        "slog-term",
        ":blob-store",
        ":rpm-artifact-parser",
        ":snapshotter-helpers",
        "//common/rust/shed/fbinit:fbinit",
        "//common/rust/shed/fbinit:fbinit-tokio",
        "//manifold/clients/rust:manifold_client",
    ],
)

rust_library(
    name = "rpm-artifact-parser",
    srcs = [
        "rpm_artifact_parser.rs",
    ],
    crate_root = "rpm_artifact_parser.rs",
    test_srcs = [
        "test_data/repomd_small.xml",
        "test_data/repomd_full.xml",
        "test_data/primary.xml",
        "test_data/repomd_rewrite.xml",
        "test_data/primary_rewrite.xml",
    ],
    visibility = ["PUBLIC"],
    deps = [
        "anyhow",
        "bytes",
        "flate2",
        "hex",
        "quick-xml",
        "reqwest",
        "serde",
        "slog",
        ":blob-store",
        ":snapshotter-helpers",
    ],
)

rust_library(
    name = "blob-store",
    srcs = [
        "storage.rs",
    ],
    crate_root = "storage.rs",
    visibility = [
        "PUBLIC",
    ],
    deps = [
        "anyhow",
        "async-trait",
        "bytes",
        "governor",
        "hex",
        "http",
        "reqwest",
        "sha2",
        "slog",
        "tokio-retry",
        "//manifold/clients/rust:manifold_client",
    ],
)

antlir_tool(
    name = "apt-proxy",
    srcs = [
        "proxy.rs",
    ],
    crate_root = "proxy.rs",
    linker_flags = [
        "-Wl,--strip-all",
    ],
    rule = rust_binary,
    deps = [
        "anyhow",
        "clap",
        "log",
        "pretty_env_logger",
        "tokio",
        "tokio-stream",
        "urlencoding",
        "warp",
        ":blob-store",
        "//common/rust/shed/fbinit:fbinit",
        "//common/rust/shed/fbinit:fbinit-tokio",
        "//manifold/clients/rust:manifold_client",
    ],
)

buck_command_alias(
    name = "run-snapshotter",
    args = [
        "--repourl",
        "https://mirror.facebook.net/ubuntu/",
        "--flavor",
        "ubuntu",
        "--distro",
        "jammy",
        "--arch",
        "amd64",
        "--readqps",
        "300",
        "--writeqps",
        "300",
        "--writethroughput",
        "400MB",
    ],
    exe = ":deb-snapshotter",
)
