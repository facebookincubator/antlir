# Copyright (c) Meta Platforms, Inc. and affiliates.
#
# This source code is licensed under the MIT license found in the
# LICENSE file in the root directory of this source tree.

def _impl(ctx):
    tests = ctx.uquery().kind(".*_test", ctx.cli_args.pattern)

    tests = tests - ctx.uquery().attrregexfilter("labels", "disabled", tests)
    disable = ctx.unconfigured_targets([t for disable in ctx.cli_args.disable for t in disable])
    tests = tests - disable

    shard, n_shards = ctx.cli_args.shard.split("/", 1)
    shard, n_shards = int(shard), int(n_shards)
    sharded_tests = []
    for test in tests:
        label = str(test.label)
        sha = int(sha256(label), 16)
        test_shard = (sha % n_shards) + 1
        if test_shard == shard:
            sharded_tests.append(label)

    ctx.output.print("\n".join(sharded_tests))

find_tests = bxl_main(
    impl = _impl,
    cli_args = {
        "disable": cli_args.list(cli_args.target_expr(), default = []),
        "pattern": cli_args.list(cli_args.string(), default = ["antlir//..."]),
        "shard": cli_args.string(default = "1/1"),
    },
)
